{"version":3,"sources":["data/urls.ts","data/app/reducer.tsx","data/app/store.tsx","data/country-code-to-name.ts","data/currency-code-to-name.ts","hooks/store.ts","componentsStyled/Typography.tsx","hooks/http.ts","componentsStyled/Card.tsx","pages/Account/AccountDetail/AccountDetailCard/index.tsx","pages/Account/AccountDetail/index.tsx","components/DateOfBirthInput/index.tsx","pages/Account/AccountPersonalInfoEdit/AccountPersonalInfoForm/index.tsx","pages/Account/AccountPersonalInfoEdit/index.tsx","components/PasswordInput/index.tsx","pages/Account/AccountSecurityInfoEdit/AccountSecurityInfoForm/index.tsx","pages/Account/AccountSecurityInfoEdit/index.tsx","App/styled.tsx","pages/_Page/styled.tsx","pages/_Page/index.tsx","pages/Account/index.tsx","pages/AdvancedSearch/tableDefinition.tsx","pages/AdvancedSearch/index.tsx","components/MainChart/index.tsx","pages/Asset/AssetView/index.tsx","pages/Asset/index.tsx","components/AssetSearchBox/index.tsx","componentsStyled/Button.tsx","pages/Compare/GraphCard/graphDefinitions.tsx","pages/Compare/GraphCard/index.tsx","pages/Compare/GraphCard/helper.tsx","pages/Compare/index.tsx","pages/Explore/index.tsx","pages/Forgot/index.tsx","pages/Leaderboard/index.tsx","pages/LogIn/index.tsx","pages/PasswordReset/index.tsx","pages/Portfolio/HoldingHistory/index.tsx","pages/Portfolio/PortfolioAssetCSVUpload/index.tsx","components/UserAssetSearchBox/index.tsx","pages/Portfolio/PortfolioAssetEditForm/index.tsx","pages/Portfolio/PortfolioAssetCreate/index.tsx","pages/Portfolio/PortfolioEditForm/index.tsx","pages/Portfolio/PortfolioCreate/index.tsx","componentsStyled/Grid.tsx","components/PortfolioCard/index.tsx","pages/Portfolio/PortfolioDetail/index.tsx","pages/Portfolio/PortfolioEdit/index.tsx","pages/Portfolio/PortfolioHistory/index.tsx","pages/Portfolio/PortfolioList/PaginatedPortfolioDisplay/index.tsx","pages/Portfolio/PortfolioList/index.tsx","pages/Portfolio/index.tsx","pages/Report/ReportGenerate/index.tsx","pages/Report/ReportLanding/index.tsx","pages/Report/index.tsx","pages/SignUp/index.tsx","data/tableDefinitions/assets.tsx","pages/TopAdditions/tableDefinitions.tsx","pages/TopAdditions/index.tsx","pages/Watchlists/NotifyContent/helper.tsx","pages/Watchlists/NotifyContent/index.tsx","pages/Watchlists/index.tsx","pages/Watchlists/tableDefinitions.tsx","App/Routes/index.tsx","App/SideBar/index.tsx","components/NavbarSearchBox/index.tsx","components/NavBar/index.tsx","App/index.tsx","index.tsx"],"names":["urls","Reducer","state","action","type","isLoggedIn","accessToken","payload","refreshToken","userId","searchParams","currentPage","queryParams","cachedData","undefined","initialStoreContext","dispatch","_a","storeContext","createContext","Provider","STORAGE_KEY","Store","children","storedStore","localStorage","getItem","savedValues","JSON","parse","useReducer","useEffect","setItem","stringify","value","countryCodeToName","currencyCodeToName","USD","symbol","name","symbol_native","decimal_digits","rounding","code","name_plural","AUD","useStore","useContext","useUserId","useIsLoggedIn","useSortedCountryList","Object","entries","sort","a","b","marginBottom","css","Title","styled","div","h1","Subtitle","h2","Text","span","props","color","bold","className","href","target","rel","abstractFetch","fetchInput","revalidateAccessToken","setData","setIsLoading","url","method","values","redirectPath","routerObject","isExpired","fetch","headers","Accept","Authorization","body","response","json","data","ok","msg","Error","statusText","push","message","useAbstractFetchOnMount","refreshFlag","useState","isLoading","useAccessToken","useHistory","error","myFetch","useAbstractFetchUpdate","results","console","log","access_token","useFetchGetWithUserId","urlEnd","endPointUrl","useGetPortfolioInfo","portfolioId","useGetPortfolioHistory","useAdvancedSearch","query","useAbstractFetchOnSubmit","useAuth","authType","refresh_token","jwt_decode","sub","useUpdateAccountInfo","useAddPortfolioEvent","Card","AntCard","AccountDetailCard","investor","style","width","marginTop","size","column","bordered","Item","label","username","email","first_name","last_name","gender","country_of_residency","date_of_birth","join_date","visibility","danger","marginRight","to","AccountDetail","isEmpty","DateOfBirthInput","initialValue","rules","required","validator","_","length","test","Promise","resolve","reject","AccountPersonalInfoForm","investorData","countryList","countryElement","find","element","initialValues","onFinish","showSearch","map","Option","textAlign","htmlType","AccountPersonalInfoEdit","ValidationError","split","PasswordInput","Password","AccountSecurityInfoForm","title","confirm","dependencies","hasFeedback","getFieldValue","AccountSecurityInfoEdit","AppWrap","ContentWrap","Header","Layout","Content","Sider","PageWrap","SiderWrap","MenuItemWrap","Menu","SidebarWrap","LogoWrap","headerHeight","HeaderWrap","BodyWrap","FooterWrap","Page","Account","exact","path","component","assetColumns","dataIndex","render","asset_additional","focus","longName","regularMarketChange","fmt","marketCap","fiftyTwoWeekHigh","fiftyTwoWeekLow","withRouter","URLSearchParams","useLocation","search","Form","useForm","form","useAdvancedSearchParams","dataDisplay","get","setFieldsValue","textInput","getFieldsValue","queryPrefix","industryInput","exchangeInput","join","order","order_direction","onChange","pagination","current","orderValue","orderDirection","height","remember","placeholder","has","delete","replace","toString","mode","Group","options","defaultValue","optionType","buttonStyle","overflowX","columns","dataSource","rowKey","total","showSizeChanger","pageSize","exporting","Highcharts","offlineExporting","exportData","accessibility","indicatorsAll","dragPanes","annotationsAdvanced","priceIndicator","fullScreen","stockTools","drilldown","boost","MainChart","navigation","iconsURL","customType","gui","enabled","highcharts","containerProps","Select","getColorOfValue","AssetView","ticker_symbol","useParams","asset_card","graph_card","api_part","status","useFetchAPIPublicData","graphData","setGraphData","chartRef","setChartRef","seriesData","setSeriesData","seriesContext","setSeriesContext","asset","current_price","regularMarketVolume","trailingPE","trailingAnnualDividendRate","epsTrailingTwelveMonths","forEach","e","gutter","precision","valueStyle","ohlc","Date","UTC","volume","text","yAxis","labels","align","resize","top","offset","rangeSelector","buttons","count","type_full","inputEnabled","selected","xAxis","events","afterSetExtremes","chart","showLoading","rangeSelectorButton","hideLoading","minRange","tooltip","shape","headerShape","borderWidth","valueDecimals","shadow","positioner","point","this","isHeader","x","Math","max","plotLeft","min","plotX","chartWidth","y","plotY","series","plotTop","constructorType","addToWatchlist","setChildren","fetchPortfolioData","tmpChildren","tmpChildren2","id","dataGrouping","placement","arrowPointAtCenter","onClick","marginLeft","trigger","content","pathname","portfolio","update","Asset","DebounceSelect","fetchOptions","debounceTimeout","fetching","setFetching","setOptions","fetchRef","useRef","debounceFetcher","useMemo","debounce","fetchId","then","newOptions","labelInValue","filterOption","onSearch","notFoundContent","fetchUserList","hasOwnProperty","item","key","AssetSearchBox","Button","AntButton","seriesIndex","GraphCard","tickers","tmpSeriesData","useGPUTranslations","seriesThreshold","allButtonsEnabled","findIndex","seriesSelected","createGraphOptions","ohlcSet","volumeSet","singleGraphData","getFullYear","convertGraphDataToSeries","Compare","setTickers","getChartData","chartDataUrl","useGetChartData","afterSetExtremesPrototype","tmpTickers","asset_id","info","newGraphData","Explore","justify","minHeight","Forgot","useIForgot","prefix","UserOutlined","disabled","loading","Leaderboard","setEntries","userEntries","setUserEntries","useFetchAPIPublicOrLoggedInData","numberChangeRenderer","testVal","record","parseFloat","toFixed","valueColumns","brag_icon","CrownOutlined","textDecoration","Investor","tableData","Rank","rank","Score","competition_score","buying_power","current_value_sum","purchase_value_sum","Unrealised","realised_sum","public_portfolio","userPortfolios","portfolios","tmpEntries","tmpUserEntries","rowClassName","LogIn","submit","LockOutlined","layout","labelCol","wrapperCol","tailLayout","PasswordReset","urlParams","window","location","evc","display","PortfolioHistory","hid","historyTable","assetHistories","filter","formItemLayout","xs","sm","PortfolioAssetEditForm","fileList","setFileList","formData","FormData","file","append","PlusOutlined","noStyle","Dragger","beforeUpload","onRemove","index","indexOf","newFileList","slice","splice","InboxOutlined","UserAssetSearchBox","portfolioid","search_simple","data-holdings","available_units","portfolioInfo","addActionValue","setAddActionValue","holdings","setHoldings","pricePerShare","setPricePerShare","currentTicker","setCurrentTicker","units","setUnits","add_action","fees","note","price_per_share","exchange_rate","newValue","competition_portfolio","price","PortfolioAssetCreate","PortfolioAssetCSVUpload","PortfolioEditForm","currencyList","hideCurrency","setHideCurrency","description","tax_residency","creation_date","currency","currencyElement","setValuesAndFetch","methodInput","useUpdatePortfolioInfo","defaultChecked","PortfolioCreate","Row","PortfolioCard","refreshPortfolios","singleView","useDeleteAssetPortfolioHolding","getAttribute","portfolio_id","float","aria-valuenow","isPortfolioEmpty","portfolio_asset_holding","onDeletePortfolio","success","cardTitle","padding","subTitle","tags","extra","bodyStyle","paddingTop","actions","SettingOutlined","EyeOutlined","recommended","PortfolioDetail","setRefreshFlag","useFetchGetPublicPortfolio","PortfolioEdit","histories","PaginatedPortfolioDisplay","portfolioPagination","PortfolioList","Portfolio","HoldingHistory","RangePicker","DatePicker","ReportGenerate","React","defaultChildren","setDefaultChildren","hideDate","setHideDate","reportMode","setReportMode","chartOptions","setChartOptions","report_type","subtitle","announceNewData","valueSuffix","plotOptions","dataLabels","format","distance","showInLegend","headerFormat","pointFormat","initDate","optionsValue","moment","subtract","ReportLanding","Report","SignUp","requestBody","countryOfResidency","firstName","lastName","password","portfolioColumns","TopAdditions","assets","datas","Fragment","validatePriceInput","context","currentPrice","assetId","openMessage","notification","NotifyContent","refreshAfterNotificationSet","setRefreshAfterNotificationSet","updateWatchListItem","useUpdateWatchListItem","updatePrice","Watchlists","watchlist","deleteAssetId","useDeleteWatchListItem","addWatchListItem","tickerSymbol","useAddWatchListItem","deleteWatchListItem","watchlistable","watchlistresults","watchlistitems","price_high","price_low","price_high_low","createWatchListColumns","Routes","AdvancedSearch","Logo","src","SideBar","collapsed","sideBar","itemsWhenNotLoggedIn","icon","itemsWhenLoggedIn","sideBarItems","defaultSelectedKeys","selectedKeys","border","NavbarSearchBox","setSearch","onSubmit","event","preventDefault","NavBar","logoutButton","App","setCollapsed","collapsible","theme","data-collapsed","createElement","MenuUnfoldOutlined","MenuFoldOutlined","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cad65b1f.chunk.js","sourcesContent":["export const urls = {\r\n  root: '/',\r\n  login: '/login',\r\n  forgot: '/forgot',\r\n  passwordReset: '/reset',\r\n  signup: '/signup',\r\n  portfolioDetails: '/portfolio-details',\r\n  account: '/account',\r\n  portfolio: '/portfolio',\r\n  asset: '/asset',\r\n  watchlists: '/watchlists',\r\n  report: '/report',\r\n  explore: '/explore',\r\n  leaderboard: '/leaderboard',\r\n  compare: '/compare',\r\n  topAdditions: '/top-additions',\r\n  advancedSearch: '/advanced-search'\r\n}\r\n","\nconst Reducer = (state: any, action: any) => {\n    switch (action.type) {\n        case 'LOGIN':\n            return {\n                ...state,\n                isLoggedIn: true,\n                accessToken: action.payload.accessToken,\n                refreshToken: action.payload.refreshToken,\n                userId: action.payload.userId,\n                searchParams: {\n                    currentPage: 1,\n                    queryParams: '',\n                    cachedData: undefined,\n                }\n            };\n        case 'LOGOUT':\n            return {\n                ...state,\n                isLoggedIn: false,\n                accessToken: '',\n                refreshToken: '',\n                userId: undefined,\n                searchParams: {\n                    currentPage: 1,\n                    queryParams: '',\n                    cachedData: undefined,\n                }\n            };\n        case 'REFRESH_TOKEN':\n            return {\n                ...state,\n                accessToken: action.payload.accessToken,\n            };\n        case 'ADV_SEARCH/UPDATE':\n            return {\n                ...state,\n                searchParams: {\n                    ...action.payload\n                }\n            };\n        default:\n            return state;\n    }\n};\n\nexport default Reducer;","import Reducer from '@rocketmaven/data/app/reducer';\nimport React, { createContext, Dispatch, useEffect, useReducer } from \"react\";\n\n// https://dev.to/bigaru/creating-persistent-synchronized-global-store-using-react-hooks-in-typescript-209a\n// https://blog.logrocket.com/use-hooks-and-context-not-react-and-redux/#usecontext\n\n// Note(Jude): Basic implementation of login state management, will most\n// likely have to adjust as I become more familiar with JWT authentiaction\n// TODO(Jude): clean up store\n// TODO(Jude): Implement state persistence on refresh\n// TODO(Jude): Implement accessTokens securely -> HTTPOnly cookie\n\ntype Context = { state: AppState; dispatch: Dispatch<Action> }\n\ninterface AdvancedSearchUpdate {\n  type: 'ADV_SEARCH/UPDATE'\n  payload: {\n    currentPage: number,\n    queryParams: string,\n    cachedData?: any[],\n  }\n}\n\ninterface LoginAction {\n  type: 'LOGIN'\n  payload: {\n    accessToken: string,\n    refreshToken: string,\n    userId: number,\n  }\n}\n\ninterface LogoutAction {\n  type: 'LOGOUT'\n}\n\ninterface RefreshTokenAction {\n  type: 'REFRESH_TOKEN'\n  payload: {\n    accessToken: string,\n  }\n}\n\ntype Action =\n  | LoginAction\n  | LogoutAction\n  | RefreshTokenAction\n  | AdvancedSearchUpdate\n\n\ntype SearchParams = {\n  currentPage: number,\n  queryParams: string,\n  // Pagination results\n  cachedData?: any\n}\ninterface AppState {\n  isLoggedIn: boolean,\n  accessToken: string,\n  refreshToken: string,\n  searchParams: SearchParams,\n  userId?: number,\n}\n\nconst initialStoreContext: Context = {\n  state: {\n    isLoggedIn: false,\n    accessToken: '',\n    refreshToken: '',\n    searchParams: {\n      currentPage: 1,\n      queryParams: '',\n      cachedData: undefined,\n    },\n    userId: undefined,\n  },\n  dispatch: (_a: any) => { },\n}\n\nconst storeContext = createContext(initialStoreContext)\n\nconst { Provider } = storeContext\n\ntype Props = {\n  children: React.ReactNode\n}\n\nconst STORAGE_KEY = 'ROCKETMAVEN_REACT_STORE'\n\n// What is the difference between PropsWithChildren and React.ReactNode?\nconst Store = ({ children }: Props) => {\n  const storedStore = localStorage.getItem(STORAGE_KEY)\n  const savedValues = storedStore ? JSON.parse(storedStore) : null\n  const [state, dispatch] = useReducer(Reducer, savedValues || initialStoreContext.state);\n  useEffect(() => {\n    localStorage.setItem(STORAGE_KEY, JSON.stringify(state));\n  }, [state]);\n  return (\n    <Provider value={{ state, dispatch }}>\n      {children}\n    </Provider>\n  )\n}\n\nexport { Store, storeContext };\n\n","// Attained from http://country.io/data/\r\nexport const countryCodeToName = {\"BD\": \"Bangladesh\", \"BE\": \"Belgium\", \"BF\": \"Burkina Faso\", \"BG\": \"Bulgaria\", \"BA\": \"Bosnia and Herzegovina\", \"BB\": \"Barbados\", \"WF\": \"Wallis and Futuna\", \"BL\": \"Saint Barthelemy\", \"BM\": \"Bermuda\", \"BN\": \"Brunei\", \"BO\": \"Bolivia\", \"BH\": \"Bahrain\", \"BI\": \"Burundi\", \"BJ\": \"Benin\", \"BT\": \"Bhutan\", \"JM\": \"Jamaica\", \"BV\": \"Bouvet Island\", \"BW\": \"Botswana\", \"WS\": \"Samoa\", \"BQ\": \"Bonaire, Saint Eustatius and Saba \", \"BR\": \"Brazil\", \"BS\": \"Bahamas\", \"JE\": \"Jersey\", \"BY\": \"Belarus\", \"BZ\": \"Belize\", \"RU\": \"Russia\", \"RW\": \"Rwanda\", \"RS\": \"Serbia\", \"TL\": \"East Timor\", \"RE\": \"Reunion\", \"TM\": \"Turkmenistan\", \"TJ\": \"Tajikistan\", \"RO\": \"Romania\", \"TK\": \"Tokelau\", \"GW\": \"Guinea-Bissau\", \"GU\": \"Guam\", \"GT\": \"Guatemala\", \"GS\": \"South Georgia and the South Sandwich Islands\", \"GR\": \"Greece\", \"GQ\": \"Equatorial Guinea\", \"GP\": \"Guadeloupe\", \"JP\": \"Japan\", \"GY\": \"Guyana\", \"GG\": \"Guernsey\", \"GF\": \"French Guiana\", \"GE\": \"Georgia\", \"GD\": \"Grenada\", \"GB\": \"United Kingdom\", \"GA\": \"Gabon\", \"SV\": \"El Salvador\", \"GN\": \"Guinea\", \"GM\": \"Gambia\", \"GL\": \"Greenland\", \"GI\": \"Gibraltar\", \"GH\": \"Ghana\", \"OM\": \"Oman\", \"TN\": \"Tunisia\", \"JO\": \"Jordan\", \"HR\": \"Croatia\", \"HT\": \"Haiti\", \"HU\": \"Hungary\", \"HK\": \"Hong Kong\", \"HN\": \"Honduras\", \"HM\": \"Heard Island and McDonald Islands\", \"VE\": \"Venezuela\", \"PR\": \"Puerto Rico\", \"PS\": \"Palestinian Territory\", \"PW\": \"Palau\", \"PT\": \"Portugal\", \"SJ\": \"Svalbard and Jan Mayen\", \"PY\": \"Paraguay\", \"IQ\": \"Iraq\", \"PA\": \"Panama\", \"PF\": \"French Polynesia\", \"PG\": \"Papua New Guinea\", \"PE\": \"Peru\", \"PK\": \"Pakistan\", \"PH\": \"Philippines\", \"PN\": \"Pitcairn\", \"PL\": \"Poland\", \"PM\": \"Saint Pierre and Miquelon\", \"ZM\": \"Zambia\", \"EH\": \"Western Sahara\", \"EE\": \"Estonia\", \"EG\": \"Egypt\", \"ZA\": \"South Africa\", \"EC\": \"Ecuador\", \"IT\": \"Italy\", \"VN\": \"Vietnam\", \"SB\": \"Solomon Islands\", \"ET\": \"Ethiopia\", \"SO\": \"Somalia\", \"ZW\": \"Zimbabwe\", \"SA\": \"Saudi Arabia\", \"ES\": \"Spain\", \"ER\": \"Eritrea\", \"ME\": \"Montenegro\", \"MD\": \"Moldova\", \"MG\": \"Madagascar\", \"MF\": \"Saint Martin\", \"MA\": \"Morocco\", \"MC\": \"Monaco\", \"UZ\": \"Uzbekistan\", \"MM\": \"Myanmar\", \"ML\": \"Mali\", \"MO\": \"Macao\", \"MN\": \"Mongolia\", \"MH\": \"Marshall Islands\", \"MK\": \"Macedonia\", \"MU\": \"Mauritius\", \"MT\": \"Malta\", \"MW\": \"Malawi\", \"MV\": \"Maldives\", \"MQ\": \"Martinique\", \"MP\": \"Northern Mariana Islands\", \"MS\": \"Montserrat\", \"MR\": \"Mauritania\", \"IM\": \"Isle of Man\", \"UG\": \"Uganda\", \"TZ\": \"Tanzania\", \"MY\": \"Malaysia\", \"MX\": \"Mexico\", \"IL\": \"Israel\", \"FR\": \"France\", \"IO\": \"British Indian Ocean Territory\", \"SH\": \"Saint Helena\", \"FI\": \"Finland\", \"FJ\": \"Fiji\", \"FK\": \"Falkland Islands\", \"FM\": \"Micronesia\", \"FO\": \"Faroe Islands\", \"NI\": \"Nicaragua\", \"NL\": \"Netherlands\", \"NO\": \"Norway\", \"NA\": \"Namibia\", \"VU\": \"Vanuatu\", \"NC\": \"New Caledonia\", \"NE\": \"Niger\", \"NF\": \"Norfolk Island\", \"NG\": \"Nigeria\", \"NZ\": \"New Zealand\", \"NP\": \"Nepal\", \"NR\": \"Nauru\", \"NU\": \"Niue\", \"CK\": \"Cook Islands\", \"XK\": \"Kosovo\", \"CI\": \"Ivory Coast\", \"CH\": \"Switzerland\", \"CO\": \"Colombia\", \"CN\": \"China\", \"CM\": \"Cameroon\", \"CL\": \"Chile\", \"CC\": \"Cocos Islands\", \"CA\": \"Canada\", \"CG\": \"Republic of the Congo\", \"CF\": \"Central African Republic\", \"CD\": \"Democratic Republic of the Congo\", \"CZ\": \"Czech Republic\", \"CY\": \"Cyprus\", \"CX\": \"Christmas Island\", \"CR\": \"Costa Rica\", \"CW\": \"Curacao\", \"CV\": \"Cape Verde\", \"CU\": \"Cuba\", \"SZ\": \"Swaziland\", \"SY\": \"Syria\", \"SX\": \"Sint Maarten\", \"KG\": \"Kyrgyzstan\", \"KE\": \"Kenya\", \"SS\": \"South Sudan\", \"SR\": \"Suriname\", \"KI\": \"Kiribati\", \"KH\": \"Cambodia\", \"KN\": \"Saint Kitts and Nevis\", \"KM\": \"Comoros\", \"ST\": \"Sao Tome and Principe\", \"SK\": \"Slovakia\", \"KR\": \"South Korea\", \"SI\": \"Slovenia\", \"KP\": \"North Korea\", \"KW\": \"Kuwait\", \"SN\": \"Senegal\", \"SM\": \"San Marino\", \"SL\": \"Sierra Leone\", \"SC\": \"Seychelles\", \"KZ\": \"Kazakhstan\", \"KY\": \"Cayman Islands\", \"SG\": \"Singapore\", \"SE\": \"Sweden\", \"SD\": \"Sudan\", \"DO\": \"Dominican Republic\", \"DM\": \"Dominica\", \"DJ\": \"Djibouti\", \"DK\": \"Denmark\", \"VG\": \"British Virgin Islands\", \"DE\": \"Germany\", \"YE\": \"Yemen\", \"DZ\": \"Algeria\", \"US\": \"United States\", \"UY\": \"Uruguay\", \"YT\": \"Mayotte\", \"UM\": \"United States Minor Outlying Islands\", \"LB\": \"Lebanon\", \"LC\": \"Saint Lucia\", \"LA\": \"Laos\", \"TV\": \"Tuvalu\", \"TW\": \"Taiwan\", \"TT\": \"Trinidad and Tobago\", \"TR\": \"Turkey\", \"LK\": \"Sri Lanka\", \"LI\": \"Liechtenstein\", \"LV\": \"Latvia\", \"TO\": \"Tonga\", \"LT\": \"Lithuania\", \"LU\": \"Luxembourg\", \"LR\": \"Liberia\", \"LS\": \"Lesotho\", \"TH\": \"Thailand\", \"TF\": \"French Southern Territories\", \"TG\": \"Togo\", \"TD\": \"Chad\", \"TC\": \"Turks and Caicos Islands\", \"LY\": \"Libya\", \"VA\": \"Vatican\", \"VC\": \"Saint Vincent and the Grenadines\", \"AE\": \"United Arab Emirates\", \"AD\": \"Andorra\", \"AG\": \"Antigua and Barbuda\", \"AF\": \"Afghanistan\", \"AI\": \"Anguilla\", \"VI\": \"U.S. Virgin Islands\", \"IS\": \"Iceland\", \"IR\": \"Iran\", \"AM\": \"Armenia\", \"AL\": \"Albania\", \"AO\": \"Angola\", \"AQ\": \"Antarctica\", \"AS\": \"American Samoa\", \"AR\": \"Argentina\", \"AU\": \"Australia\", \"AT\": \"Austria\", \"AW\": \"Aruba\", \"IN\": \"India\", \"AX\": \"Aland Islands\", \"AZ\": \"Azerbaijan\", \"IE\": \"Ireland\", \"ID\": \"Indonesia\", \"UA\": \"Ukraine\", \"QA\": \"Qatar\", \"MZ\": \"Mozambique\"}","// Attained from https://gist.github.com/Fluidbyte/2973986\nexport const currencyCodeToName = {\n  USD: {\n    symbol: '$',\n    name: 'US Dollar',\n    symbol_native: '$',\n    decimal_digits: 2,\n    rounding: 0,\n    code: 'USD',\n    name_plural: 'US dollars'\n  },\n  /*\n  CAD: {\n    symbol: 'CA$',\n    name: 'Canadian Dollar',\n    symbol_native: '$',\n    decimal_digits: 2,\n    rounding: 0,\n    code: 'CAD',\n    name_plural: 'Canadian dollars'\n  },\n  EUR: {\n    symbol: '€',\n    name: 'Euro',\n    symbol_native: '€',\n    decimal_digits: 2,\n    rounding: 0,\n    code: 'EUR',\n    name_plural: 'euros'\n  },\n  AED: {\n    symbol: 'AED',\n    name: 'United Arab Emirates Dirham',\n    symbol_native: 'د.إ.‏',\n    decimal_digits: 2,\n    rounding: 0,\n    code: 'AED',\n    name_plural: 'UAE dirhams'\n  },\n  AFN: {\n    symbol: 'Af',\n    name: 'Afghan Afghani',\n    symbol_native: '؋',\n    decimal_digits: 0,\n    rounding: 0,\n    code: 'AFN',\n    name_plural: 'Afghan Afghanis'\n  },\n  ALL: {\n    symbol: 'ALL',\n    name: 'Albanian Lek',\n    symbol_native: 'Lek',\n    decimal_digits: 0,\n    rounding: 0,\n    code: 'ALL',\n    name_plural: 'Albanian lekë'\n  },\n  AMD: {\n    symbol: 'AMD',\n    name: 'Armenian Dram',\n    symbol_native: 'դր.',\n    decimal_digits: 0,\n    rounding: 0,\n    code: 'AMD',\n    name_plural: 'Armenian drams'\n  },\n  ARS: {\n    symbol: 'AR$',\n    name: 'Argentine Peso',\n    symbol_native: '$',\n    decimal_digits: 2,\n    rounding: 0,\n    code: 'ARS',\n    name_plural: 'Argentine pesos'\n  },\n  */\n  AUD: {\n    symbol: 'AU$',\n    name: 'Australian Dollar',\n    symbol_native: '$',\n    decimal_digits: 2,\n    rounding: 0,\n    code: 'AUD',\n    name_plural: 'Australian dollars'\n  }\n  /*\n  AZN: {\n    symbol: 'man.',\n    name: 'Azerbaijani Manat',\n    symbol_native: 'ман.',\n    decimal_digits: 2,\n    rounding: 0,\n    code: 'AZN',\n    name_plural: 'Azerbaijani manats'\n  },\n  BAM: {\n    symbol: 'KM',\n    name: 'Bosnia-Herzegovina Convertible Mark',\n    symbol_native: 'KM',\n    decimal_digits: 2,\n    rounding: 0,\n    code: 'BAM',\n    name_plural: 'Bosnia-Herzegovina convertible marks'\n  },\n  BDT: {\n    symbol: 'Tk',\n    name: 'Bangladeshi Taka',\n    symbol_native: '৳',\n    decimal_digits: 2,\n    rounding: 0,\n    code: 'BDT',\n    name_plural: 'Bangladeshi takas'\n  },\n  BGN: {\n    symbol: 'BGN',\n    name: 'Bulgarian Lev',\n    symbol_native: 'лв.',\n    decimal_digits: 2,\n    rounding: 0,\n    code: 'BGN',\n    name_plural: 'Bulgarian leva'\n  },\n  BHD: {\n    symbol: 'BD',\n    name: 'Bahraini Dinar',\n    symbol_native: 'د.ب.‏',\n    decimal_digits: 3,\n    rounding: 0,\n    code: 'BHD',\n    name_plural: 'Bahraini dinars'\n  },\n  BIF: {\n    symbol: 'FBu',\n    name: 'Burundian Franc',\n    symbol_native: 'FBu',\n    decimal_digits: 0,\n    rounding: 0,\n    code: 'BIF',\n    name_plural: 'Burundian francs'\n  },\n  BND: {\n    symbol: 'BN$',\n    name: 'Brunei Dollar',\n    symbol_native: '$',\n    decimal_digits: 2,\n    rounding: 0,\n    code: 'BND',\n    name_plural: 'Brunei dollars'\n  },\n  BOB: {\n    symbol: 'Bs',\n    name: 'Bolivian Boliviano',\n    symbol_native: 'Bs',\n    decimal_digits: 2,\n    rounding: 0,\n    code: 'BOB',\n    name_plural: 'Bolivian bolivianos'\n  },\n  BRL: {\n    symbol: 'R$',\n    name: 'Brazilian Real',\n    symbol_native: 'R$',\n    decimal_digits: 2,\n    rounding: 0,\n    code: 'BRL',\n    name_plural: 'Brazilian reals'\n  },\n  BWP: {\n    symbol: 'BWP',\n    name: 'Botswanan Pula',\n    symbol_native: 'P',\n    decimal_digits: 2,\n    rounding: 0,\n    code: 'BWP',\n    name_plural: 'Botswanan pulas'\n  },\n  BYN: {\n    symbol: 'Br',\n    name: 'Belarusian Ruble',\n    symbol_native: 'руб.',\n    decimal_digits: 2,\n    rounding: 0,\n    code: 'BYN',\n    name_plural: 'Belarusian rubles'\n  },\n  BZD: {\n    symbol: 'BZ$',\n    name: 'Belize Dollar',\n    symbol_native: '$',\n    decimal_digits: 2,\n    rounding: 0,\n    code: 'BZD',\n    name_plural: 'Belize dollars'\n  },\n  CDF: {\n    symbol: 'CDF',\n    name: 'Congolese Franc',\n    symbol_native: 'FrCD',\n    decimal_digits: 2,\n    rounding: 0,\n    code: 'CDF',\n    name_plural: 'Congolese francs'\n  },\n  CHF: {\n    symbol: 'CHF',\n    name: 'Swiss Franc',\n    symbol_native: 'CHF',\n    decimal_digits: 2,\n    rounding: 0.05,\n    code: 'CHF',\n    name_plural: 'Swiss francs'\n  },\n  CLP: {\n    symbol: 'CL$',\n    name: 'Chilean Peso',\n    symbol_native: '$',\n    decimal_digits: 0,\n    rounding: 0,\n    code: 'CLP',\n    name_plural: 'Chilean pesos'\n  },\n  CNY: {\n    symbol: 'CN¥',\n    name: 'Chinese Yuan',\n    symbol_native: 'CN¥',\n    decimal_digits: 2,\n    rounding: 0,\n    code: 'CNY',\n    name_plural: 'Chinese yuan'\n  },\n  COP: {\n    symbol: 'CO$',\n    name: 'Colombian Peso',\n    symbol_native: '$',\n    decimal_digits: 0,\n    rounding: 0,\n    code: 'COP',\n    name_plural: 'Colombian pesos'\n  },\n  CRC: {\n    symbol: '₡',\n    name: 'Costa Rican Colón',\n    symbol_native: '₡',\n    decimal_digits: 0,\n    rounding: 0,\n    code: 'CRC',\n    name_plural: 'Costa Rican colóns'\n  },\n  CVE: {\n    symbol: 'CV$',\n    name: 'Cape Verdean Escudo',\n    symbol_native: 'CV$',\n    decimal_digits: 2,\n    rounding: 0,\n    code: 'CVE',\n    name_plural: 'Cape Verdean escudos'\n  },\n  CZK: {\n    symbol: 'Kč',\n    name: 'Czech Republic Koruna',\n    symbol_native: 'Kč',\n    decimal_digits: 2,\n    rounding: 0,\n    code: 'CZK',\n    name_plural: 'Czech Republic korunas'\n  },\n  DJF: {\n    symbol: 'Fdj',\n    name: 'Djiboutian Franc',\n    symbol_native: 'Fdj',\n    decimal_digits: 0,\n    rounding: 0,\n    code: 'DJF',\n    name_plural: 'Djiboutian francs'\n  },\n  DKK: {\n    symbol: 'Dkr',\n    name: 'Danish Krone',\n    symbol_native: 'kr',\n    decimal_digits: 2,\n    rounding: 0,\n    code: 'DKK',\n    name_plural: 'Danish kroner'\n  },\n  DOP: {\n    symbol: 'RD$',\n    name: 'Dominican Peso',\n    symbol_native: 'RD$',\n    decimal_digits: 2,\n    rounding: 0,\n    code: 'DOP',\n    name_plural: 'Dominican pesos'\n  },\n  DZD: {\n    symbol: 'DA',\n    name: 'Algerian Dinar',\n    symbol_native: 'د.ج.‏',\n    decimal_digits: 2,\n    rounding: 0,\n    code: 'DZD',\n    name_plural: 'Algerian dinars'\n  },\n  EEK: {\n    symbol: 'Ekr',\n    name: 'Estonian Kroon',\n    symbol_native: 'kr',\n    decimal_digits: 2,\n    rounding: 0,\n    code: 'EEK',\n    name_plural: 'Estonian kroons'\n  },\n  EGP: {\n    symbol: 'EGP',\n    name: 'Egyptian Pound',\n    symbol_native: 'ج.م.‏',\n    decimal_digits: 2,\n    rounding: 0,\n    code: 'EGP',\n    name_plural: 'Egyptian pounds'\n  },\n  ERN: {\n    symbol: 'Nfk',\n    name: 'Eritrean Nakfa',\n    symbol_native: 'Nfk',\n    decimal_digits: 2,\n    rounding: 0,\n    code: 'ERN',\n    name_plural: 'Eritrean nakfas'\n  },\n  ETB: {\n    symbol: 'Br',\n    name: 'Ethiopian Birr',\n    symbol_native: 'Br',\n    decimal_digits: 2,\n    rounding: 0,\n    code: 'ETB',\n    name_plural: 'Ethiopian birrs'\n  },\n  GBP: {\n    symbol: '£',\n    name: 'British Pound Sterling',\n    symbol_native: '£',\n    decimal_digits: 2,\n    rounding: 0,\n    code: 'GBP',\n    name_plural: 'British pounds sterling'\n  },\n  GEL: {\n    symbol: 'GEL',\n    name: 'Georgian Lari',\n    symbol_native: 'GEL',\n    decimal_digits: 2,\n    rounding: 0,\n    code: 'GEL',\n    name_plural: 'Georgian laris'\n  },\n  GHS: {\n    symbol: 'GH₵',\n    name: 'Ghanaian Cedi',\n    symbol_native: 'GH₵',\n    decimal_digits: 2,\n    rounding: 0,\n    code: 'GHS',\n    name_plural: 'Ghanaian cedis'\n  },\n  GNF: {\n    symbol: 'FG',\n    name: 'Guinean Franc',\n    symbol_native: 'FG',\n    decimal_digits: 0,\n    rounding: 0,\n    code: 'GNF',\n    name_plural: 'Guinean francs'\n  },\n  GTQ: {\n    symbol: 'GTQ',\n    name: 'Guatemalan Quetzal',\n    symbol_native: 'Q',\n    decimal_digits: 2,\n    rounding: 0,\n    code: 'GTQ',\n    name_plural: 'Guatemalan quetzals'\n  },\n  HKD: {\n    symbol: 'HK$',\n    name: 'Hong Kong Dollar',\n    symbol_native: '$',\n    decimal_digits: 2,\n    rounding: 0,\n    code: 'HKD',\n    name_plural: 'Hong Kong dollars'\n  },\n  HNL: {\n    symbol: 'HNL',\n    name: 'Honduran Lempira',\n    symbol_native: 'L',\n    decimal_digits: 2,\n    rounding: 0,\n    code: 'HNL',\n    name_plural: 'Honduran lempiras'\n  },\n  HRK: {\n    symbol: 'kn',\n    name: 'Croatian Kuna',\n    symbol_native: 'kn',\n    decimal_digits: 2,\n    rounding: 0,\n    code: 'HRK',\n    name_plural: 'Croatian kunas'\n  },\n  HUF: {\n    symbol: 'Ft',\n    name: 'Hungarian Forint',\n    symbol_native: 'Ft',\n    decimal_digits: 0,\n    rounding: 0,\n    code: 'HUF',\n    name_plural: 'Hungarian forints'\n  },\n  IDR: {\n    symbol: 'Rp',\n    name: 'Indonesian Rupiah',\n    symbol_native: 'Rp',\n    decimal_digits: 0,\n    rounding: 0,\n    code: 'IDR',\n    name_plural: 'Indonesian rupiahs'\n  },\n  ILS: {\n    symbol: '₪',\n    name: 'Israeli New Sheqel',\n    symbol_native: '₪',\n    decimal_digits: 2,\n    rounding: 0,\n    code: 'ILS',\n    name_plural: 'Israeli new sheqels'\n  },\n  INR: {\n    symbol: 'Rs',\n    name: 'Indian Rupee',\n    symbol_native: 'টকা',\n    decimal_digits: 2,\n    rounding: 0,\n    code: 'INR',\n    name_plural: 'Indian rupees'\n  },\n  IQD: {\n    symbol: 'IQD',\n    name: 'Iraqi Dinar',\n    symbol_native: 'د.ع.‏',\n    decimal_digits: 0,\n    rounding: 0,\n    code: 'IQD',\n    name_plural: 'Iraqi dinars'\n  },\n  IRR: {\n    symbol: 'IRR',\n    name: 'Iranian Rial',\n    symbol_native: '﷼',\n    decimal_digits: 0,\n    rounding: 0,\n    code: 'IRR',\n    name_plural: 'Iranian rials'\n  },\n  ISK: {\n    symbol: 'Ikr',\n    name: 'Icelandic Króna',\n    symbol_native: 'kr',\n    decimal_digits: 0,\n    rounding: 0,\n    code: 'ISK',\n    name_plural: 'Icelandic krónur'\n  },\n  JMD: {\n    symbol: 'J$',\n    name: 'Jamaican Dollar',\n    symbol_native: '$',\n    decimal_digits: 2,\n    rounding: 0,\n    code: 'JMD',\n    name_plural: 'Jamaican dollars'\n  },\n  JOD: {\n    symbol: 'JD',\n    name: 'Jordanian Dinar',\n    symbol_native: 'د.أ.‏',\n    decimal_digits: 3,\n    rounding: 0,\n    code: 'JOD',\n    name_plural: 'Jordanian dinars'\n  },\n  JPY: {\n    symbol: '¥',\n    name: 'Japanese Yen',\n    symbol_native: '￥',\n    decimal_digits: 0,\n    rounding: 0,\n    code: 'JPY',\n    name_plural: 'Japanese yen'\n  },\n  KES: {\n    symbol: 'Ksh',\n    name: 'Kenyan Shilling',\n    symbol_native: 'Ksh',\n    decimal_digits: 2,\n    rounding: 0,\n    code: 'KES',\n    name_plural: 'Kenyan shillings'\n  },\n  KHR: {\n    symbol: 'KHR',\n    name: 'Cambodian Riel',\n    symbol_native: '៛',\n    decimal_digits: 2,\n    rounding: 0,\n    code: 'KHR',\n    name_plural: 'Cambodian riels'\n  },\n  KMF: {\n    symbol: 'CF',\n    name: 'Comorian Franc',\n    symbol_native: 'FC',\n    decimal_digits: 0,\n    rounding: 0,\n    code: 'KMF',\n    name_plural: 'Comorian francs'\n  },\n  KRW: {\n    symbol: '₩',\n    name: 'South Korean Won',\n    symbol_native: '₩',\n    decimal_digits: 0,\n    rounding: 0,\n    code: 'KRW',\n    name_plural: 'South Korean won'\n  },\n  KWD: {\n    symbol: 'KD',\n    name: 'Kuwaiti Dinar',\n    symbol_native: 'د.ك.‏',\n    decimal_digits: 3,\n    rounding: 0,\n    code: 'KWD',\n    name_plural: 'Kuwaiti dinars'\n  },\n  KZT: {\n    symbol: 'KZT',\n    name: 'Kazakhstani Tenge',\n    symbol_native: 'тңг.',\n    decimal_digits: 2,\n    rounding: 0,\n    code: 'KZT',\n    name_plural: 'Kazakhstani tenges'\n  },\n  LBP: {\n    symbol: 'LB£',\n    name: 'Lebanese Pound',\n    symbol_native: 'ل.ل.‏',\n    decimal_digits: 0,\n    rounding: 0,\n    code: 'LBP',\n    name_plural: 'Lebanese pounds'\n  },\n  LKR: {\n    symbol: 'SLRs',\n    name: 'Sri Lankan Rupee',\n    symbol_native: 'SL Re',\n    decimal_digits: 2,\n    rounding: 0,\n    code: 'LKR',\n    name_plural: 'Sri Lankan rupees'\n  },\n  LTL: {\n    symbol: 'Lt',\n    name: 'Lithuanian Litas',\n    symbol_native: 'Lt',\n    decimal_digits: 2,\n    rounding: 0,\n    code: 'LTL',\n    name_plural: 'Lithuanian litai'\n  },\n  LVL: {\n    symbol: 'Ls',\n    name: 'Latvian Lats',\n    symbol_native: 'Ls',\n    decimal_digits: 2,\n    rounding: 0,\n    code: 'LVL',\n    name_plural: 'Latvian lati'\n  },\n  LYD: {\n    symbol: 'LD',\n    name: 'Libyan Dinar',\n    symbol_native: 'د.ل.‏',\n    decimal_digits: 3,\n    rounding: 0,\n    code: 'LYD',\n    name_plural: 'Libyan dinars'\n  },\n  MAD: {\n    symbol: 'MAD',\n    name: 'Moroccan Dirham',\n    symbol_native: 'د.م.‏',\n    decimal_digits: 2,\n    rounding: 0,\n    code: 'MAD',\n    name_plural: 'Moroccan dirhams'\n  },\n  MDL: {\n    symbol: 'MDL',\n    name: 'Moldovan Leu',\n    symbol_native: 'MDL',\n    decimal_digits: 2,\n    rounding: 0,\n    code: 'MDL',\n    name_plural: 'Moldovan lei'\n  },\n  MGA: {\n    symbol: 'MGA',\n    name: 'Malagasy Ariary',\n    symbol_native: 'MGA',\n    decimal_digits: 0,\n    rounding: 0,\n    code: 'MGA',\n    name_plural: 'Malagasy Ariaries'\n  },\n  MKD: {\n    symbol: 'MKD',\n    name: 'Macedonian Denar',\n    symbol_native: 'MKD',\n    decimal_digits: 2,\n    rounding: 0,\n    code: 'MKD',\n    name_plural: 'Macedonian denari'\n  },\n  MMK: {\n    symbol: 'MMK',\n    name: 'Myanma Kyat',\n    symbol_native: 'K',\n    decimal_digits: 0,\n    rounding: 0,\n    code: 'MMK',\n    name_plural: 'Myanma kyats'\n  },\n  MOP: {\n    symbol: 'MOP$',\n    name: 'Macanese Pataca',\n    symbol_native: 'MOP$',\n    decimal_digits: 2,\n    rounding: 0,\n    code: 'MOP',\n    name_plural: 'Macanese patacas'\n  },\n  MUR: {\n    symbol: 'MURs',\n    name: 'Mauritian Rupee',\n    symbol_native: 'MURs',\n    decimal_digits: 0,\n    rounding: 0,\n    code: 'MUR',\n    name_plural: 'Mauritian rupees'\n  },\n  MXN: {\n    symbol: 'MX$',\n    name: 'Mexican Peso',\n    symbol_native: '$',\n    decimal_digits: 2,\n    rounding: 0,\n    code: 'MXN',\n    name_plural: 'Mexican pesos'\n  },\n  MYR: {\n    symbol: 'RM',\n    name: 'Malaysian Ringgit',\n    symbol_native: 'RM',\n    decimal_digits: 2,\n    rounding: 0,\n    code: 'MYR',\n    name_plural: 'Malaysian ringgits'\n  },\n  MZN: {\n    symbol: 'MTn',\n    name: 'Mozambican Metical',\n    symbol_native: 'MTn',\n    decimal_digits: 2,\n    rounding: 0,\n    code: 'MZN',\n    name_plural: 'Mozambican meticals'\n  },\n  NAD: {\n    symbol: 'N$',\n    name: 'Namibian Dollar',\n    symbol_native: 'N$',\n    decimal_digits: 2,\n    rounding: 0,\n    code: 'NAD',\n    name_plural: 'Namibian dollars'\n  },\n  NGN: {\n    symbol: '₦',\n    name: 'Nigerian Naira',\n    symbol_native: '₦',\n    decimal_digits: 2,\n    rounding: 0,\n    code: 'NGN',\n    name_plural: 'Nigerian nairas'\n  },\n  NIO: {\n    symbol: 'C$',\n    name: 'Nicaraguan Córdoba',\n    symbol_native: 'C$',\n    decimal_digits: 2,\n    rounding: 0,\n    code: 'NIO',\n    name_plural: 'Nicaraguan córdobas'\n  },\n  NOK: {\n    symbol: 'Nkr',\n    name: 'Norwegian Krone',\n    symbol_native: 'kr',\n    decimal_digits: 2,\n    rounding: 0,\n    code: 'NOK',\n    name_plural: 'Norwegian kroner'\n  },\n  NPR: {\n    symbol: 'NPRs',\n    name: 'Nepalese Rupee',\n    symbol_native: 'नेरू',\n    decimal_digits: 2,\n    rounding: 0,\n    code: 'NPR',\n    name_plural: 'Nepalese rupees'\n  },\n  NZD: {\n    symbol: 'NZ$',\n    name: 'New Zealand Dollar',\n    symbol_native: '$',\n    decimal_digits: 2,\n    rounding: 0,\n    code: 'NZD',\n    name_plural: 'New Zealand dollars'\n  },\n  OMR: {\n    symbol: 'OMR',\n    name: 'Omani Rial',\n    symbol_native: 'ر.ع.‏',\n    decimal_digits: 3,\n    rounding: 0,\n    code: 'OMR',\n    name_plural: 'Omani rials'\n  },\n  PAB: {\n    symbol: 'B/.',\n    name: 'Panamanian Balboa',\n    symbol_native: 'B/.',\n    decimal_digits: 2,\n    rounding: 0,\n    code: 'PAB',\n    name_plural: 'Panamanian balboas'\n  },\n  PEN: {\n    symbol: 'S/.',\n    name: 'Peruvian Nuevo Sol',\n    symbol_native: 'S/.',\n    decimal_digits: 2,\n    rounding: 0,\n    code: 'PEN',\n    name_plural: 'Peruvian nuevos soles'\n  },\n  PHP: {\n    symbol: '₱',\n    name: 'Philippine Peso',\n    symbol_native: '₱',\n    decimal_digits: 2,\n    rounding: 0,\n    code: 'PHP',\n    name_plural: 'Philippine pesos'\n  },\n  PKR: {\n    symbol: 'PKRs',\n    name: 'Pakistani Rupee',\n    symbol_native: '₨',\n    decimal_digits: 0,\n    rounding: 0,\n    code: 'PKR',\n    name_plural: 'Pakistani rupees'\n  },\n  PLN: {\n    symbol: 'zł',\n    name: 'Polish Zloty',\n    symbol_native: 'zł',\n    decimal_digits: 2,\n    rounding: 0,\n    code: 'PLN',\n    name_plural: 'Polish zlotys'\n  },\n  PYG: {\n    symbol: '₲',\n    name: 'Paraguayan Guarani',\n    symbol_native: '₲',\n    decimal_digits: 0,\n    rounding: 0,\n    code: 'PYG',\n    name_plural: 'Paraguayan guaranis'\n  },\n  QAR: {\n    symbol: 'QR',\n    name: 'Qatari Rial',\n    symbol_native: 'ر.ق.‏',\n    decimal_digits: 2,\n    rounding: 0,\n    code: 'QAR',\n    name_plural: 'Qatari rials'\n  },\n  RON: {\n    symbol: 'RON',\n    name: 'Romanian Leu',\n    symbol_native: 'RON',\n    decimal_digits: 2,\n    rounding: 0,\n    code: 'RON',\n    name_plural: 'Romanian lei'\n  },\n  RSD: {\n    symbol: 'din.',\n    name: 'Serbian Dinar',\n    symbol_native: 'дин.',\n    decimal_digits: 0,\n    rounding: 0,\n    code: 'RSD',\n    name_plural: 'Serbian dinars'\n  },\n  RUB: {\n    symbol: 'RUB',\n    name: 'Russian Ruble',\n    symbol_native: '₽.',\n    decimal_digits: 2,\n    rounding: 0,\n    code: 'RUB',\n    name_plural: 'Russian rubles'\n  },\n  RWF: {\n    symbol: 'RWF',\n    name: 'Rwandan Franc',\n    symbol_native: 'FR',\n    decimal_digits: 0,\n    rounding: 0,\n    code: 'RWF',\n    name_plural: 'Rwandan francs'\n  },\n  SAR: {\n    symbol: 'SR',\n    name: 'Saudi Riyal',\n    symbol_native: 'ر.س.‏',\n    decimal_digits: 2,\n    rounding: 0,\n    code: 'SAR',\n    name_plural: 'Saudi riyals'\n  },\n  SDG: {\n    symbol: 'SDG',\n    name: 'Sudanese Pound',\n    symbol_native: 'SDG',\n    decimal_digits: 2,\n    rounding: 0,\n    code: 'SDG',\n    name_plural: 'Sudanese pounds'\n  },\n  SEK: {\n    symbol: 'Skr',\n    name: 'Swedish Krona',\n    symbol_native: 'kr',\n    decimal_digits: 2,\n    rounding: 0,\n    code: 'SEK',\n    name_plural: 'Swedish kronor'\n  },\n  SGD: {\n    symbol: 'S$',\n    name: 'Singapore Dollar',\n    symbol_native: '$',\n    decimal_digits: 2,\n    rounding: 0,\n    code: 'SGD',\n    name_plural: 'Singapore dollars'\n  },\n  SOS: {\n    symbol: 'Ssh',\n    name: 'Somali Shilling',\n    symbol_native: 'Ssh',\n    decimal_digits: 0,\n    rounding: 0,\n    code: 'SOS',\n    name_plural: 'Somali shillings'\n  },\n  SYP: {\n    symbol: 'SY£',\n    name: 'Syrian Pound',\n    symbol_native: 'ل.س.‏',\n    decimal_digits: 0,\n    rounding: 0,\n    code: 'SYP',\n    name_plural: 'Syrian pounds'\n  },\n  THB: {\n    symbol: '฿',\n    name: 'Thai Baht',\n    symbol_native: '฿',\n    decimal_digits: 2,\n    rounding: 0,\n    code: 'THB',\n    name_plural: 'Thai baht'\n  },\n  TND: {\n    symbol: 'DT',\n    name: 'Tunisian Dinar',\n    symbol_native: 'د.ت.‏',\n    decimal_digits: 3,\n    rounding: 0,\n    code: 'TND',\n    name_plural: 'Tunisian dinars'\n  },\n  TOP: {\n    symbol: 'T$',\n    name: 'Tongan Paʻanga',\n    symbol_native: 'T$',\n    decimal_digits: 2,\n    rounding: 0,\n    code: 'TOP',\n    name_plural: 'Tongan paʻanga'\n  },\n  TRY: {\n    symbol: 'TL',\n    name: 'Turkish Lira',\n    symbol_native: 'TL',\n    decimal_digits: 2,\n    rounding: 0,\n    code: 'TRY',\n    name_plural: 'Turkish Lira'\n  },\n  TTD: {\n    symbol: 'TT$',\n    name: 'Trinidad and Tobago Dollar',\n    symbol_native: '$',\n    decimal_digits: 2,\n    rounding: 0,\n    code: 'TTD',\n    name_plural: 'Trinidad and Tobago dollars'\n  },\n  TWD: {\n    symbol: 'NT$',\n    name: 'New Taiwan Dollar',\n    symbol_native: 'NT$',\n    decimal_digits: 2,\n    rounding: 0,\n    code: 'TWD',\n    name_plural: 'New Taiwan dollars'\n  },\n  TZS: {\n    symbol: 'TSh',\n    name: 'Tanzanian Shilling',\n    symbol_native: 'TSh',\n    decimal_digits: 0,\n    rounding: 0,\n    code: 'TZS',\n    name_plural: 'Tanzanian shillings'\n  },\n  UAH: {\n    symbol: '₴',\n    name: 'Ukrainian Hryvnia',\n    symbol_native: '₴',\n    decimal_digits: 2,\n    rounding: 0,\n    code: 'UAH',\n    name_plural: 'Ukrainian hryvnias'\n  },\n  UGX: {\n    symbol: 'USh',\n    name: 'Ugandan Shilling',\n    symbol_native: 'USh',\n    decimal_digits: 0,\n    rounding: 0,\n    code: 'UGX',\n    name_plural: 'Ugandan shillings'\n  },\n  UYU: {\n    symbol: '$U',\n    name: 'Uruguayan Peso',\n    symbol_native: '$',\n    decimal_digits: 2,\n    rounding: 0,\n    code: 'UYU',\n    name_plural: 'Uruguayan pesos'\n  },\n  UZS: {\n    symbol: 'UZS',\n    name: 'Uzbekistan Som',\n    symbol_native: 'UZS',\n    decimal_digits: 0,\n    rounding: 0,\n    code: 'UZS',\n    name_plural: 'Uzbekistan som'\n  },\n  VEF: {\n    symbol: 'Bs.F.',\n    name: 'Venezuelan Bolívar',\n    symbol_native: 'Bs.F.',\n    decimal_digits: 2,\n    rounding: 0,\n    code: 'VEF',\n    name_plural: 'Venezuelan bolívars'\n  },\n  VND: {\n    symbol: '₫',\n    name: 'Vietnamese Dong',\n    symbol_native: '₫',\n    decimal_digits: 0,\n    rounding: 0,\n    code: 'VND',\n    name_plural: 'Vietnamese dong'\n  },\n  XAF: {\n    symbol: 'FCFA',\n    name: 'CFA Franc BEAC',\n    symbol_native: 'FCFA',\n    decimal_digits: 0,\n    rounding: 0,\n    code: 'XAF',\n    name_plural: 'CFA francs BEAC'\n  },\n  XOF: {\n    symbol: 'CFA',\n    name: 'CFA Franc BCEAO',\n    symbol_native: 'CFA',\n    decimal_digits: 0,\n    rounding: 0,\n    code: 'XOF',\n    name_plural: 'CFA francs BCEAO'\n  },\n  YER: {\n    symbol: 'YR',\n    name: 'Yemeni Rial',\n    symbol_native: 'ر.ي.‏',\n    decimal_digits: 0,\n    rounding: 0,\n    code: 'YER',\n    name_plural: 'Yemeni rials'\n  },\n  ZAR: {\n    symbol: 'R',\n    name: 'South African Rand',\n    symbol_native: 'R',\n    decimal_digits: 2,\n    rounding: 0,\n    code: 'ZAR',\n    name_plural: 'South African rand'\n  },\n  ZMK: {\n    symbol: 'ZK',\n    name: 'Zambian Kwacha',\n    symbol_native: 'ZK',\n    decimal_digits: 0,\n    rounding: 0,\n    code: 'ZMK',\n    name_plural: 'Zambian kwachas'\n  },\n  ZWL: {\n    symbol: 'ZWL$',\n    name: 'Zimbabwean Dollar',\n    symbol_native: 'ZWL$',\n    decimal_digits: 0,\n    rounding: 0,\n    code: 'ZWL',\n    name_plural: 'Zimbabwean Dollar'\n  }\n  */\n}\n","import { storeContext } from '@rocketmaven/data/app/store'\r\nimport { countryCodeToName } from '@rocketmaven/data/country-code-to-name'\r\nimport { currencyCodeToName } from '@rocketmaven/data/currency-code-to-name'\r\nimport { useContext } from 'react'\r\n\r\nexport const useStore = () => {\r\n  const { state, dispatch } = useContext(storeContext)\r\n  const { isLoggedIn, accessToken, refreshToken, userId } = state\r\n  return { isLoggedIn, accessToken, refreshToken, userId, dispatch }\r\n}\r\n\r\nexport const useAdvancedSearchParams = () => {\r\n  const { state, dispatch } = useContext(storeContext)\r\n  const { searchParams } = state\r\n  const { currentPage, queryParams, cachedData } = searchParams\r\n  return { currentPage, queryParams, cachedData, dispatch }\r\n}\r\n\r\nexport const useUserId = () => {\r\n  const { state } = useContext(storeContext)\r\n  return state.userId\r\n}\r\n\r\nexport const useIsLoggedIn = () => {\r\n  const { state } = useContext(storeContext)\r\n  return state.isLoggedIn\r\n}\r\n\r\nexport const useSortedCountryList = () => {\r\n  const countryList = Object.entries(countryCodeToName).sort((a, b) => {\r\n    if (a[1] > b[1]) return 1\r\n    if (a[1] < b[1]) return -1\r\n    return 0\r\n  })\r\n  return countryList\r\n}\r\n\r\nexport const useSortedCurrencyList = () => {\r\n  const currencyList = Object.entries(currencyCodeToName)\r\n    .map((e: any) => [e[0], e[1].name_plural])\r\n    .sort((a, b) => {\r\n      if (a[1] > b[1]) return 1\r\n      if (a[1] < b[1]) return -1\r\n      return 0\r\n    })\r\n  return currencyList\r\n}\r\n","import React from \"react\"\nimport { TextProps, LinkProps } from \"./types\"\nimport styled, { css } from \"styled-components\"\n\nconst marginBottom = css`\n  margin-bottom: 3rem;\n`\n\nexport const BottomSpace = styled.div`\n  ${marginBottom};\n`\n\nexport const Title = styled.h1`\n  margin: 0 0 2rem;\n  font-weight: 500;\n`\n\nexport const Subtitle = styled.h2`\n  margin: 0 0 1.5rem;\n  font-weight: 300;\n`\n\nexport const Text = styled.span`\n  margin: 0;\n  font-size: 1rem;\n  line-height: 2.5rem;\n  ${(props: TextProps) =>\n    props.color &&\n    css`\n      color: ${props.color}\n    `};\n  ${(props: TextProps) =>\n    props.bold &&\n    css`\n      font-weight: 700;\n    `};\n`\n\nexport const Error = styled(Text)`\n  color: red;\n  line-height: 1rem;\n`\n\nexport const Code = styled.span`\n  font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New',\n    monospace;\n`\n\nexport const Paragraph = styled(Text)`\n  ${marginBottom};\n`\n\nexport const Link = ({ children, className, href, target, rel }: LinkProps) => (\n  <a className={className} href={href} target={target} rel={rel}>\n    {children}\n  </a>\n);\n\nexport const StyledLink = styled(Link)`\n  color: #61dafb;\n`","import { useIsLoggedIn, useStore, useUserId } from '@rocketmaven/hooks/store'\r\nimport { message } from 'antd'\r\nimport jwt_decode from 'jwt-decode'\r\nimport { useEffect, useState } from 'react'\r\nimport { isExpired } from 'react-jwt'\r\nimport { useHistory } from 'react-router'\r\nimport { urls } from '../data/urls'\r\n\r\ninterface AuthToken {\r\n  exp: number\r\n  fresh: boolean\r\n  iat: number\r\n  jti: string\r\n  nbf: number\r\n  sub: number\r\n  type: string\r\n}\r\ntype SuccessfullLoginResponse = {\r\n  access_token: string\r\n  refresh_token: string\r\n}\r\ntype AuthType = 'LOGIN' | 'REGISTER'\r\ntype HttpMutation = 'POST' | 'PUT'\r\ntype HttpMethod = 'GET' | 'POST' | 'PUT' | 'DELETE'\r\ntype AbstractFetchProps = {\r\n  url: string\r\n  isLoading: boolean\r\n  setIsLoading: Function\r\n  accessToken?: string\r\n  revalidateAccessToken: Function\r\n  setData?: Function\r\n  isLoggedIn?: boolean\r\n  values?: any\r\n  method?: HttpMethod\r\n  redirectPath?: string\r\n  routerObject: any\r\n  dispatch: any\r\n}\r\n\r\nconst abstractFetch = async (fetchInput: AbstractFetchProps) => {\r\n  const {\r\n    accessToken,\r\n    revalidateAccessToken,\r\n    setData,\r\n    setIsLoading,\r\n    url,\r\n    isLoggedIn,\r\n    method = 'GET',\r\n    values,\r\n    redirectPath,\r\n    routerObject,\r\n    dispatch,\r\n  } = fetchInput\r\n  try {\r\n    setIsLoading(true)\r\n    if (isLoggedIn && accessToken && isExpired(accessToken)) {\r\n      await revalidateAccessToken()\r\n    }\r\n    const response = await fetch(url, {\r\n      method,\r\n      headers: {\r\n        Accept: 'application/json',\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${accessToken}`\r\n      },\r\n      body: values ? JSON.stringify(values) : undefined\r\n    })\r\n    const data = await response.json()\r\n\r\n    if (!response.ok) {\r\n      if (data.msg) {\r\n        throw Error(data.msg)\r\n      }\r\n      throw Error(`Request failed - ${response.statusText}`)\r\n    }\r\n    if (setData) {\r\n      setData(data)\r\n    }\r\n    setIsLoading(false)\r\n    if (redirectPath && routerObject) {\r\n      routerObject.push(redirectPath)\r\n    }\r\n    return data\r\n  } catch (error) {\r\n    if (setData) {\r\n      setData({})\r\n    }\r\n    setIsLoading(false)\r\n    if (error.message === 'Token has been revoked') {\r\n      dispatch({ type: 'LOGOUT' })\r\n      routerObject.push('/')\r\n    }\r\n    throw error\r\n  }\r\n}\r\n\r\nconst useAbstractFetchOnMount = (url: string, refreshFlag?: number) => {\r\n  const [data, setData] = useState({})\r\n  const [isLoading, setIsLoading] = useState(true)\r\n  const { accessToken, revalidateAccessToken, dispatch } = useAccessToken()\r\n  const isLoggedIn = useIsLoggedIn()\r\n  const routerObject = useHistory()\r\n  useEffect(() => {\r\n    const myFetch = async () => {\r\n      try {\r\n        await abstractFetch({\r\n          accessToken,\r\n          revalidateAccessToken,\r\n          setData,\r\n          isLoading,\r\n          setIsLoading,\r\n          isLoggedIn,\r\n          url,\r\n          dispatch,\r\n          routerObject,\r\n        })\r\n      } catch (error) {\r\n        message.error(error.message)\r\n      }\r\n    }\r\n    myFetch()\r\n  }, [refreshFlag])\r\n  return { data, isLoading }\r\n}\r\n\r\nconst useAbstractFetchOnSubmit = (url: string) => {\r\n  const [data, setData] = useState({})\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const { accessToken, revalidateAccessToken, dispatch } = useAccessToken()\r\n  const isLoggedIn = useIsLoggedIn()\r\n  const routerObject = useHistory()\r\n  const myFetch = async (query: string) => {\r\n    try {\r\n      const results = await abstractFetch({\r\n        accessToken,\r\n        revalidateAccessToken,\r\n        setData,\r\n        isLoading,\r\n        setIsLoading,\r\n        isLoggedIn,\r\n        url: url + (query ? query : ''),\r\n        dispatch,\r\n        routerObject,\r\n      })\r\n      return results\r\n    } catch (error) {\r\n      message.error(error.message)\r\n    }\r\n  }\r\n  return { data, isLoading, myFetch }\r\n}\r\n\r\nconst useAbstractFetchUpdate = (url: string, method: HttpMethod, redirectPath?: string) => {\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const { accessToken, revalidateAccessToken, dispatch } = useAccessToken()\r\n  const isLoggedIn = useIsLoggedIn()\r\n  const routerObject = useHistory()\r\n  const myFetch = async (values: JSON) => {\r\n    try {\r\n      const results = await abstractFetch({\r\n        accessToken,\r\n        revalidateAccessToken,\r\n        isLoading,\r\n        setIsLoading,\r\n        isLoggedIn,\r\n        url: url,\r\n        routerObject,\r\n        redirectPath,\r\n        method,\r\n        values,\r\n        dispatch\r\n      })\r\n      return results\r\n    } catch (error) {\r\n      message.error(error.message)\r\n    }\r\n  }\r\n  return { isLoading, myFetch }\r\n}\r\n\r\nexport const useAccessToken = () => {\r\n  const { accessToken, refreshToken, dispatch } = useStore()\r\n  const routerObject = useHistory()\r\n\r\n  const revalidateAccessToken = async () => {\r\n    try {\r\n      console.log('************************token refresh in progress')\r\n      if (isExpired(refreshToken)) {\r\n        throw Error('Refresh token expired')\r\n      }\r\n      const response = await fetch('/auth/refresh', {\r\n        method: 'POST',\r\n        headers: {\r\n          Accept: 'application/json',\r\n          'Content-Type': 'application/json',\r\n          Authorization: `Bearer ${refreshToken}`\r\n        }\r\n      })\r\n      if (!response.ok) {\r\n        throw Error('Not logged in, now logging out!')\r\n      }\r\n      const data: { access_token: string } = await response.json()\r\n      console.log('************************token refresh successfull')\r\n      dispatch({ type: 'REFRESH_TOKEN', payload: { accessToken: data.access_token } })\r\n    } catch (error) {\r\n      message.error(error.message)\r\n      dispatch({ type: 'LOGOUT' })\r\n      routerObject.push(urls.root)\r\n      throw Error(error)\r\n    }\r\n  }\r\n\r\n  return { accessToken, revalidateAccessToken, dispatch }\r\n}\r\n\r\nexport const useFetchAPIPublicOrLoggedInData = (api_part: string, setData: any): any => {\r\n  const [isLoading, setIsLoading] = useState(true)\r\n  const { accessToken, revalidateAccessToken } = useAccessToken()\r\n  const isLoggedIn = useIsLoggedIn()\r\n\r\n  useEffect(() => {\r\n    const myFetch = async () => {\r\n      try {\r\n        setIsLoading(true)\r\n        if (isLoggedIn && isExpired(accessToken)) {\r\n          await revalidateAccessToken()\r\n        }\r\n        const response = await fetch(`/api/v1${api_part}`, {\r\n          headers: {\r\n            Accept: 'application/json',\r\n            'Content-Type': 'application/json',\r\n            Authorization: `Bearer ${accessToken}`\r\n          }\r\n        })\r\n        console.log('*********************** status is', response.status)\r\n        const data = await response.json()\r\n        if (!response.ok) {\r\n          if (data.msg) {\r\n            throw Error(data.msg)\r\n          }\r\n          throw Error(`${response.status}`)\r\n        }\r\n        setData(data)\r\n        setIsLoading(false)\r\n      } catch (error) {\r\n        message.error(error.message)\r\n        setData({})\r\n        setIsLoading(false)\r\n      }\r\n    }\r\n    myFetch()\r\n    return\r\n  }, [])\r\n\r\n  return { isLoading }\r\n}\r\n\r\nexport const useFetchAPIPublicData = (api_part: string, setData: any): any => {\r\n  useEffect(() => {\r\n    const myFetch = async () => {\r\n      try {\r\n        const response = await fetch(`/api/v1${api_part}`, {\r\n          headers: {\r\n            Accept: 'application/json',\r\n            'Content-Type': 'application/json'\r\n          }\r\n        })\r\n        const data = await response.json()\r\n        if (!response.ok) {\r\n          if (data.msg) {\r\n            throw Error(data.msg)\r\n          }\r\n          throw Error(`${response.status}`)\r\n        }\r\n        setData(data)\r\n      } catch (error) {\r\n        message.error(error.message)\r\n        setData({})\r\n      }\r\n    }\r\n    myFetch()\r\n    return\r\n  }, [])\r\n}\r\n\r\nexport const useFetchGetWithUserId = (urlEnd: string, refreshFlag?: number): any => {\r\n  let userId = useUserId()\r\n  if (!userId) {\r\n    userId = 0\r\n  }\r\n  const endPointUrl = `/api/v1/investors/${userId}${urlEnd}`\r\n  return useAbstractFetchOnMount(endPointUrl, refreshFlag)\r\n}\r\n\r\n// Get Requests\r\nexport const useFetchGetPublicPortfolio = (portfolioId: string): any => {\r\n  const endPointUrl = `/api/v1/public-portfolios/${portfolioId}`\r\n  return useAbstractFetchOnMount(endPointUrl)\r\n}\r\n\r\nexport const useFetchTopAdditions = (): any => {\r\n  const endPointUrl = `/api/v1/top_additions`\r\n  return useAbstractFetchOnMount(endPointUrl)\r\n}\r\n\r\nexport const useGetPortfolioInfo = (portfolioId: string): any => {\r\n  const endPointUrl = `/api/v1/portfolios/${portfolioId}`\r\n  return useAbstractFetchOnMount(endPointUrl)\r\n}\r\n\r\nexport const useGetPortfolioHistory = (portfolioId: string): any => {\r\n  const endPointUrl = `/api/v1/portfolios/${portfolioId}/history`\r\n  const { data, isLoading } = useAbstractFetchOnMount(endPointUrl)\r\n  return { data, isLoading }\r\n}\r\n\r\nexport const useGetWatchlist = (refreshFlag?: number): any => {\r\n  const endPointUrl = `/api/v1/watchlist`\r\n  const { data } = useAbstractFetchOnMount(endPointUrl, refreshFlag)\r\n  return data\r\n}\r\n\r\nexport const useAdvancedSearch = (): any => {\r\n  const endPointUrl = 'api/v1/explore'\r\n  const { data, isLoading, myFetch } = useAbstractFetchOnSubmit(endPointUrl)\r\n  return { data, isLoading, myFetch }\r\n}\r\n\r\nexport const useGetChartData = () => {\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const { accessToken, revalidateAccessToken, dispatch } = useAccessToken()\r\n  const routerObject = useHistory()\r\n  const myFetch = async (chartDataUrl: string) => {\r\n    try {\r\n      const results = abstractFetch({\r\n        accessToken,\r\n        revalidateAccessToken,\r\n        isLoading,\r\n        setIsLoading,\r\n        url: `/api/v1/${chartDataUrl}`,\r\n        dispatch,\r\n        routerObject,\r\n      })\r\n      return results\r\n    } catch (error) {\r\n      message.error(error.message)\r\n      return null\r\n    }\r\n  }\r\n  return myFetch\r\n}\r\n\r\n// Updates requests\r\nexport const useAuth = (authType: AuthType): Function => {\r\n  let endPointUrl = '/auth/login'\r\n  if (authType === 'REGISTER') {\r\n    endPointUrl = '/api/v1/investors'\r\n  }\r\n  const { dispatch } = useStore()\r\n  const { myFetch } = useAbstractFetchUpdate(endPointUrl, 'POST')\r\n  const routerObject = useHistory()\r\n  const submit = async (values: JSON) => {\r\n    try {\r\n      const data: SuccessfullLoginResponse = await myFetch(values)\r\n      dispatch({\r\n        type: 'LOGIN',\r\n        payload: {\r\n          accessToken: data.access_token,\r\n          refreshToken: data.refresh_token,\r\n          userId: jwt_decode<AuthToken>(data.access_token).sub\r\n        }\r\n      })\r\n      routerObject.push('/')\r\n    } catch (error) {\r\n      message.error(error.message)\r\n    }\r\n  }\r\n  return submit\r\n}\r\n\r\nexport const useUpdateAccountInfo = (): Function => {\r\n  const userId = useUserId()\r\n  const { myFetch } = useAbstractFetchUpdate(`/api/v1/investors/${userId}`, 'PUT', urls.account)\r\n  return myFetch\r\n}\r\n\r\nexport const useAddPortfolioEvent = (portfolioId: string): Function => {\r\n  const { myFetch } = useAbstractFetchUpdate(\r\n    `/api/v1/portfolios/${portfolioId}/history`,\r\n    'POST',\r\n    urls.portfolio\r\n  )\r\n  return myFetch\r\n}\r\n\r\nexport const useUpdatePortfolioInfo = (\r\n  methodInput: HttpMutation,\r\n  portfolioId?: string\r\n): Function => {\r\n  const userId = useUserId()\r\n  let endPointUrl = `/api/v1/investors/${userId}/portfolios`\r\n  if (methodInput === 'PUT') {\r\n    endPointUrl = `/api/v1/portfolios/${portfolioId}`\r\n  }\r\n  const { myFetch } = useAbstractFetchUpdate(endPointUrl, methodInput, urls.portfolio)\r\n  return myFetch\r\n}\r\n\r\nexport const useIForgot = () => {\r\n  const { isLoading, myFetch } = useAbstractFetchUpdate('/api/v1/iforgot', 'POST')\r\n  return { isLoading, myFetch }\r\n}\r\n\r\nexport const usePasswordReset = () => {\r\n  const { myFetch } = useAbstractFetchUpdate('/api/v1/pw_reset', 'POST', '/')\r\n  return myFetch\r\n}\r\n\r\nexport const useDeleteWatchListItem = () => {\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const { accessToken, revalidateAccessToken, dispatch } = useAccessToken()\r\n  const routerObject = useHistory()\r\n  const myFetch = async (assetId: string) => {\r\n    try {\r\n      const results = abstractFetch({\r\n        accessToken,\r\n        revalidateAccessToken,\r\n        isLoading,\r\n        setIsLoading,\r\n        url: `/api/v1/watchlist/${assetId}`,\r\n        method: 'DELETE',\r\n        dispatch,\r\n        routerObject,\r\n      })\r\n      return results\r\n    } catch (error) {\r\n      message.error(error.message)\r\n    }\r\n  }\r\n  return myFetch\r\n}\r\n\r\nexport const useUpdateWatchListItem = () => {\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const { accessToken, revalidateAccessToken, dispatch } = useAccessToken()\r\n  const routerObject = useHistory()\r\n  const myFetch = async (asset_id: string, context: string, price: number) => {\r\n    try {\r\n      const results = abstractFetch({\r\n        accessToken,\r\n        revalidateAccessToken,\r\n        isLoading,\r\n        setIsLoading,\r\n        url: `/api/v1/watchlist/${asset_id}/${context}`,\r\n        method: 'PUT',\r\n        values: { price: price },\r\n        dispatch,\r\n        routerObject,\r\n      })\r\n      return results\r\n    } catch (error) {\r\n      message.error(error.message)\r\n    }\r\n  }\r\n  return myFetch\r\n}\r\n\r\nexport const useAddWatchListItem = () => {\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const { accessToken, revalidateAccessToken, dispatch } = useAccessToken()\r\n  const routerObject = useHistory()\r\n  const myFetch = async (tickerSymbol: string) => {\r\n    try {\r\n      const results = abstractFetch({\r\n        accessToken,\r\n        revalidateAccessToken,\r\n        isLoading,\r\n        setIsLoading,\r\n        url: `/api/v1/watchlist/${tickerSymbol}`,\r\n        method: 'POST',\r\n        dispatch,\r\n        routerObject,\r\n      })\r\n      return results\r\n    } catch (error) {\r\n      message.error(error.message)\r\n    }\r\n  }\r\n  return myFetch\r\n}\r\n","import styled from 'styled-components'\r\nimport { Card as AntCard } from 'antd'\r\n\r\nexport const Card = styled(AntCard)`\r\n  width: 800px;\r\n  margin: 20px;\r\n  float: left;\r\n  box-shadow: 0 0 20px rgb(0 0 0 / 5%);\r\n`\r\n","import { Card } from '@rocketmaven/componentsStyled/Card'\r\nimport { urls } from '@rocketmaven/data/urls'\r\nimport { Investor } from '@rocketmaven/pages/Account/types'\r\nimport { Button, Descriptions, Divider } from 'antd'\r\nimport { Fragment } from 'react'\r\nimport { FaCogs, FaEdit } from 'react-icons/fa'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst AccountDetailCard = ({ investor }: Investor) => {\r\n  return (\r\n    <Fragment>\r\n      <Card style={{ width: '600px', marginTop: '30px', marginBottom: '30px' }}>\r\n        <Descriptions size=\"small\" column={1} bordered>\r\n          <Descriptions.Item label=\"Username\">{investor.username}</Descriptions.Item>\r\n\r\n          <Descriptions.Item label=\"Email\">{investor.email}</Descriptions.Item>\r\n\r\n          <Descriptions.Item label=\"First Name\">\r\n            {investor.first_name ? investor.first_name : ''}\r\n          </Descriptions.Item>\r\n\r\n          <Descriptions.Item label=\"Last Name\">\r\n            {investor.last_name ? investor.last_name : ''}\r\n          </Descriptions.Item>\r\n\r\n          <Descriptions.Item label=\"Gender\">\r\n            {investor.gender ? investor.gender : ''}\r\n          </Descriptions.Item>\r\n\r\n          <Descriptions.Item label=\"Country\">\r\n            {investor.country_of_residency ? investor.country_of_residency : ''}\r\n          </Descriptions.Item>\r\n\r\n          <Descriptions.Item label=\"Date of Birth\">\r\n            {investor.date_of_birth ? investor.date_of_birth : ''}\r\n          </Descriptions.Item>\r\n\r\n          <Descriptions.Item label=\"Join Date\">\r\n            {investor.join_date ? investor.join_date : ''}\r\n          </Descriptions.Item>\r\n\r\n          <Descriptions.Item label=\"Profile Visibility\">\r\n            {investor.visibility ? 'Public' : 'Private'}\r\n          </Descriptions.Item>\r\n        </Descriptions>\r\n        <Divider>Edit</Divider>\r\n        <Button type=\"primary\" danger style={{ marginRight: '8px', marginBottom: '12px' }}>\r\n          <Link to={urls.account + '/personal'}>\r\n            <FaEdit /> Edit Personal Details\r\n          </Link>\r\n        </Button>\r\n        <Button type=\"primary\" danger style={{ marginRight: '8px', marginBottom: '12px' }}>\r\n          <Link to={urls.account + '/security'}>\r\n            <FaCogs /> Edit Security\r\n          </Link>\r\n        </Button>\r\n      </Card>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default AccountDetailCard\r\n","import { useFetchGetWithUserId } from '@rocketmaven/hooks/http'\r\nimport AccountDetailCard from '@rocketmaven/pages/Account/AccountDetail/AccountDetailCard'\r\nimport { Investor } from '@rocketmaven/pages/Account/types'\r\nimport { isEmpty } from 'ramda'\r\n\r\ntype AccountFetch = {\r\n  data: Investor\r\n  isLoading: boolean\r\n}\r\n\r\nconst AccountDetail = () => {\r\n  const { data, isLoading }: AccountFetch = useFetchGetWithUserId('')\r\n  if (data && !isEmpty(data)) {\r\n    return isLoading ? null : <AccountDetailCard investor={data.investor} />\r\n  }\r\n  return null\r\n}\r\n\r\nexport default AccountDetail\r\n","import { Form, Input } from 'antd'\n\nconst DateOfBirthInput = () => {\n  return (\n    /*<DatePicker\n            format=\"YYYY-MM-DD\"\n            />*/\n    <Form.Item\n      label=\"Date of Birth\"\n      name=\"date_of_birth\"\n      initialValue=\"\"\n      rules={[\n        {\n          required: false\n        },\n        () => ({\n          validator(_, value) {\n            if (!value || value.length == 0 || /^\\d{4}-([0]\\d|1[0-2])-([0-2]\\d|3[01])$/.test(value)) {\n              return Promise.resolve()\n            }\n            // Maybe add better date processing?\n            return Promise.reject(\n              new Error('Please make sure the date is of the format XXXX-XX-XX')\n            )\n          }\n        })\n      ]}\n    >\n      <Input />\n    </Form.Item>\n  )\n}\n\nexport default DateOfBirthInput\n","import DateOfBirthInput from '@rocketmaven/components/DateOfBirthInput'\r\nimport { Card } from '@rocketmaven/componentsStyled/Card'\r\nimport { Subtitle } from '@rocketmaven/componentsStyled/Typography'\r\nimport { useUpdateAccountInfo } from '@rocketmaven/hooks/http'\r\nimport { useSortedCountryList } from '@rocketmaven/hooks/store'\r\nimport { Investor } from '@rocketmaven/pages/Account/types'\r\nimport { Button, Form, Input, Select } from 'antd'\r\nimport { Fragment } from 'react'\r\n\r\ntype Props = {\r\n  investorData: Investor\r\n}\r\n\r\nconst AccountPersonalInfoForm = ({ investorData }: Props) => {\r\n  const countryList = useSortedCountryList()\r\n  const myFetch: Function = useUpdateAccountInfo()\r\n  const onFinish = (values: any) => {\r\n    myFetch({\r\n      ...values\r\n    })\r\n  }\r\n\r\n  const countryElement = countryList.find(\r\n    (element) => investorData.investor.country_of_residency === element[1]\r\n  )\r\n\r\n  return (\r\n    <Fragment>\r\n      <Subtitle>Account Edit</Subtitle>\r\n      <Card>\r\n        <Form\r\n          name=\"account_personal_info\"\r\n          className=\"account-personal-info\"\r\n          initialValues={{\r\n            ...investorData.investor,\r\n            country_of_residency: countryElement ? countryElement[0] : ''\r\n          }}\r\n          onFinish={onFinish}\r\n        >\r\n          <Form.Item\r\n            name=\"username\"\r\n            label=\"Username\"\r\n            rules={[\r\n              {\r\n                required: true\r\n              }\r\n            ]}\r\n          >\r\n            <Input />\r\n          </Form.Item>\r\n\r\n          <Form.Item name=\"first_name\" label=\"First Name\">\r\n            <Input />\r\n          </Form.Item>\r\n          <Form.Item name=\"last_name\" label=\"Last Name\">\r\n            <Input />\r\n          </Form.Item>\r\n          <Form.Item\r\n            label=\"Country of Residency\"\r\n            name=\"country_of_residency\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: 'Please select a country'\r\n              }\r\n            ]}\r\n          >\r\n            <Select showSearch>\r\n              {countryList.map(([code, name], value) => {\r\n                return <Select.Option value={code}>{name}</Select.Option>\r\n              })}\r\n            </Select>\r\n          </Form.Item>\r\n          <DateOfBirthInput />\r\n\r\n          <Form.Item style={{ textAlign: 'center' }}>\r\n            <Button\r\n              type=\"primary\"\r\n              htmlType=\"submit\"\r\n              style={{ marginRight: '8px', marginBottom: '12px' }}\r\n            >\r\n              Save\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n      </Card>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default AccountPersonalInfoForm\r\n","import { useFetchGetWithUserId } from '@rocketmaven/hooks/http'\r\nimport { Investor } from '@rocketmaven/pages/Account/types'\r\nimport AccountPersonalInfoForm from '@rocketmaven/pages/Account/AccountPersonalInfoEdit/AccountPersonalInfoForm'\r\n\r\ntype AccountInfoFetch = {\r\n  data: Investor\r\n  isLoading: boolean\r\n}\r\n\r\nconst AccountPersonalInfoEdit = () => {\r\n  const { data, isLoading }: AccountInfoFetch = useFetchGetWithUserId('')\r\n  return isLoading ? null : <AccountPersonalInfoForm investorData={data} />\r\n}\r\nexport default AccountPersonalInfoEdit\r\n","import { Form, Input } from 'antd'\n\nfunction ValidationError(message: string) {\n  return Promise.reject(new Error(message))\n}\n\nconst special_chars = '~`!@#$%^&*()_+-=[]\\\\{}|:\";\\'<>?,./'.split('')\n\nconst PasswordInput = (props: any) => {\n  return (\n    <Form.Item\n      label={props.label ? props.label : 'Password'}\n      name=\"password\"\n      rules={[\n        {\n          required: true,\n          message: 'Please input a password!'\n        },\n        () => ({\n          validator(_, value) {\n            if (!value) return ValidationError('Cannot have an empty password')\n\n            if (value.length < 12)\n              return ValidationError('Password cannot be less than 12 characters')\n\n            if (!/[A-Z]/.test(value))\n              return ValidationError('Password must contain at least one capital letter')\n\n            if (!/[a-z]/.test(value))\n              return ValidationError('Password must contain at least one lowercase letter')\n\n            /*\n            if (!/[0-9]/.test(value))\n              return ValidationError('Password must contain at least one digit')\n\n            if (!value.split('').some((ai: string) => special_chars.includes(ai)))\n              return ValidationError('Password must contain at least one special character')\n            */\n\n            return Promise.resolve()\n          }\n        })\n      ]}\n    >\n      <Input.Password />\n    </Form.Item>\n  )\n}\n\nexport default PasswordInput\n","import PasswordInput from '@rocketmaven/components/PasswordInput'\r\nimport { Card } from '@rocketmaven/componentsStyled/Card'\r\nimport { Subtitle } from '@rocketmaven/componentsStyled/Typography'\r\nimport { useUpdateAccountInfo } from '@rocketmaven/hooks/http'\r\nimport { Investor } from '@rocketmaven/pages/Account/types'\r\nimport { Button, Form, Input } from 'antd'\r\nimport { Fragment } from 'react'\r\n\r\ntype Props = {\r\n  investorData: Investor\r\n}\r\n\r\nconst AccountSecurityInfoForm = ({ investorData }: Props) => {\r\n  const myFetch: Function = useUpdateAccountInfo()\r\n  const onFinish = (values: any) => {\r\n    myFetch({\r\n      ...values,\r\n      confirm: undefined\r\n    })\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <Subtitle>Security Edit</Subtitle>\r\n      <Card title=\"Change Password\">\r\n        <Form\r\n          name=\"account_security_info\"\r\n          className=\"account-security-info\"\r\n          initialValues={{ ...investorData.investor }}\r\n          onFinish={onFinish}\r\n        >\r\n          <PasswordInput label=\"New Password\" />\r\n          <Form.Item\r\n            name=\"confirm\"\r\n            label=\"Confirm New Password\"\r\n            dependencies={['password']}\r\n            hasFeedback\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: 'Please confirm your new password!'\r\n              },\r\n              ({ getFieldValue }) => ({\r\n                validator(_, value) {\r\n                  if (!value || getFieldValue('password') === value) {\r\n                    return Promise.resolve()\r\n                  }\r\n\r\n                  return Promise.reject(\r\n                    new Error('The two passwords that you entered do not match!')\r\n                  )\r\n                }\r\n              })\r\n            ]}\r\n          >\r\n            <Input.Password />\r\n          </Form.Item>\r\n          <Form.Item style={{ textAlign: 'center' }}>\r\n            <Button\r\n              type=\"primary\"\r\n              htmlType=\"submit\"\r\n              style={{ marginRight: '8px', marginBottom: '12px' }}\r\n            >\r\n              Save\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n      </Card>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default AccountSecurityInfoForm\r\n","import { useFetchGetWithUserId } from '@rocketmaven/hooks/http'\r\nimport AccountSecurityInfoForm from '@rocketmaven/pages/Account/AccountSecurityInfoEdit/AccountSecurityInfoForm'\r\nimport { Investor } from '@rocketmaven/pages/Account/types'\r\n\r\ntype AccountInfoFetch = {\r\n  data: Investor\r\n  isLoading: boolean\r\n}\r\n\r\nconst AccountSecurityInfoEdit = () => {\r\n  const { data, isLoading }: AccountInfoFetch = useFetchGetWithUserId('')\r\n  return isLoading ? null : <AccountSecurityInfoForm investorData={data} />\r\n}\r\n\r\nexport default AccountSecurityInfoEdit\r\n","import styled from 'styled-components'\n\nexport const AppWrap = styled.div`\n  display: flex;\n\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen', 'Ubuntu',\n    'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue', sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  background: #fafbfc;\n\n  @media print {\n    font-family: sans-serif;\n  }\n`\n\nexport const ContentWrap = styled.div`\n  flex-grow: 1;\n  min-height: 100vh;\n  overflow: auto;\n`\n","import { ContentWrap } from '@rocketmaven/App/styled'\nimport { Card } from '@rocketmaven/componentsStyled/Card'\nimport { Layout, Menu } from 'antd'\nimport styled from 'styled-components'\nconst { Header, Content, Sider } = Layout\n\nconst sidebarWidth = 200\nconst headerHeight = 84\n\nexport const PageWrap = styled.div`\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n  min-height: 280px;\n  padding: 24px;\n  background: #fafbfc;\n`\n\nexport const SiderWrap = styled(Sider)`\n  min-height: 100vh;\n  min-width: ${sidebarWidth}px;\n  max-width: ${sidebarWidth}px;\n  background-color: white;\n`\n\nexport const MenuItemWrap = styled(Menu.Item)`\n  ${SiderWrap}:not(.ant-layout-sider-collapsed) & {\n    margin: 1rem 2rem;\n    border-radius: 12px;\n  }\n  ${SiderWrap}.ant-layout-sider-collapsed & {\n    padding-left: 32px !important;\n  }\n`\nexport const SidebarWrap = styled(Menu)`\n  min-height: 100vh;\n  position: fixed;\n  overflow-x: hidden;\n`\n\nexport const LogoWrap = styled.div`\n  height: ${headerHeight - 4}px;\n  margin-bottom: 2rem;\n`\n\nexport const HeaderWrap = styled(Header)`\n  position: fixed;\n  top: 0;\n  right: 0;\n  left: 0;\n  z-index: 999;\n  ${ContentWrap}[data-collapsed=\"false\"] & {\n    margin-left: ${sidebarWidth}px;\n  }\n  ${ContentWrap}[data-collapsed=\"true\"] & {\n    margin-left: 80px;\n  }\n  background: white;\n  height: ${headerHeight}px;\n  line-height: ${headerHeight}px !important;\n`\n\nexport const BodyWrap = styled(Content)`\n  margin-top: ${headerHeight}px;\n  min-height: 80vh;\n  @media print {\n    min-height: 50vh;\n  }\n`\n\nexport const FooterWrap = styled(Card)`\n  background: #fafbfc;\n  width: 100%;\n  padding-right: 24px;\n\n  @media print {\n    display: none;\n  }\n`\n","import * as React from 'react'\nimport { BodyWrap, FooterWrap, PageWrap } from './styled'\n\n// This component is a wrapper for the other pages content.\n// Note only the body will change and all the other sections of the DOM will\n// mainly stay the same.\n// TODO(Jude): Find difference between ReactNode and PropsWithChildren and be consistent\ntype Props = {\n  children: React.ReactNode\n}\nconst Page = ({ children }: Props) => {\n  return (\n    <PageWrap>\n      <BodyWrap className=\"site-layout\">{children}</BodyWrap>\n      <footer>\n        <FooterWrap style={{ textAlign: 'center' }}>Rocket Maven ©2021</FooterWrap>\n      </footer>\n    </PageWrap>\n  )\n}\n\nexport default Page\n","import { Title } from '@rocketmaven/componentsStyled/Typography'\r\nimport { urls } from '@rocketmaven/data/urls'\r\nimport AccountDetail from '@rocketmaven/pages/Account/AccountDetail'\r\nimport AccountPersonalInfoEdit from '@rocketmaven/pages/Account/AccountPersonalInfoEdit'\r\nimport AccountSecurityInfoEdit from '@rocketmaven/pages/Account/AccountSecurityInfoEdit'\r\nimport Page from '@rocketmaven/pages/_Page'\r\nimport { Route, Switch } from 'react-router-dom'\r\n\r\nconst Account = () => {\r\n  return (\r\n    <Page>\r\n      <Title>Account</Title>\r\n      <Switch>\r\n        <Route exact path={urls.account} component={AccountDetail} />\r\n        <Route path={urls.account + '/personal'} component={AccountPersonalInfoEdit} />\r\n        <Route path={urls.account + '/security'} component={AccountSecurityInfoEdit} />\r\n      </Switch>\r\n    </Page>\r\n  )\r\n}\r\n\r\nexport default Account\r\n","import { Link } from 'react-router-dom'\r\nexport const assetColumns = [\r\n  {\r\n    title: 'Ticker',\r\n    dataIndex: 'ticker_symbol',\r\n    render: (value: string) => (\r\n      <Link\r\n        to={`/asset/${value}`}\r\n        style={{\r\n          marginRight: '8px',\r\n          marginBottom: '12px'\r\n        }}\r\n      >\r\n        {value}\r\n      </Link>\r\n    ),\r\n    width: '10%'\r\n  },\r\n  {\r\n    title: 'Name',\r\n    dataIndex: 'asset_additional',\r\n    render: (value: string) => {\r\n      const asset_additional = JSON.parse(value)\r\n      if (!asset_additional) return null\r\n      const focus = asset_additional.longName\r\n      if (focus) {\r\n        return <div>{focus}</div>\r\n      }\r\n      return null\r\n    },\r\n    width: '20%'\r\n  },\r\n  {\r\n    title: 'Price',\r\n    dataIndex: 'current_price',\r\n    width: '5%'\r\n  },\r\n  {\r\n    title: 'Change',\r\n    dataIndex: 'asset_additional',\r\n    render: (value: string) => {\r\n      const asset_additional = JSON.parse(value)\r\n      if (!asset_additional) return null\r\n      const focus = asset_additional.regularMarketChange\r\n      if (focus) {\r\n        return <div>{focus.fmt}</div>\r\n      }\r\n      return null\r\n    },\r\n    width: '5%'\r\n  },\r\n  {\r\n    title: 'Market Cap',\r\n    dataIndex: 'asset_additional',\r\n    render: (value: string) => {\r\n      const asset_additional = JSON.parse(value)\r\n      if (!asset_additional) return null\r\n      const focus = asset_additional.marketCap\r\n      if (focus) {\r\n        return <div>{focus.fmt}</div>\r\n      }\r\n      return null\r\n    },\r\n    width: '10%'\r\n  },\r\n  {\r\n    title: '52-Week High',\r\n    dataIndex: 'asset_additional',\r\n    render: (value: string) => {\r\n      const asset_additional = JSON.parse(value)\r\n      if (!asset_additional) return null\r\n      const focus = asset_additional.fiftyTwoWeekHigh\r\n      if (focus) {\r\n        return <div>{focus.fmt}</div>\r\n      }\r\n      return null\r\n    },\r\n    width: '10%'\r\n  },\r\n  {\r\n    title: '52-Week Low',\r\n    dataIndex: 'asset_additional',\r\n    render: (value: string) => {\r\n      const asset_additional = JSON.parse(value)\r\n      if (!asset_additional) return null\r\n      const focus = asset_additional.fiftyTwoWeekLow\r\n      if (focus) {\r\n        return <div>{focus.fmt}</div>\r\n      }\r\n      return null\r\n    },\r\n    width: '10%'\r\n  },\r\n  {\r\n    title: 'Country',\r\n    dataIndex: 'country',\r\n    width: '10%'\r\n  },\r\n  {\r\n    title: 'Industry',\r\n    dataIndex: 'industry'\r\n  }\r\n]\r\n","import { Card } from '@rocketmaven/componentsStyled/Card'\nimport { useAdvancedSearch } from '@rocketmaven/hooks/http'\nimport { useAdvancedSearchParams } from '@rocketmaven/hooks/store'\nimport Page from '@rocketmaven/pages/_Page'\nimport { Button, Col, Form, Input, Radio, Select, Table } from 'antd'\nimport { isEmpty } from 'ramda'\nimport { useEffect } from 'react'\nimport { useHistory, useLocation, withRouter } from 'react-router-dom'\nimport { assetColumns } from './tableDefinition'\n\nexport type AssetSearch = {\n  ticker_symbol: string\n  asset_additional: string\n  market_cap: number\n  country: string\n  name: string\n  industry: string\n  current_price: number\n  price_last_updated: Date\n  currency: string\n  data_source: string\n}\n\nexport type AssetSearchPagination = {\n  next: string\n  pages: number\n  prev: string\n  total: number\n  results: [AssetSearch]\n}\n\nconst PAGE_SIZE = 10\n\n// https://reactrouter.com/web/example/query-parameters\nfunction useQuery() {\n  return new URLSearchParams(useLocation().search)\n}\n\nconst AdvancedSearch = () => {\n  const query = useQuery()\n  const routerObject = useHistory()\n  const [form] = Form.useForm()\n\n  const { currentPage, queryParams, cachedData, dispatch } = useAdvancedSearchParams()\n  const { data, isLoading, myFetch } = useAdvancedSearch()\n  const dataDisplay = isEmpty(data) ? cachedData : data\n\n  useEffect(() => {\n    if (query.get('q')) {\n      if (query.get('q') !== form.getFieldValue('textInput')) {\n        form.setFieldsValue({\n          textInput: query.get('q')!\n        })\n        onFinish(form.getFieldsValue())\n      }\n    }\n  }, [query])\n\n  const onFinish = async (values: any) => {\n    const queryPrefix = `?page=1&per_page=${PAGE_SIZE}`\n    let queryParams = ''\n    if (values.textInput) {\n      queryParams += `&q=${values.textInput}`\n    }\n    if (values.industryInput) {\n      queryParams += `&industry=${values.industryInput}`\n    }\n    if (values.exchangeInput) {\n      queryParams += `&exchange=${values.exchangeInput.join(',')}`\n    }\n    if (values.order) {\n      queryParams += `&order=${values.order}`\n    }\n    if (values.order_direction) {\n      queryParams += `&order_direction=${values.order_direction}`\n    }\n    const results = await myFetch(queryPrefix + queryParams)\n    dispatch({\n      type: 'ADV_SEARCH/UPDATE',\n      payload: {\n        currentPage: 1,\n        queryParams,\n        cachedData: results\n      }\n    })\n  }\n\n  const onChange = async (pagination: any) => {\n    const queryPrefix = `?page=${pagination.current}&per_page=${PAGE_SIZE}&`\n    const results = await myFetch(queryPrefix + queryParams)\n    dispatch({\n      type: 'ADV_SEARCH/UPDATE',\n      payload: {\n        currentPage: pagination.current,\n        queryParams,\n        cachedData: results\n      }\n    })\n  }\n\n  const orderOptions = [\n    { label: 'Market Cap.', value: 'market_cap' },\n    { label: 'Name', value: 'name' },\n    { label: 'Ticker', value: 'ticker' }\n  ]\n\n  const orderValue = 'market_cap'\n\n  const orderDirectionOptions = [\n    { label: 'Ascending [A-Z, 0-9]', value: 'asc' },\n    { label: 'Descending [Z-A, 9-0]', value: 'desc' }\n  ]\n\n  const orderDirection = 'desc'\n\n  return (\n    <Page>\n      <Col style={{ height: '100vh' }}>\n        <h1>Advanced Assets Search</h1>\n\n        <Form\n          name=\"advancedSearch\"\n          className=\"advanced-search-form\"\n          initialValues={{\n            remember: true\n          }}\n          onFinish={onFinish}\n          form={form}\n        >\n          <Form.Item name=\"textInput\">\n            <Input\n              placeholder=\"Asset or ticker name\"\n              onChange={() => {\n                if (query.has('q')) {\n                  query.delete('q')\n                }\n                routerObject.replace({\n                  search: query.toString()\n                })\n              }}\n            />\n          </Form.Item>\n          <Form.Item name=\"exchangeInput\">\n            <Select mode={'multiple'} placeholder=\"Exchange\">\n              <Select.Option value={'ASX'}>ASX</Select.Option>\n              <Select.Option value={'CRYPTO'}>CRYPTO</Select.Option>\n              <Select.Option value={'NASDAQ'}>NASDAQ</Select.Option>\n              <Select.Option value={'NYSE'}>NYSE</Select.Option>\n            </Select>\n          </Form.Item>\n          <Form.Item name=\"industryInput\">\n            <Input placeholder=\"Industry Name\" />\n          </Form.Item>\n\n          <Form.Item label=\"Order By\" name=\"order\" initialValue={orderValue}>\n            <Radio.Group\n              options={orderOptions}\n              defaultValue={orderValue}\n              value={orderValue}\n              optionType=\"button\"\n              buttonStyle=\"solid\"\n            />\n          </Form.Item>\n\n          <Form.Item label=\"Order Direction\" name=\"order_direction\" initialValue={orderDirection}>\n            <Radio.Group\n              options={orderDirectionOptions}\n              defaultValue={orderDirection}\n              value={orderDirection}\n              optionType=\"button\"\n              buttonStyle=\"solid\"\n            />\n          </Form.Item>\n\n          <Form.Item>\n            <Button type=\"primary\" htmlType=\"submit\">\n              Search\n            </Button>\n          </Form.Item>\n        </Form>\n        {\n          // undefined and empty cases\n          isEmpty(dataDisplay) || !dataDisplay ? null : (\n            <Card title={'Search Results'} style={{ width: '90%', overflowX: 'auto' }}>\n              <Table\n                columns={assetColumns}\n                dataSource={dataDisplay.results}\n                rowKey=\"id\"\n                style={{ marginBottom: '4rem' }}\n                pagination={{\n                  total: dataDisplay.total,\n                  showSizeChanger: false,\n                  pageSize: PAGE_SIZE,\n                  current: currentPage\n                }}\n                onChange={onChange}\n              />\n            </Card>\n          )\n        }\n      </Col>\n    </Page>\n  )\n}\n\nexport default withRouter(AdvancedSearch)\n","// https://www.npmjs.com/package/highcharts-react-official\nimport 'highcharts/css/stocktools/gui.css'\nimport 'highcharts/css/annotations/popup.css'\n\nimport Highcharts from 'highcharts/highstock'\nimport HighchartsReact from 'highcharts-react-official'\n\nimport exporting from 'highcharts/modules/exporting'\nimport offlineExporting from 'highcharts/modules/offline-exporting'\nimport exportData from 'highcharts/modules/export-data'\nimport indicatorsAll from 'highcharts/indicators/indicators-all'\nimport dragPanes from 'highcharts/modules/drag-panes'\nimport annotationsAdvanced from 'highcharts/modules/annotations-advanced'\nimport priceIndicator from 'highcharts/modules/price-indicator'\nimport fullScreen from 'highcharts/modules/full-screen'\nimport stockTools from 'highcharts/modules/stock-tools'\nimport drilldown from 'highcharts/modules/drilldown'\nimport accessibility from 'highcharts/modules/accessibility'\nimport boost from 'highcharts/modules/boost'\n\nimport '@rocketmaven/components/MainChart/AdditionalChart.css'\n\nexporting(Highcharts)\nofflineExporting(Highcharts)\nexportData(Highcharts)\naccessibility(Highcharts)\nindicatorsAll(Highcharts)\ndragPanes(Highcharts)\nannotationsAdvanced(Highcharts)\npriceIndicator(Highcharts)\nfullScreen(Highcharts)\nstockTools(Highcharts)\ndrilldown(Highcharts)\nboost(Highcharts)\n\nconst MainChart = (props: any) => {\n  props.options.navigation = {\n    iconsURL: process.env.PUBLIC_URL + '/third-party/highcharts/gfx/stock-icons/'\n  }\n\n  if ('customType' in props && props.customType == 'stock') {\n    props.options.stockTools = { gui: { enabled: true } }\n  }\n  if ('customType' in props && props.customType == 'pie') {\n    props.options.stockTools = { gui: { enabled: false } }\n  }\n\n  return (\n    <div style={{ height: '70vh', width: '100%' }}>\n      <HighchartsReact\n        highcharts={Highcharts}\n        containerProps={{ style: { width: '100%', height: '70vh' } }}\n        {...props}\n      />\n    </div>\n  )\n}\n\nexport default MainChart\n","import MainChart from '@rocketmaven/components/MainChart'\r\nimport { Card } from '@rocketmaven/componentsStyled/Card'\r\nimport { Subtitle } from '@rocketmaven/componentsStyled/Typography'\r\nimport { urls } from '@rocketmaven/data/urls'\r\nimport { useFetchAPIPublicData, useFetchGetWithUserId } from '@rocketmaven/hooks/http'\r\nimport { useIsLoggedIn, useStore } from '@rocketmaven/hooks/store'\r\nimport { PortfolioPagination } from '@rocketmaven/pages/Portfolio/types'\r\nimport { Button, Col, Form, message, Popover, Row, Select, Statistic, Tooltip } from 'antd'\r\nimport { isEmpty } from 'ramda'\r\nimport { useEffect, useState } from 'react'\r\nimport { FaPlus, FaRegStar } from 'react-icons/fa'\r\nimport { useHistory } from 'react-router'\r\nimport { useParams } from 'react-router-dom'\r\nconst { Option } = Select\r\n\r\ntype Params = {\r\n  ticker_symbol: string\r\n}\r\ntype ChartTooltip = {\r\n  chart: any\r\n}\r\ntype ChartTooltipTop = {\r\n  top: any\r\n}\r\n\r\nconst getColorOfValue = (value: number) => {\r\n  return value < 0 ? 'red' : 'green'\r\n}\r\n\r\ntype PortfolioListFetchResults = {\r\n  data: PortfolioPagination\r\n  isLoading: boolean\r\n}\r\n\r\nconst AssetView = () => {\r\n  const { ticker_symbol } = useParams<Params>()\r\n\r\n  let asset_card = null\r\n  let graph_card = null\r\n\r\n  // TODO(Jude): Create single hook for these 2\r\n  const [data, setData] = useState<null | { asset: any }>(null)\r\n  useFetchAPIPublicData(`/assets/${ticker_symbol}`, setData)\r\n  const [graphData, setGraphData] = useState<null | { results: any }>(null)\r\n\r\n  const [chartRef, setChartRef] = useState<Highcharts.Chart>()\r\n\r\n  const [seriesData, setSeriesData] = useState<null | Array<Highcharts.SeriesOptionsType>>(null)\r\n\r\n  const [seriesContext, setSeriesContext] = useState<string>('monthly')\r\n\r\n  const seriesIndex = [\r\n    {\r\n      type: 'hour',\r\n      count: 1,\r\n      text: '1h'\r\n    },\r\n    {\r\n      type: 'day',\r\n      type_full: 'daily',\r\n      count: 1,\r\n      text: '1d'\r\n    },\r\n    {\r\n      type: 'week',\r\n      type_full: 'weekly',\r\n      count: 1,\r\n      text: '1w'\r\n    },\r\n    {\r\n      type: 'month',\r\n      type_full: 'monthly',\r\n      count: 1,\r\n      text: '1m'\r\n    },\r\n    {\r\n      type: 'year',\r\n      type_full: 'yearly',\r\n      count: 1,\r\n      text: '1y'\r\n    }\r\n  ]\r\n\r\n  if (data && !isEmpty(data) && data.asset.asset_additional) {\r\n    const asset_additional = JSON.parse(data.asset.asset_additional)\r\n    console.log(asset_additional)\r\n\r\n    let value = [['Current Market', false, data.asset.current_price]]\r\n\r\n    let additional = [\r\n      ['Change', true, asset_additional.regularMarketChange],\r\n      ['Market Cap', false, asset_additional.marketCap],\r\n      ['Volume', false, asset_additional.regularMarketVolume],\r\n      ['PE', false, asset_additional.trailingPE],\r\n      ['Yield', false, asset_additional.trailingAnnualDividendRate],\r\n      ['EPS', false, asset_additional.epsTrailingTwelveMonths]\r\n    ]\r\n    additional.forEach(function (e: any[]) {\r\n      if (e[2] && e[2].fmt) {\r\n        value.push([e[0], e[1], e[2].fmt])\r\n      }\r\n    })\r\n\r\n    asset_card = (\r\n      <Card title={data.asset.name}>\r\n        <Row gutter={16}>\r\n          {value.map(function (e: any[]) {\r\n            return (\r\n              <Col span={6}>\r\n                <Statistic\r\n                  title={e[0]}\r\n                  value={e[2]}\r\n                  precision={2}\r\n                  valueStyle={{\r\n                    color: e[1] ? getColorOfValue(e[2]) : 'initial'\r\n                  }}\r\n                />\r\n              </Col>\r\n            )\r\n          })}\r\n        </Row>\r\n      </Card>\r\n    )\r\n  }\r\n\r\n  const afterSetExtremes = (e: any) => {\r\n    const { chart } = e.target\r\n\r\n    chart.showLoading('Loading data from server...')\r\n\r\n    setChartRef(chart)\r\n\r\n    if (typeof e.rangeSelectorButton !== 'undefined' && e.rangeSelectorButton.type_full) {\r\n      if (seriesContext !== e.rangeSelectorButton.type_full) {\r\n        setSeriesContext(e.rangeSelectorButton.type_full)\r\n        return\r\n      }\r\n    }\r\n    chart.hideLoading()\r\n  }\r\n\r\n  if (graphData && !isEmpty(graphData)) {\r\n    // https://www.highcharts.com/demo/stock/candlestick-and-volume\r\n    var ohlc: any = [[Date.UTC(2000, 1, 1, 1, 1), null, null, null, null]]\r\n    var volume: any = []\r\n\r\n    graphData.results.forEach(function (e: any) {\r\n      ohlc.push([\r\n        e['timestamp'] * 1000, // the date\r\n        e['open'], // open\r\n        e['high'], // high\r\n        e['low'], // low\r\n        e['close'] // close\r\n      ])\r\n      volume.push([\r\n        e['timestamp'] * 1000, // the date\r\n        e['volume'] // volume\r\n      ])\r\n    })\r\n\r\n    let options = {\r\n      title: {\r\n        text: `${ticker_symbol} Tracker`\r\n      },\r\n      yAxis: [\r\n        {\r\n          labels: {\r\n            align: 'left'\r\n          },\r\n          height: '80%',\r\n          resize: {\r\n            enabled: true\r\n          }\r\n        },\r\n        {\r\n          labels: {\r\n            align: 'left'\r\n          },\r\n          top: '80%',\r\n          height: '20%',\r\n          offset: 0\r\n        }\r\n      ],\r\n      // https://www.highcharts.com/demo/stock/lazy-loading\r\n      rangeSelector: {\r\n        buttons: seriesIndex,\r\n        inputEnabled: false, // it supports only days\r\n        selected: -1 /* seriesIndex.findIndex(function (seriesSelected: any) {\r\n          return seriesSelected.type_full == seriesContext\r\n        }) */ // all\r\n      },\r\n      xAxis: {\r\n        events: {\r\n          afterSetExtremes: afterSetExtremes\r\n        },\r\n        minRange: 3600 * 1000 // one hour\r\n      },\r\n      tooltip: {\r\n        shape: 'square',\r\n        headerShape: 'callout',\r\n        borderWidth: 0,\r\n        valueDecimals: 2,\r\n        shadow: false,\r\n        positioner: function (\r\n          width: number,\r\n          height: number,\r\n          point: Highcharts.TooltipPositionerPointObject\r\n        ) {\r\n          const chart = ((this as unknown) as ChartTooltip).chart\r\n          if (point.isHeader) {\r\n            return {\r\n              x: Math.max(\r\n                // Left side limit\r\n                chart.plotLeft,\r\n                Math.min(\r\n                  point.plotX + chart.plotLeft - width / 2,\r\n                  // Right side limit\r\n                  chart.chartWidth - width - chart.marginRight\r\n                )\r\n              ),\r\n              y: point.plotY\r\n            }\r\n          } else {\r\n            return {\r\n              x: point.series.chart.plotLeft,\r\n              y: ((point.series.yAxis as unknown) as ChartTooltipTop).top - chart.plotTop\r\n            }\r\n          }\r\n        }\r\n      },\r\n      series: seriesData\r\n    }\r\n\r\n    graph_card = (\r\n      <Card>\r\n        <div style={{ height: '70vh', width: '100%' }}>\r\n          <MainChart customType=\"stock\" constructorType={'stockChart'} options={options} />\r\n        </div>\r\n      </Card>\r\n    )\r\n  }\r\n\r\n  const isLoggedIn = useIsLoggedIn()\r\n  const routerObject = useHistory()\r\n  const { accessToken, refreshToken, dispatch } = useStore()\r\n\r\n  const addToWatchlist = async () => {\r\n    if (isLoggedIn) {\r\n      const response = await fetch(`/api/v1/watchlist/${ticker_symbol}`, {\r\n        method: 'POST',\r\n        headers: {\r\n          Accept: 'application/json',\r\n          'Content-Type': 'application/json',\r\n          Authorization: `Bearer ${accessToken}`\r\n        }\r\n      })\r\n      const data = await response.json()\r\n      if (!response.ok) {\r\n        throw Error(`${data.msg}`)\r\n      }\r\n      routerObject.push(urls.watchlists)\r\n    }\r\n  }\r\n\r\n  const [children, setChildren] = useState([])\r\n\r\n  const [refreshFlag, setRefreshFlag] = useState(0)\r\n\r\n  const { data: fetchPortfolioData }: PortfolioListFetchResults = useFetchGetWithUserId(\r\n    '/all_portfolios',\r\n    refreshFlag\r\n  )\r\n\r\n  const addToPortfolio = (e: any) => {\r\n    console.log(e, ticker_symbol)\r\n\r\n    // https://stackoverflow.com/questions/59464337/how-to-send-params-in-usehistory-of-react-router-dom\r\n    routerObject.push({\r\n      pathname: `${urls.portfolio}/${e.portfolio}/addremove`,\r\n      search: `?stock_ticker=${ticker_symbol}&current_price=${data?.asset.current_price}&holdings=1000000`,\r\n      state: {\r\n        // location state\r\n        update: true\r\n      }\r\n    })\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (fetchPortfolioData && !isEmpty(fetchPortfolioData)) {\r\n      const tmpChildren: any = []\r\n      const tmpChildren2: any = fetchPortfolioData.results.map(function (e) {\r\n        tmpChildren.push(e.id)\r\n        return (\r\n          <Option key={e.id} value={e.id}>\r\n            #{e.id} - {e.name}\r\n          </Option>\r\n        )\r\n      })\r\n      setChildren(tmpChildren2)\r\n    }\r\n  }, [fetchPortfolioData])\r\n\r\n  useEffect(() => {\r\n    const api_part = `/chart/${seriesContext}/${ticker_symbol}`\r\n\r\n    const myFetch = async () => {\r\n      try {\r\n        const response = await fetch(`/api/v1${api_part}`, {\r\n          headers: {\r\n            Accept: 'application/json',\r\n            'Content-Type': 'application/json'\r\n          }\r\n        })\r\n        console.log('*********************** status is', response.status)\r\n        if (!response.ok) {\r\n          throw Error(`${response.status}`)\r\n        }\r\n        const data = await response.json()\r\n        setGraphData(data)\r\n        if (chartRef) {\r\n          chartRef.hideLoading()\r\n        }\r\n      } catch (error) {\r\n        message.error(error.message)\r\n      }\r\n    }\r\n    myFetch()\r\n  }, [seriesContext])\r\n\r\n  useEffect(() => {\r\n    if (graphData && !isEmpty(graphData)) {\r\n      setSeriesData([\r\n        {\r\n          type: 'candlestick',\r\n          data: ohlc,\r\n          name: `${ticker_symbol} Price`,\r\n          dataGrouping: {\r\n            enabled: false\r\n          }\r\n        },\r\n        {\r\n          type: 'column',\r\n          id: 'aapl-volume',\r\n          name: `${ticker_symbol} Volume`,\r\n          data: volume,\r\n          yAxis: 1,\r\n          dataGrouping: {\r\n            enabled: false\r\n          }\r\n        }\r\n      ])\r\n    }\r\n  }, [graphData])\r\n  return (\r\n    <div>\r\n      <Subtitle>\r\n        {ticker_symbol}{' '}\r\n        {isLoggedIn ? (\r\n          <>\r\n            <Tooltip placement=\"topLeft\" title=\"Add to Watchlist\" arrowPointAtCenter>\r\n              <Button onClick={addToWatchlist} style={{ marginLeft: '0.5rem' }}>\r\n                <FaRegStar />\r\n              </Button>\r\n            </Tooltip>\r\n\r\n            <Popover\r\n              title=\"Add to Portfolio\"\r\n              trigger=\"click\"\r\n              placement=\"bottom\"\r\n              content={\r\n                <Form onFinish={addToPortfolio}>\r\n                  <Form.Item label=\"Portfolio\" name=\"portfolio\" rules={[{ required: true }]}>\r\n                    <Select placeholder=\"Please select\" style={{ width: '100%' }}>\r\n                      {children}\r\n                    </Select>\r\n                  </Form.Item>\r\n                  <Form.Item>\r\n                    <Button\r\n                      type=\"primary\"\r\n                      style={{\r\n                        marginLeft: '0.5rem',\r\n                        marginRight: '0.5rem'\r\n                      }}\r\n                      htmlType=\"submit\"\r\n                    >\r\n                      Add\r\n                    </Button>\r\n                  </Form.Item>\r\n                </Form>\r\n              }\r\n            >\r\n              <Tooltip placement=\"topLeft\" title=\"Add to Portfolio\" arrowPointAtCenter>\r\n                <Button style={{ marginLeft: '0.5rem' }}>\r\n                  <FaPlus />\r\n                </Button>\r\n              </Tooltip>\r\n            </Popover>\r\n          </>\r\n        ) : null}\r\n      </Subtitle>\r\n      {asset_card}\r\n      {graph_card}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AssetView\r\n","import Page from '@rocketmaven/pages/_Page'\r\nimport { Title } from '@rocketmaven/componentsStyled/Typography'\r\nimport { urls } from '@rocketmaven/data/urls'\r\nimport { Route, Switch } from 'react-router-dom'\r\nimport AssetView from '@rocketmaven/pages/Asset/AssetView'\r\n\r\nconst Asset = () => {\r\n  return (\r\n    <Page>\r\n      <Title>Asset</Title>\r\n      <Switch>\r\n        <Route path={urls.asset + '/:ticker_symbol/'} component={AssetView} />\r\n      </Switch>\r\n    </Page>\r\n  )\r\n}\r\n\r\nexport default Asset\r\n","import { Select, Spin } from 'antd'\r\nimport { SelectProps } from 'antd/es/select'\r\nimport debounce from 'lodash/debounce'\r\nimport { isEmpty } from 'ramda'\r\nimport { useMemo, useRef, useState } from 'react'\r\n\r\ntype AssetSearch = {\r\n  ticker_symbol: string\r\n  asset_additional: string\r\n  market_cap: number\r\n  country: string\r\n  name: string\r\n  industry: string\r\n  current_price: number\r\n  price_last_updated: Date\r\n  currency: string\r\n  data_source: string\r\n}\r\n\r\ntype AssetSearchPagination = {\r\n  next: string\r\n  pages: number\r\n  prev: string\r\n  total: number\r\n  results: [AssetSearch]\r\n}\r\n\r\n// https://ant.design/components/select/#components-select-demo-select-users\r\nexport interface DebounceSelectProps<ValueType = any>\r\n  extends Omit<SelectProps<ValueType>, 'options' | 'children'> {\r\n  fetchOptions: (search: string) => Promise<ValueType[]>\r\n  debounceTimeout?: number\r\n}\r\n\r\nfunction DebounceSelect<\r\n  ValueType extends { key?: string; label: React.ReactNode; value: string | number } = any\r\n>({ fetchOptions, debounceTimeout = 800, ...props }: DebounceSelectProps) {\r\n  const [fetching, setFetching] = useState(false)\r\n  const [options, setOptions] = useState<ValueType[]>([])\r\n  const fetchRef = useRef(0)\r\n\r\n  const debounceFetcher = useMemo(() => {\r\n    const loadOptions = (value: string) => {\r\n      fetchRef.current += 1\r\n      const fetchId = fetchRef.current\r\n      setOptions([])\r\n      setFetching(true)\r\n\r\n      fetchOptions(value).then((newOptions) => {\r\n        if (fetchId !== fetchRef.current) {\r\n          // for fetch callback order\r\n          return\r\n        }\r\n\r\n        setOptions(newOptions)\r\n        setFetching(false)\r\n      })\r\n    }\r\n\r\n    return debounce(loadOptions, debounceTimeout)\r\n  }, [fetchOptions, debounceTimeout])\r\n\r\n  return (\r\n    <Select<ValueType>\r\n      labelInValue\r\n      filterOption={false}\r\n      onSearch={debounceFetcher}\r\n      notFoundContent={fetching ? <Spin size=\"small\" /> : null}\r\n      {...props}\r\n      options={options}\r\n    />\r\n  )\r\n}\r\n\r\n// Usage of DebounceSelect\r\ninterface DebounceValue {\r\n  label: React.ReactNode\r\n  value: string\r\n  key: string\r\n}\r\n\r\nasync function fetchUserList(query: string): Promise<DebounceValue[]> {\r\n  return fetch(`/api/v1/assets/search?q=${query}&per_page=10`)\r\n    .then((response) => response.json())\r\n    .then((data) => {\r\n      if (!data || isEmpty(data) || !data.hasOwnProperty('results')) {\r\n      } else {\r\n        const histories: [AssetSearch] = (data as AssetSearchPagination).results\r\n\r\n        const search_simple = histories.map((item) => {\r\n          return {\r\n            key: item.ticker_symbol,\r\n            value: item.ticker_symbol,\r\n            label: (\r\n              <span title={item.current_price.toString()}>\r\n                {item.ticker_symbol + ' | ' + item.name}\r\n              </span>\r\n            )\r\n          }\r\n        })\r\n\r\n        return search_simple\r\n      }\r\n\r\n      return []\r\n    })\r\n}\r\n\r\nconst AssetSearchBox = (props: any) => {\r\n  return <DebounceSelect placeholder=\"Search Asset\" fetchOptions={fetchUserList} {...props} />\r\n}\r\n\r\nexport default AssetSearchBox\r\n","import styled from 'styled-components'\r\nimport { Button as AntButton } from 'antd'\r\n\r\nexport const Button = styled(AntButton)`\r\n  margin-right: 8px;\r\n  margin-bottom: 12px;\r\n`\r\n","\ntype ChartTooltip = {\n  chart: any\n}\ntype ChartTooltipTop = {\n  top: any\n}\n\nexport const seriesIndex = [\n  {\n    type: 'hour',\n    count: 1,\n    text: '1h'\n  },\n  {\n    type: 'day',\n    type_full: 'daily',\n    count: 1,\n    text: '1d'\n  },\n  {\n    type: 'week',\n    type_full: 'weekly',\n    count: 1,\n    text: '1w'\n  },\n  {\n    type: 'month',\n    type_full: 'monthly',\n    count: 1,\n    text: '1m'\n  },\n  {\n    type: 'year',\n    type_full: 'yearly',\n    count: 1,\n    text: '1y'\n  }\n]\n\nexport const afterSetExtremesPrototype = (\n  setChartRef: any,\n  seriesContext: any,\n  setSeriesContext: any\n) => (e: any) => {\n  const { chart } = e.target\n\n  chart.showLoading('Loading data from server...')\n\n  setChartRef(chart)\n\n  if (typeof e.rangeSelectorButton !== 'undefined' && e.rangeSelectorButton.type_full) {\n    if (seriesContext !== e.rangeSelectorButton.type_full) {\n      setSeriesContext(e.rangeSelectorButton.type_full)\n      return\n    }\n  }\n  chart.hideLoading()\n}\n\nexport const createGraphOptions = ({\n  seriesContext,\n  tmpSeriesData,\n  afterSetExtremes,\n}: any) => {\n  return {\n    // https://www.highcharts.com/docs/advanced-chart-features/boost-module\n    boost: {\n      useGPUTranslations: true,\n      seriesThreshold: 1\n    },\n    title: {\n      text: `Comparer`\n    },\n    yAxis: [\n      {\n        type: 'logarithmic',\n        labels: {\n          align: 'left'\n        },\n        height: '80%',\n        resize: {\n          enabled: true\n        }\n      },\n      {\n        labels: {\n          align: 'left'\n        },\n        top: '80%',\n        height: '20%',\n        offset: 0\n      }\n    ],\n    // https://www.highcharts.com/demo/stock/lazy-loading\n    rangeSelector: {\n      allButtonsEnabled: true,\n      buttons: seriesIndex,\n      inputEnabled: false,\n      selected: seriesIndex.findIndex(function (seriesSelected: any) {\n        return seriesSelected.type_full == seriesContext\n      })\n    },\n    xAxis: {\n      events: {\n        afterSetExtremes: afterSetExtremes\n      },\n      minRange: 3600 * 1000 // one hour\n    },\n    tooltip: {\n      shape: 'square',\n      headerShape: 'callout',\n      borderWidth: 0,\n      valueDecimals: 2,\n      shadow: false,\n      positioner: function (\n        width: number,\n        height: number,\n        point: Highcharts.TooltipPositionerPointObject\n      ) {\n        const chart = ((this as unknown) as ChartTooltip).chart\n        if (point.isHeader) {\n          return {\n            x: Math.max(\n              // Left side limit\n              chart.plotLeft,\n              Math.min(\n                point.plotX + chart.plotLeft - width / 2,\n                // Right side limit\n                chart.chartWidth - width - chart.marginRight\n              )\n            ),\n            y: point.plotY\n          }\n        } else {\n          return {\n            x: point.series.chart.plotLeft,\n            y: ((point.series.yAxis as unknown) as ChartTooltipTop).top - chart.plotTop\n          }\n        }\n      }\n    },\n    series: tmpSeriesData\n  }\n\n}","import MainChart from '@rocketmaven/components/MainChart'\nimport { Card } from '@rocketmaven/componentsStyled/Card'\nimport { isEmpty } from 'ramda'\nimport { createGraphOptions } from './graphDefinitions'\nimport { convertGraphDataToSeries } from './helper'\n\nconst GraphCard = ({\n  graphData,\n  tickers,\n  afterSetExtremes,\n  seriesContext,\n}: any) => {\n  if (!graphData || isEmpty(graphData) || graphData.length !== tickers.length) {\n    return null\n  }\n  const tmpSeriesData = convertGraphDataToSeries(graphData)\n  const options = createGraphOptions({\n    seriesContext,\n    tmpSeriesData,\n    afterSetExtremes,\n  })\n\n  return (\n    <Card>\n      <div style={{ height: '70vh', width: '100%' }}>\n        <MainChart customType=\"stock\" constructorType={'stockChart'} options={options} />\n      </div>\n    </Card>\n  )\n}\n\nexport default GraphCard\n","\nexport const convertGraphDataToSeries = (graphData: any) => {\n  const ohlcSet: any = []\n  const volumeSet: any = []\n  graphData.forEach(function (singleGraphData: [number, { results: any }]) {\n    // https://www.highcharts.com/demo/stock/candlestick-and-volume\n    const ohlc: any = []\n    ohlc.push([Date.UTC(new Date().getFullYear() - 2, 1, 1, 1, 1), null, null, null, null])\n    const volume: any = []\n\n    singleGraphData[1].results.forEach(function (e: any) {\n      ohlc.push([\n        e['timestamp'] * 1000, // the date\n        e['open'], // open\n        e['high'], // high\n        e['low'], // low\n        e['close'] // close\n      ])\n      volume.push([\n        e['timestamp'] * 1000, // the date\n        e['volume'] // volume\n      ])\n    })\n\n    ohlcSet.push([singleGraphData[0], ohlc])\n    volumeSet.push([singleGraphData[0], volume])\n  })\n  const tmpSeriesData: any = []\n\n  ohlcSet.forEach(function (e: any) {\n    tmpSeriesData.push({\n      type: 'candlestick',\n      data: e[1],\n      id: `${e[0]}-price`,\n      name: `${e[0]} Price`,\n      dataGrouping: {\n        enabled: false\n      }\n    })\n  })\n  volumeSet.forEach(function (e: any) {\n    tmpSeriesData.push({\n      type: 'column',\n      id: `${e[0]}-volume`,\n      name: `${e[0]} Volume`,\n      data: e[1],\n      yAxis: 1,\n      dataGrouping: {\n        enabled: true\n      }\n    })\n  })\n  return tmpSeriesData\n}","import AssetSearchBox from '@rocketmaven/components/AssetSearchBox'\nimport { Button } from '@rocketmaven/componentsStyled/Button'\nimport { Card } from '@rocketmaven/componentsStyled/Card'\nimport { Title } from '@rocketmaven/componentsStyled/Typography'\nimport { useGetChartData } from '@rocketmaven/hooks/http'\nimport Page from '@rocketmaven/pages/_Page'\nimport { Form, message } from 'antd'\nimport React, { useEffect, useState } from 'react'\nimport GraphCard from './GraphCard'\nimport { afterSetExtremesPrototype } from './GraphCard/graphDefinitions'\n\nconst Compare = () => {\n  const [graphData, setGraphData] = useState<any[]>([])\n  const [tickers, setTickers] = useState([])\n  const [chartRef, setChartRef] = useState<Highcharts.Chart>()\n  const [seriesContext, setSeriesContext] = useState<string>('monthly')\n  const getChartData = useGetChartData()\n\n  // Curry up references to functions/objections needed to be passed into graph\n  const afterSetExtremes = afterSetExtremesPrototype(setChartRef, seriesContext, setSeriesContext)\n\n  const onFinish = async (values: any) => {\n    const tmpTickers = values.asset_id.map(function (e: any) {\n      return e.value\n    })\n    message.info(`Now comparing: ${tmpTickers}`)\n    setTickers(tmpTickers)\n  }\n\n  useEffect(() => {\n    let newGraphData: any = []\n\n    tickers.forEach(function (ticker_symbol: string) {\n\n      const myFetch = async () => {\n        const api_part = `chart/${seriesContext}/${ticker_symbol}`\n        const data = await getChartData(api_part)\n        if (data) {\n          newGraphData = [...newGraphData, [ticker_symbol, data]]\n\n          if (newGraphData.length === tickers.length) {\n            setGraphData(newGraphData)\n            if (chartRef) {\n              chartRef.hideLoading()\n            }\n          }\n        }\n      }\n      myFetch()\n    })\n  }, [seriesContext, tickers])\n\n  return (\n    <Page>\n      <Title>Compare Assets</Title>\n      <Card title=\"Asset Selection\">\n        <Form name=\"normal_asset\" className=\"report-form\" onFinish={onFinish}>\n          <Form.Item\n            name=\"asset_id\"\n            label=\"Ticker (EXCHANGE:SYMBOL)\"\n            initialValue={[\n              { key: 'NASDAQ:AAPL', value: 'NASDAQ:AAPL' },\n              { key: 'NASDAQ:MSFT', value: 'NASDAQ:MSFT' }\n            ]}\n            rules={[\n              {\n                required: true,\n                message: 'Please input two tickers!'\n              },\n              ({ getFieldValue }) => ({\n                validator(_, value) {\n                  if (value.length > 1) {\n                    return Promise.resolve()\n                  }\n\n                  return Promise.reject(new Error('Please input two or more tickers!'))\n                }\n              })\n            ]}\n          >\n            <AssetSearchBox mode=\"multiple\" showSearch style={{ width: '100%' }} />\n          </Form.Item>\n          <Form.Item>\n            <Button\n              type=\"primary\"\n              htmlType=\"submit\"\n              style={{\n                marginRight: '10px'\n              }}\n            >\n              Compare\n            </Button>\n          </Form.Item>\n        </Form>\n      </Card>\n      <GraphCard\n        graphData={graphData}\n        tickers={tickers}\n        afterSetExtremes={afterSetExtremes}\n        seriesContext={seriesContext}\n      />\n    </Page>\n  )\n}\n\nexport default Compare\n","import { urls } from '@rocketmaven/data/urls'\nimport Page from '@rocketmaven/pages/_Page'\nimport { Button, Col, Row } from 'antd'\nimport { FaBalanceScale, FaHeart, FaSearch, FaTrophy } from 'react-icons/fa'\nimport { Link } from 'react-router-dom'\n\nexport type AssetSearch = {\n  ticker_symbol: string\n  asset_additional: string\n  market_cap: number\n  country: string\n  name: string\n  industry: string\n  current_price: number\n  price_last_updated: Date\n  currency: string\n  data_source: string\n}\n\nexport type AssetSearchPagination = {\n  next: string\n  pages: number\n  prev: string\n  total: number\n  results: [AssetSearch]\n}\n\nconst Explore = () => (\n  <Page>\n    <Row justify=\"center\" style={{ minHeight: '100vh' }}>\n      <Col style={{ height: '100vh' }}>\n        <h1>Explore Rocket Maven</h1>\n        <Row style={{ marginBottom: '0.5rem' }}>\n          <Button type=\"primary\">\n            <Link to={urls.advancedSearch}>\n              <FaSearch /> Advanced Assets Search\n            </Link>\n          </Button>\n        </Row>\n        <Row style={{ marginBottom: '0.5rem' }}>\n          <Button type=\"primary\">\n            <Link to={urls.leaderboard}>\n              <FaTrophy /> Portfolio Competition Leaderboard\n            </Link>\n          </Button>\n        </Row>\n        <Row style={{ marginBottom: '0.5rem' }}>\n          <Button type=\"primary\">\n            <Link to={urls.topAdditions}>\n              <FaHeart /> Top Additions\n            </Link>\n          </Button>\n        </Row>\n        <Row style={{ marginBottom: '0.5rem' }}>\n          <Button type=\"primary\">\n            <Link to={urls.compare}>\n              <FaBalanceScale /> Compare Assets\n            </Link>\n          </Button>\n        </Row>\n      </Col>\n    </Row>\n  </Page>\n)\n\nexport default Explore\n","import { UserOutlined } from '@ant-design/icons'\r\nimport { Card } from '@rocketmaven/componentsStyled/Card'\r\nimport { useIForgot } from '@rocketmaven/hooks/http'\r\nimport Page from '@rocketmaven/pages/_Page'\r\nimport { Button, Form, Input } from 'antd'\r\n\r\nconst Forgot = () => {\r\n  const { isLoading, myFetch } = useIForgot()\r\n  return (\r\n    <Page>\r\n      <Card>\r\n        <Form\r\n          name=\"normal_login\"\r\n          className=\"forgot-form\"\r\n          initialValues={{\r\n            remember: true\r\n          }}\r\n          onFinish={myFetch}\r\n        >\r\n          <Form.Item\r\n            name=\"email\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: 'Please input your Email!'\r\n              }\r\n            ]}\r\n          >\r\n            <Input prefix={<UserOutlined className=\"site-form-item-icon\" />} placeholder=\"Email\" />\r\n          </Form.Item>\r\n\r\n          <Form.Item>\r\n            <Button\r\n              type=\"primary\"\r\n              htmlType=\"submit\"\r\n              style={{ marginRight: '10px' }}\r\n              disabled={isLoading}\r\n              loading={isLoading}\r\n            >\r\n              Reset Password\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n      </Card>\r\n    </Page>\r\n  )\r\n}\r\n\r\nexport default Forgot\r\n","import { CrownOutlined } from '@ant-design/icons'\r\nimport { Subtitle, Title } from '@rocketmaven/componentsStyled/Typography'\r\nimport { urls } from '@rocketmaven/data/urls'\r\nimport { useFetchAPIPublicOrLoggedInData } from '@rocketmaven/hooks/http'\r\nimport { useUserId } from '@rocketmaven/hooks/store'\r\nimport '@rocketmaven/pages/Leaderboard/style.less'\r\nimport { PortfolioInfo } from '@rocketmaven/pages/Portfolio/types'\r\nimport Page from '@rocketmaven/pages/_Page'\r\nimport { message, Table, Tooltip } from 'antd'\r\nimport { isEmpty } from 'ramda'\r\nimport { useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst Leaderboard = () => {\r\n  const [data, setData] = useState<null | [any, { results: any }]>(null)\r\n  const [entries, setEntries] = useState<any>(null)\r\n  const [userEntries, setUserEntries] = useState<any>(null)\r\n\r\n  useFetchAPIPublicOrLoggedInData('/leaderboard', setData)\r\n\r\n  const numberChangeRenderer = (testVal: string, record: any) => {\r\n    const text = parseFloat(testVal).toFixed(2)\r\n    return {\r\n      props: {\r\n        style: { color: parseFloat(testVal) < 0 ? 'red' : 'green' }\r\n      },\r\n      children: <span>{text}</span>\r\n    }\r\n  }\r\n  const investorRenderer = (testVal: any, record: any) => {\r\n    console.log(testVal)\r\n    let username = testVal.username\r\n    if (testVal.first_name) {\r\n      username = testVal.first_name\r\n      if (testVal.last_name) {\r\n        username += ' ' + testVal.last_name\r\n      }\r\n    }\r\n\r\n    return {\r\n      children: <span>{username}</span>\r\n    }\r\n  }\r\n\r\n  const userId = useUserId()\r\n\r\n  const portfolioLinkRenderer = (testVal: number, record: any) => {\r\n    if ((testVal || (record.Investor && record.Investor.id === userId)) && testVal != 0) {\r\n      return <Link to={urls.portfolio + '/' + testVal}>View Portfolio</Link>\r\n    }\r\n    return <>Private Portfolio</>\r\n  }\r\n\r\n  const valueColumns = [\r\n    {\r\n      title: 'Rank',\r\n      dataIndex: 'Rank',\r\n      render: (value: number) => {\r\n        let brag_icon = null\r\n        if (value === 1) {\r\n          brag_icon = <CrownOutlined />\r\n        }\r\n        return (\r\n          <span>\r\n            {brag_icon} {value}\r\n          </span>\r\n        )\r\n      }\r\n    },\r\n    {\r\n      title: 'Investor',\r\n      dataIndex: 'Investor',\r\n      render: investorRenderer\r\n    },\r\n    { title: 'Score', dataIndex: 'Score' },\r\n    { title: 'Purchase Cost', dataIndex: 'Purchase Cost' },\r\n    {\r\n      title: (\r\n        <Tooltip placement=\"topLeft\" title={`Market - Purchase`} arrowPointAtCenter>\r\n          <span style={{ textDecoration: 'underline dotted' }}>Unrealised</span>\r\n        </Tooltip>\r\n      ),\r\n      dataIndex: 'Unrealised',\r\n      render: numberChangeRenderer\r\n    },\r\n    {\r\n      title: (\r\n        <Tooltip placement=\"topLeft\" title={`Sold Value`} arrowPointAtCenter>\r\n          <span style={{ textDecoration: 'underline dotted' }}>Realised</span>\r\n        </Tooltip>\r\n      ),\r\n      dataIndex: 'Realised (Sold Value)',\r\n      render: numberChangeRenderer\r\n    },\r\n    {\r\n      title: 'Explore',\r\n      dataIndex: 'View Portfolio',\r\n      render: portfolioLinkRenderer\r\n    }\r\n  ]\r\n\r\n  const tableData = (portfolio: PortfolioInfo) => {\r\n    return {\r\n      Rank: portfolio.rank,\r\n      Investor: portfolio.investor,\r\n      Score: portfolio.competition_score.toFixed(2),\r\n      'Buying Power': portfolio.buying_power.toFixed(2),\r\n      'Current Market': portfolio.current_value_sum.toFixed(2),\r\n      'Purchase Cost': portfolio.purchase_value_sum.toFixed(2),\r\n      Unrealised: portfolio.current_value_sum - portfolio.purchase_value_sum,\r\n      'Realised (Sold Value)': portfolio.realised_sum,\r\n      'View Portfolio': portfolio.public_portfolio ? portfolio.id : 0\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (data && !isEmpty(data)) {\r\n      const userPortfolios: PortfolioInfo[] = data[0]\r\n      const portfolios: [PortfolioInfo] = data[1].results\r\n\r\n      const tmpEntries: any = []\r\n      const tmpUserEntries: any = []\r\n\r\n      if (!portfolios || isEmpty(portfolios)) {\r\n        message.error('Leaderboard is empty!')\r\n      } else {\r\n        userPortfolios.forEach((portfolio) => {\r\n          tmpUserEntries.push(tableData(portfolio))\r\n        })\r\n        portfolios.forEach((portfolio) => {\r\n          tmpEntries.push(tableData(portfolio))\r\n        })\r\n        setEntries(tmpEntries)\r\n        setUserEntries(tmpUserEntries)\r\n\r\n        if (!tmpEntries) {\r\n          message.error('Leaderboard is empty!')\r\n        }\r\n      }\r\n    }\r\n  }, [data])\r\n\r\n  return (\r\n    <Page>\r\n      <Title>Competition Leaderboard</Title>\r\n\r\n      {userEntries && !isEmpty(userEntries) ? (\r\n        <>\r\n          <Subtitle>Your Rankings</Subtitle>\r\n          <Table\r\n            pagination={false}\r\n            columns={valueColumns}\r\n            dataSource={userEntries}\r\n            rowClassName={(record: any) => {\r\n              switch (true) {\r\n                case record.Rank === 1: {\r\n                  return 'rmv-comp-leaderboard-first'\r\n                }\r\n                default: {\r\n                  return ''\r\n                }\r\n              }\r\n            }}\r\n            rowKey=\"id\"\r\n          />\r\n        </>\r\n      ) : null}\r\n      <br />\r\n      <Subtitle>Top Portfolios</Subtitle>\r\n      <Table\r\n        columns={valueColumns}\r\n        dataSource={entries}\r\n        rowClassName={(record: any) => {\r\n          switch (true) {\r\n            case record.Rank === 1: {\r\n              return 'rmv-comp-leaderboard-first'\r\n            }\r\n            /* Can extend this for more ranks\r\n            case (record.Rank > 1 && record.Rank < 20): {\r\n              return 'rmv-comp-leaderboard-gold'\r\n            }\r\n            */\r\n            default: {\r\n              return ''\r\n            }\r\n          }\r\n        }}\r\n        rowKey=\"id\"\r\n      />\r\n    </Page>\r\n  )\r\n}\r\n\r\nexport default Leaderboard\r\n","import { LockOutlined, UserOutlined } from '@ant-design/icons'\r\nimport { Card } from '@rocketmaven/componentsStyled/Card'\r\nimport { urls } from '@rocketmaven/data/urls'\r\nimport { useAuth } from '@rocketmaven/hooks/http'\r\nimport Page from '@rocketmaven/pages/_Page'\r\nimport { Button, Form, Input } from 'antd'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst LogIn = () => {\r\n  const submit = useAuth('LOGIN')\r\n  const onFinish = (values: any) => {\r\n    submit(values)\r\n  }\r\n\r\n  return (\r\n    <Page>\r\n      <Card>\r\n        <Form\r\n          name=\"normal_login\"\r\n          className=\"login-form\"\r\n          initialValues={{\r\n            remember: true\r\n          }}\r\n          onFinish={onFinish}\r\n        >\r\n          <Form.Item\r\n            name=\"username\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: 'Please input your Username!'\r\n              }\r\n            ]}\r\n          >\r\n            <Input\r\n              prefix={<UserOutlined className=\"site-form-item-icon\" />}\r\n              placeholder=\"Username\"\r\n            />\r\n          </Form.Item>\r\n          <Form.Item\r\n            name=\"password\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: 'Please input your Password!'\r\n              }\r\n            ]}\r\n          >\r\n            <Input\r\n              prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n              type=\"password\"\r\n              placeholder=\"Password\"\r\n            />\r\n          </Form.Item>\r\n          <Form.Item>\r\n            <a className=\"login-form-forgot\" href=\"/forgot\">\r\n              Forgot password\r\n            </a>\r\n          </Form.Item>\r\n\r\n          <Form.Item>\r\n            <Button\r\n              type=\"primary\"\r\n              htmlType=\"submit\"\r\n              style={{\r\n                marginRight: '10px'\r\n              }}\r\n            >\r\n              Log in\r\n            </Button>\r\n            Or <Link to={urls.signup}>register now!</Link>\r\n          </Form.Item>\r\n        </Form>\r\n      </Card>\r\n    </Page>\r\n  )\r\n}\r\n\r\nexport default LogIn\r\n","import PasswordInput from '@rocketmaven/components/PasswordInput'\r\nimport { Card } from '@rocketmaven/componentsStyled/Card'\r\nimport { Title } from '@rocketmaven/componentsStyled/Typography'\r\nimport { usePasswordReset } from '@rocketmaven/hooks/http'\r\nimport Page from '@rocketmaven/pages/_Page'\r\nimport { Button, Form, Input } from 'antd'\r\n\r\nconst layout = {\r\n  labelCol: {\r\n    span: 6\r\n  },\r\n  wrapperCol: {\r\n    span: 18\r\n  }\r\n}\r\nconst tailLayout = {\r\n  wrapperCol: {\r\n    offset: 6,\r\n    span: 18\r\n  }\r\n}\r\n\r\nconst PasswordReset = () => {\r\n  const myFetch = usePasswordReset()\r\n\r\n  const onFinish = async (values: any) => {\r\n    const urlParams = new URLSearchParams(window.location.search)\r\n    values.evc = urlParams.get('key')\r\n    myFetch(values)\r\n  }\r\n\r\n  return (\r\n    <Page>\r\n      <Title>Enter New Password</Title>\r\n      <Card>\r\n        <Form\r\n          {...layout}\r\n          name=\"basic\"\r\n          initialValues={{\r\n            remember: true\r\n          }}\r\n          onFinish={onFinish}\r\n        >\r\n          <PasswordInput />\r\n\r\n          <Form.Item\r\n            name=\"confirmation\"\r\n            label=\"Confirm Password\"\r\n            dependencies={['password']}\r\n            hasFeedback\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: 'Please confirm your password!'\r\n              },\r\n              ({ getFieldValue }) => ({\r\n                validator(_, value) {\r\n                  if (!value || getFieldValue('password') === value) {\r\n                    return Promise.resolve()\r\n                  }\r\n\r\n                  return Promise.reject(\r\n                    new Error('The two passwords that you entered do not match!')\r\n                  )\r\n                }\r\n              })\r\n            ]}\r\n          >\r\n            <Input.Password />\r\n          </Form.Item>\r\n          <Form.Item label=\"Username\" style={{ display: 'none' }}>\r\n            <Input type=\"text\" />\r\n          </Form.Item>\r\n          <Form.Item {...tailLayout}>\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n              Reset Password\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n      </Card>\r\n    </Page>\r\n  )\r\n}\r\n\r\nexport default PasswordReset\r\n","import { Subtitle } from '@rocketmaven/componentsStyled/Typography'\r\nimport { useGetPortfolioHistory } from '@rocketmaven/hooks/http'\r\nimport { PortfolioEvent } from '@rocketmaven/pages/Portfolio/types'\r\nimport { Table } from 'antd'\r\nimport { isEmpty } from 'ramda'\r\nimport { Fragment } from 'react'\r\nimport { Link, useParams } from 'react-router-dom'\r\n\r\ntype Params = {\r\n  id: string\r\n  hid: string\r\n}\r\n\r\nconst PortfolioHistory = () => {\r\n  const { id, hid } = useParams<Params>()\r\n\r\n  console.log({ id, hid })\r\n\r\n  const { isLoading, data } = useGetPortfolioHistory(id)\r\n  let historyTable = null\r\n  if (data && !isEmpty(data)) {\r\n    const histories: [PortfolioEvent] = data.results\r\n\r\n    const assetHistories = histories.filter((item) => item.asset_id === hid)\r\n    const columns = [\r\n      {\r\n        title: 'Type',\r\n        dataIndex: 'add_action',\r\n        render: (value: string) => (value ? 'Add' : 'Remove')\r\n      },\r\n      {\r\n        title: 'Event ID',\r\n        dataIndex: 'id'\r\n      },\r\n      {\r\n        title: 'Ticker',\r\n        dataIndex: 'asset_id'\r\n      },\r\n      {\r\n        title: 'Date',\r\n        dataIndex: 'event_date'\r\n      },\r\n      {\r\n        title: 'Fees',\r\n        dataIndex: 'fees'\r\n      },\r\n      {\r\n        title: 'Units',\r\n        dataIndex: 'units'\r\n      },\r\n      {\r\n        title: 'Price Per Unit',\r\n        dataIndex: 'price_per_share',\r\n        render: (value: number) => value.toFixed(2)\r\n      },\r\n      {\r\n        title: 'Note',\r\n        dataIndex: 'note'\r\n      }\r\n    ]\r\n    historyTable = <Table columns={columns} dataSource={assetHistories} rowKey=\"id\" />\r\n  }\r\n\r\n  return (\r\n    isLoading\r\n      ? null\r\n      :\r\n      <Fragment>\r\n        <Subtitle>\r\n          Holding History for <Link to={`/asset/${hid}`}>{hid}</Link>\r\n        </Subtitle>\r\n        {historyTable}\r\n      </Fragment>\r\n  )\r\n}\r\n\r\nexport default PortfolioHistory\r\n","import { InboxOutlined, LoadingOutlined, PlusOutlined } from '@ant-design/icons'\r\nimport { Card } from '@rocketmaven/componentsStyled/Card'\r\nimport { useAccessToken, useAddPortfolioEvent } from '@rocketmaven/hooks/http'\r\nimport { Button, Form, message, Upload } from 'antd'\r\nimport { useState } from 'react'\r\nimport { useHistory } from 'react-router'\r\n\r\ntype Props = {\r\n  // Check if changing to to a non-optional value broke anything\r\n  portfolioId: string\r\n}\r\n\r\nconst formItemLayout = {\r\n  labelCol: {\r\n    xs: { span: 24 },\r\n    sm: { span: 10 }\r\n  },\r\n  wrapperCol: {\r\n    xs: { span: 24 },\r\n    sm: { span: 16 }\r\n  }\r\n}\r\n\r\n// FIX(Jude)\r\nconst PortfolioAssetEditForm = ({ portfolioId }: Props) => {\r\n  const [fileList, setFileList] = useState<any[]>([])\r\n  const [form] = Form.useForm()\r\n  const routerObject = useHistory()\r\n  const { accessToken, revalidateAccessToken } = useAccessToken()\r\n\r\n  const urlEnd = `/api/v1/portfolios/${portfolioId}/history`\r\n\r\n  const myFetch: Function = useAddPortfolioEvent(portfolioId)\r\n\r\n  const onFinish = async (values: any) => {\r\n    const formData = new FormData()\r\n    fileList.forEach((file) => {\r\n      formData.append('files[]', file)\r\n    })\r\n\r\n    const response = await fetch(urlEnd, {\r\n      method: 'POST',\r\n      headers: {\r\n        Authorization: `Bearer ${accessToken}`\r\n      },\r\n      body: formData\r\n    })\r\n    const data = await response.json()\r\n    if (!response.ok) {\r\n      message.error(`${data.msg}`)\r\n      return\r\n    }\r\n    routerObject.push('/')\r\n\r\n    console.log('************** values are ', values)\r\n    myFetch({\r\n      ...values\r\n    })\r\n  }\r\n\r\n  const uploadButton = (\r\n    <div>\r\n      {false ? <LoadingOutlined /> : <PlusOutlined />}\r\n      <div style={{ marginTop: 8 }}>Drop CSV File Here</div>\r\n    </div>\r\n  )\r\n\r\n  const handleChange = (info: any) => {\r\n    if (info.file.status === 'uploading') {\r\n      /* this.setState({ loading: true }); */\r\n      return\r\n    }\r\n    if (info.file.status === 'done') {\r\n    }\r\n  }\r\n\r\n  const beforeUpload = function (file: any) {\r\n    setFileList([...fileList, file])\r\n    return false\r\n  }\r\n\r\n  const onRemove = function (file: any) {\r\n    const index = fileList.indexOf(file)\r\n    const newFileList = fileList.slice()\r\n    newFileList.splice(index, 1)\r\n    setFileList(newFileList)\r\n  }\r\n\r\n  return (\r\n    <Card title=\"CSV Upload\">\r\n      <Form\r\n        style={{ textAlign: 'center' }}\r\n        name=\"csv_upload\"\r\n        className=\"csv-upload-form\"\r\n        form={form}\r\n        {...formItemLayout}\r\n        onFinish={onFinish}\r\n      >\r\n        <Form.Item name=\"dragger\" className=\"csv-uploader\" noStyle>\r\n          <Upload.Dragger\r\n            name=\"files\"\r\n            beforeUpload={beforeUpload}\r\n            onChange={handleChange}\r\n            onRemove={onRemove}\r\n          >\r\n            <p className=\"ant-upload-drag-icon\">\r\n              <InboxOutlined />\r\n            </p>\r\n            <p className=\"ant-upload-text\">Click or drag CSV file to this area to bulk import</p>\r\n            <p className=\"ant-upload-hint\">Support for mulitple files.</p>\r\n          </Upload.Dragger>\r\n        </Form.Item>\r\n\r\n        {/* <Button type=\"primary\" onClick={() => setAddActionValue(true)} htmlType=\"submit\" value={addActionValue} style={{ */}\r\n        <Form.Item>\r\n          <Button\r\n            type=\"primary\"\r\n            htmlType=\"submit\"\r\n            style={{\r\n              marginRight: '8px',\r\n              marginBottom: '12px'\r\n            }}\r\n          >\r\n            Upload\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default PortfolioAssetEditForm\r\n","import { useStore } from '@rocketmaven/hooks/store'\r\nimport { Select, Spin } from 'antd'\r\nimport { SelectProps } from 'antd/es/select'\r\nimport debounce from 'lodash/debounce'\r\nimport { isEmpty } from 'ramda'\r\nimport { useMemo, useRef, useState } from 'react'\r\n\r\ntype AssetSearch = {\r\n  ticker_symbol: string\r\n  asset_additional: string\r\n  market_cap: number\r\n  country: string\r\n  name: string\r\n  industry: string\r\n  current_price: number\r\n  price_last_updated: Date\r\n  currency: string\r\n  data_source: string\r\n  available_units: number\r\n}\r\n\r\ntype AssetSearchPagination = {\r\n  results: [AssetSearch]\r\n}\r\n\r\n// https://ant.design/components/select/#components-select-demo-select-users\r\nexport interface DebounceSelectProps<ValueType = any>\r\n  extends Omit<SelectProps<ValueType>, 'options' | 'children'> {\r\n  fetchOptions: (search: string) => Promise<ValueType[]>\r\n  debounceTimeout?: number\r\n}\r\n\r\nfunction DebounceSelect<\r\n  ValueType extends { key?: string; label: React.ReactNode; value: string | number } = any\r\n>({ fetchOptions, debounceTimeout = 800, ...props }: DebounceSelectProps) {\r\n  const [fetching, setFetching] = useState(false)\r\n  const [options, setOptions] = useState<ValueType[]>([])\r\n  const fetchRef = useRef(0)\r\n\r\n  const debounceFetcher = useMemo(() => {\r\n    const loadOptions = (value: string) => {\r\n      fetchRef.current += 1\r\n      const fetchId = fetchRef.current\r\n      setOptions([])\r\n      setFetching(true)\r\n\r\n      fetchOptions(value).then((newOptions) => {\r\n        if (fetchId !== fetchRef.current) {\r\n          // for fetch callback order\r\n          return\r\n        }\r\n\r\n        setOptions(newOptions)\r\n        setFetching(false)\r\n      })\r\n    }\r\n\r\n    return debounce(loadOptions, debounceTimeout)\r\n  }, [fetchOptions, debounceTimeout])\r\n\r\n  return (\r\n    <Select<ValueType>\r\n      labelInValue\r\n      filterOption={false}\r\n      onSearch={debounceFetcher}\r\n      notFoundContent={fetching ? <Spin size=\"small\" /> : null}\r\n      {...props}\r\n      options={options}\r\n    />\r\n  )\r\n}\r\n\r\n// Usage of DebounceSelect\r\ninterface DebounceValue {\r\n  label: React.ReactNode\r\n  value: string\r\n  key: string\r\n}\r\n\r\nconst UserAssetSearchBox = (props: any) => {\r\n  const { accessToken } = useStore()\r\n  async function fetchUserList(query: string): Promise<DebounceValue[]> {\r\n    return fetch(`/api/v1/assets/search/${props.portfolioid}?q=${query}&per_page=10`, {\r\n      headers: {\r\n        Accept: 'application/json',\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${accessToken}`\r\n      }\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        if (!data || isEmpty(data) || !data.hasOwnProperty('results')) {\r\n        } else {\r\n          const histories: [AssetSearch] = (data as AssetSearchPagination).results\r\n\r\n          const search_simple = histories.map((item) => {\r\n            return {\r\n              key: item.ticker_symbol,\r\n              value: item.ticker_symbol,\r\n              label: (\r\n                <span\r\n                  title={item.current_price.toString()}\r\n                  data-holdings={item.available_units.toString()}\r\n                >\r\n                  {item.ticker_symbol + ' | ' + item.name}\r\n                </span>\r\n              )\r\n            }\r\n          })\r\n\r\n          console.log(search_simple)\r\n\r\n          return search_simple\r\n        }\r\n\r\n        return []\r\n      })\r\n  }\r\n\r\n  return <DebounceSelect placeholder=\"Search Asset\" fetchOptions={fetchUserList} {...props} />\r\n}\r\n\r\nexport default UserAssetSearchBox\r\n","import UserAssetSearchBox from '@rocketmaven/components/UserAssetSearchBox'\r\nimport { Card } from '@rocketmaven/componentsStyled/Card'\r\nimport { useAddPortfolioEvent } from '@rocketmaven/hooks/http'\r\nimport { PortfolioEventCreate, PortfolioInfo } from '@rocketmaven/pages/Portfolio/types'\r\nimport { Button, Col, Form, Input, InputNumber, Row, Statistic } from 'antd'\r\nimport { useEffect, useState } from 'react'\r\nimport { RouteComponentProps, useHistory, useLocation, withRouter } from 'react-router-dom'\r\n\r\ninterface PropsInterface extends RouteComponentProps {\r\n  portfolioId: string\r\n  portfolioInfo: PortfolioInfo\r\n}\r\n\r\ntype Props = PropsInterface\r\n\r\nconst formItemLayout = {\r\n  labelCol: {\r\n    xs: { span: 24 },\r\n    sm: { span: 10 }\r\n  },\r\n  wrapperCol: {\r\n    xs: { span: 24 },\r\n    sm: { span: 16 }\r\n  }\r\n}\r\n\r\n// https://reactrouter.com/web/example/query-parameters\r\nfunction useQuery() {\r\n  return new URLSearchParams(useLocation().search)\r\n}\r\n\r\nconst PortfolioAssetEditForm = ({ portfolioId, portfolioInfo }: Props) => {\r\n  const [addActionValue, setAddActionValue] = useState(true)\r\n  const [holdings, setHoldings] = useState(0)\r\n  const [pricePerShare, setPricePerShare] = useState(0)\r\n  const [currentTicker, setCurrentTicker] = useState('')\r\n  const [units, setUnits] = useState(1)\r\n  const [form] = Form.useForm()\r\n  const query = useQuery()\r\n  const routerObject = useHistory()\r\n\r\n  const initialValues: PortfolioEventCreate = {\r\n    add_action: addActionValue,\r\n    asset_id: '',\r\n    fees: 0,\r\n    note: '',\r\n    price_per_share: 0,\r\n    units: 1,\r\n    exchange_rate: 1\r\n  }\r\n\r\n  const myFetch: Function = useAddPortfolioEvent(portfolioId)\r\n\r\n  useEffect(() => {\r\n    if (query.get('stock_ticker')) {\r\n      if (query.get('stock_ticker') !== form.getFieldValue('asset_id')) {\r\n        form.setFieldsValue({\r\n          asset_id: { key: query.get('stock_ticker')!, value: query.get('stock_ticker')! }\r\n        })\r\n        setCurrentTicker(query.get('stock_ticker')!)\r\n        if (query.get('current_price')) {\r\n          form.setFieldsValue({\r\n            price_per_share: parseFloat(query.get('current_price')!)\r\n          })\r\n          setPricePerShare(parseFloat(query.get('current_price')!))\r\n        }\r\n        if (query.get('holdings')) {\r\n          setHoldings(parseFloat(query.get('holdings')!))\r\n        }\r\n      }\r\n    }\r\n  }, [query])\r\n\r\n  const onFinish = (values: any) => {\r\n    values.asset_id = values.asset_id.value\r\n    values.add_action = addActionValue\r\n    myFetch({\r\n      ...values\r\n    })\r\n  }\r\n\r\n  const getColorOfValue = (value: number) => {\r\n    return value < 0 ? 'red' : 'green'\r\n  }\r\n\r\n  const getLivePrice = () => {\r\n    const myFetch = async () => {\r\n      try {\r\n        const response = await fetch(`/api/v1/assets/${currentTicker}/price`, {\r\n          headers: {\r\n            Accept: 'application/json',\r\n            'Content-Type': 'application/json'\r\n          }\r\n        })\r\n        if (!response.ok) {\r\n          throw Error(`${response.status}`)\r\n        }\r\n        const data = await response.json()\r\n        setPricePerShare(data.price)\r\n        form.setFieldsValue({\r\n          price_per_share: data.price\r\n        })\r\n      } catch (error) {}\r\n    }\r\n    myFetch()\r\n  }\r\n\r\n  return (\r\n    <Card>\r\n      <Form\r\n        name=\"normal_assetadd\"\r\n        className=\"assetadd-form\"\r\n        form={form}\r\n        initialValues={{\r\n          remember: true,\r\n          ...initialValues\r\n        }}\r\n        {...formItemLayout}\r\n        onFinish={onFinish}\r\n      >\r\n        <Form.Item\r\n          name=\"asset_id\"\r\n          label=\"Ticker (EXCHANGE:SYMBOL)\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Please input a ticker!'\r\n            }\r\n          ]}\r\n        >\r\n          <UserAssetSearchBox\r\n            showSearch\r\n            portfolioid={portfolioId}\r\n            onChange={(newValue: any) => {\r\n              console.log(newValue)\r\n              setHoldings(parseFloat(newValue.label.props['data-holdings']))\r\n              setPricePerShare(newValue.label.props.title)\r\n              setCurrentTicker(newValue.value)\r\n              form.setFieldsValue({\r\n                price_per_share: newValue.label.props.title\r\n              })\r\n            }}\r\n            style={{ width: '100%' }}\r\n          />\r\n        </Form.Item>\r\n        {!portfolioInfo.competition_portfolio ? (\r\n          <Form.Item\r\n            name=\"fees\"\r\n            label=\"Fees\"\r\n            rules={[\r\n              {\r\n                required: true\r\n              }\r\n            ]}\r\n          >\r\n            <InputNumber />\r\n          </Form.Item>\r\n        ) : null}\r\n        <Form.Item\r\n          name=\"units\"\r\n          label=\"Units\"\r\n          rules={[\r\n            {\r\n              required: true\r\n            }\r\n          ]}\r\n        >\r\n          <InputNumber min={1} onChange={(e: any) => setUnits(e)} />\r\n        </Form.Item>\r\n        {!portfolioInfo.competition_portfolio ? (\r\n          <Form.Item\r\n            name=\"price_per_share\"\r\n            label=\"Price Per Unit\"\r\n            rules={[\r\n              {\r\n                required: true\r\n              }\r\n            ]}\r\n          >\r\n            <InputNumber\r\n              onChange={(price: number) => {\r\n                if (query.has('current_price')) {\r\n                  query.delete('current_price')\r\n                }\r\n                if (query.has('stock_ticker')) {\r\n                  query.delete('stock_ticker')\r\n                }\r\n                if (query.has('holdings')) {\r\n                  query.delete('holdings')\r\n                }\r\n\r\n                routerObject.replace({\r\n                  search: query.toString()\r\n                })\r\n                setPricePerShare(price)\r\n              }}\r\n            />\r\n          </Form.Item>\r\n        ) : (\r\n          <span>\r\n            <Form.Item name=\"price_per_share\" label=\"Current Value\">\r\n              <Input disabled />\r\n            </Form.Item>\r\n          </span>\r\n        )}\r\n        <Form.Item\r\n          name=\"exchange_rate\"\r\n          label=\"Exchange Rate\"\r\n          rules={[\r\n            {\r\n              required: true\r\n            }\r\n          ]}\r\n        >\r\n          <InputNumber />\r\n        </Form.Item>\r\n\r\n        <Form.Item label=\"Update Price Per Share\">\r\n          <Button\r\n            type=\"primary\"\r\n            onClick={getLivePrice}\r\n            danger\r\n            style={{\r\n              marginRight: '8px',\r\n              marginBottom: '12px'\r\n            }}\r\n          >\r\n            Get Live Price\r\n          </Button>\r\n        </Form.Item>\r\n        <Form.Item\r\n          name=\"note\"\r\n          label=\"Note\"\r\n          rules={[\r\n            {\r\n              required: false\r\n            }\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n        {portfolioInfo.competition_portfolio ? (\r\n          <Row gutter={16}>\r\n            <Col span={6}>\r\n              <Statistic title=\"Buying Power\" value={portfolioInfo.buying_power} precision={2} />\r\n            </Col>\r\n            <Col span={6}>\r\n              <Statistic title=\"Event Value\" value={pricePerShare * units} precision={2} />\r\n            </Col>\r\n            <Col span={6}>\r\n              <Statistic\r\n                title=\"New Add Buying Power\"\r\n                value={portfolioInfo.buying_power - pricePerShare * units}\r\n                precision={2}\r\n                valueStyle={{\r\n                  color: getColorOfValue(portfolioInfo.buying_power - pricePerShare * units)\r\n                }}\r\n              />\r\n            </Col>\r\n            <Col span={6}>\r\n              <Statistic\r\n                title=\"New Remove Buying Power\"\r\n                value={portfolioInfo.buying_power + pricePerShare * units}\r\n                precision={2}\r\n              />\r\n            </Col>\r\n          </Row>\r\n        ) : null}\r\n        <Row gutter={16}>\r\n          <Col span={6}>\r\n            <Statistic title=\"Currently Holding\" value={holdings} precision={2} />\r\n          </Col>\r\n          <Col span={6}>\r\n            <Statistic title=\"Units\" value={units ? units : 0} precision={2} />\r\n          </Col>\r\n          <Col span={6}>\r\n            <Statistic title=\"New Add Units\" value={holdings + units} precision={2} />\r\n          </Col>\r\n          <Col span={6}>\r\n            <Statistic\r\n              title=\"New Remove Units\"\r\n              value={holdings - units}\r\n              precision={2}\r\n              valueStyle={{ color: getColorOfValue(holdings - units) }}\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <Form.Item style={{ textAlign: 'center' }}>\r\n          <Button\r\n            type=\"primary\"\r\n            onClick={() => setAddActionValue(true)}\r\n            htmlType=\"submit\"\r\n            style={{\r\n              marginRight: '8px',\r\n              marginBottom: '12px'\r\n            }}\r\n            disabled={\r\n              (portfolioInfo.competition_portfolio &&\r\n                portfolioInfo.buying_power - pricePerShare * units < 0) ||\r\n              units <= 0\r\n            }\r\n          >\r\n            Add\r\n          </Button>\r\n          <Button\r\n            type=\"primary\"\r\n            onClick={() => setAddActionValue(false)}\r\n            htmlType=\"submit\"\r\n            danger\r\n            style={{\r\n              marginRight: '8px',\r\n              marginBottom: '12px'\r\n            }}\r\n            disabled={holdings - units < 0 || units <= 0}\r\n          >\r\n            Remove\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default withRouter(PortfolioAssetEditForm)\r\n","import { Subtitle } from '@rocketmaven/componentsStyled/Typography'\nimport { useGetPortfolioInfo } from '@rocketmaven/hooks/http'\nimport PortfolioAssetCSVUpload from '@rocketmaven/pages/Portfolio/PortfolioAssetCSVUpload'\nimport PortfolioAssetEditForm from '@rocketmaven/pages/Portfolio/PortfolioAssetEditForm'\nimport { Fragment } from 'react'\nimport { useParams } from 'react-router-dom'\nimport { PortfolioInfo } from '../types'\n\ntype Params = {\n  id: string\n}\n\ntype PortfolioFetchInfo = {\n  data: {\n    portfolio: PortfolioInfo\n  }\n  isLoading: boolean\n}\n\nconst PortfolioAssetCreate = () => {\n  const { id } = useParams<Params>()\n  const { data, isLoading }: PortfolioFetchInfo = useGetPortfolioInfo(id)\n\n  return isLoading ? null : (\n    <Fragment>\n      <Subtitle>Event Create for {data.portfolio.name}</Subtitle>\n      <PortfolioAssetEditForm portfolioId={id} portfolioInfo={data.portfolio} />\n      {!data.portfolio.competition_portfolio && <PortfolioAssetCSVUpload portfolioId={id} />}\n    </Fragment>\n  )\n}\n\nexport default PortfolioAssetCreate\n","import { Card } from '@rocketmaven/componentsStyled/Card'\r\nimport { useUpdatePortfolioInfo } from '@rocketmaven/hooks/http'\r\nimport { useSortedCountryList, useSortedCurrencyList } from '@rocketmaven/hooks/store'\r\nimport { PortfolioInfoEdit } from '@rocketmaven/pages/Portfolio/types'\r\nimport { Button, Form, Input, Select, Switch } from 'antd'\r\nimport { useState } from 'react'\r\nconst { Option } = Select\r\n\r\ntype Props = {\r\n  portfolioInfo?: {\r\n    portfolio: PortfolioInfoEdit\r\n  }\r\n  portfolioId?: string\r\n  action?: string\r\n}\r\n\r\nconst PortfolioEditForm = ({ portfolioInfo, portfolioId, action }: Props) => {\r\n  const countryList = useSortedCountryList()\r\n  const currencyList = useSortedCurrencyList()\r\n  const [hideCurrency, setHideCurrency] = useState(false)\r\n\r\n  let initialValues: PortfolioInfoEdit = {\r\n    competition_portfolio: false,\r\n    description: '',\r\n    name: '',\r\n    tax_residency: '',\r\n    public_portfolio: true,\r\n    creation_date: '',\r\n    currency: 'AUD',\r\n    id: 0\r\n  }\r\n\r\n  let countryElement: [string, string] = ['AU', 'Australia']\r\n  let currencyElement: [string, string] = ['AUD', 'Australian Dollars']\r\n\r\n  if (portfolioInfo) {\r\n    initialValues = { ...portfolioInfo.portfolio }\r\n    // Get the country code of the name returned\r\n    countryElement = countryList.find(\r\n      (element) => portfolioInfo.portfolio.tax_residency === element[1]\r\n    ) as [string, string]\r\n\r\n    currencyElement = currencyList.find(\r\n      (element) => portfolioInfo.portfolio.currency === element[1]\r\n    ) as [string, string]\r\n  }\r\n\r\n  const setValuesAndFetch: Function = useUpdatePortfolioInfo(\r\n    portfolioInfo ? 'PUT' : 'POST',\r\n    portfolioId\r\n  )\r\n  const onFinish = (values: any) => {\r\n    console.log(values)\r\n    setValuesAndFetch({\r\n      ...values,\r\n      id: undefined,\r\n      creation_date: undefined\r\n    })\r\n  }\r\n\r\n  const actAccordingly = (e: any) => {\r\n    if (e == '0') {\r\n      setHideCurrency(false)\r\n    } else {\r\n      setHideCurrency(true)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Card>\r\n      <Form\r\n        name=\"portfolio_edit\"\r\n        className=\"portfolio-edit-form\"\r\n        initialValues={{\r\n          remember: true\r\n        }}\r\n        onFinish={onFinish}\r\n      >\r\n        <Form.Item\r\n          name=\"name\"\r\n          initialValue={initialValues.name}\r\n          label=\"Portfolio Name\"\r\n          rules={[\r\n            {\r\n              required: true\r\n            }\r\n          ]}\r\n        >\r\n          <Input placeholder=\"Name\" />\r\n        </Form.Item>\r\n        {action == 'Create' ? (\r\n          <Form.Item\r\n            name=\"competition_portfolio\"\r\n            label=\"Portfolio Type\"\r\n            rules={[{ required: true }]}\r\n          >\r\n            <Select onChange={actAccordingly}>\r\n              <Option value=\"0\">Regular Portfolio</Option>\r\n              <Option value=\"1\">Competition Portfolio</Option>\r\n            </Select>\r\n          </Form.Item>\r\n        ) : null}\r\n        <Form.Item\r\n          name=\"description\"\r\n          initialValue={initialValues.description}\r\n          label=\"Description\"\r\n          rules={[\r\n            {\r\n              required: false\r\n            }\r\n          ]}\r\n        >\r\n          <Input placeholder=\"Description\" />\r\n        </Form.Item>\r\n        {!hideCurrency && (!portfolioInfo || !portfolioInfo.portfolio.competition_portfolio) ? (\r\n          <>\r\n            <Form.Item\r\n              label=\"Tax Residency\"\r\n              name=\"tax_residency\"\r\n              initialValue={countryElement[0]}\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: 'Please select a country'\r\n                }\r\n              ]}\r\n            >\r\n              <Select showSearch>\r\n                {countryList.map(([code, name], value) => {\r\n                  return <Option value={code}>{name}</Option>\r\n                })}\r\n              </Select>\r\n            </Form.Item>\r\n            {action == 'Create' ? (\r\n              <Form.Item\r\n                label=\"Currency\"\r\n                name=\"currency\"\r\n                initialValue={currencyElement[0]}\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: 'Please select a currency'\r\n                  }\r\n                ]}\r\n              >\r\n                <Select showSearch>\r\n                  {currencyList.map(([code, name], value) => {\r\n                    return <Option value={code}>{name}</Option>\r\n                  })}\r\n                </Select>\r\n              </Form.Item>\r\n            ) : null}\r\n          </>\r\n        ) : null}\r\n        <Form.Item\r\n          label=\"Public\"\r\n          name=\"public_portfolio\"\r\n          initialValue={initialValues.public_portfolio}\r\n        >\r\n          <Switch defaultChecked={initialValues.public_portfolio ? true : false} />\r\n        </Form.Item>\r\n        <Form.Item>\r\n          <Button\r\n            type=\"primary\"\r\n            htmlType=\"submit\"\r\n            style={{\r\n              marginRight: '10px'\r\n            }}\r\n          >\r\n            {action ? action : 'Edit'}\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default PortfolioEditForm\r\n","import { Fragment } from 'react'\r\nimport { Subtitle } from '@rocketmaven/componentsStyled/Typography'\r\nimport PortfolioEditForm from '@rocketmaven/pages/Portfolio/PortfolioEditForm'\r\n\r\nconst PortfolioCreate = () => {\r\n  return (\r\n    <Fragment>\r\n      <Subtitle>Portfolio Creation</Subtitle>\r\n      <PortfolioEditForm action=\"Create\" />\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default PortfolioCreate\r\n","import styled from 'styled-components'\n\nexport const Col = styled.div`\n  width: calc(100% / 2 - 1rem);\n  margin-bottom: 0;\n`\n\nexport const Row = styled.div`\n  display: flex;\n  justify-content: space-between;\n  flex-wrap: wrap;\n`","import { EyeOutlined, PlusOutlined, SettingOutlined } from '@ant-design/icons'\r\nimport { Card } from '@rocketmaven/componentsStyled/Card'\r\nimport { Row } from '@rocketmaven/componentsStyled/Grid'\r\nimport { storeContext } from '@rocketmaven/data/app/store'\r\nimport { urls } from '@rocketmaven/data/urls'\r\n// import { PortfolioWrap } from '@rocketmaven/pages/Portfolio/PortfolioList/PaginatedPortfolioDisplay/styled'\r\nimport { useAccessToken } from '@rocketmaven/hooks/http'\r\nimport { PortfolioInfo } from '@rocketmaven/pages/Portfolio/types'\r\nimport {\r\n  Button,\r\n  Descriptions,\r\n  Divider,\r\n  message,\r\n  PageHeader,\r\n  Statistic,\r\n  Table,\r\n  Tag,\r\n  Tooltip\r\n} from 'antd'\r\nimport { useContext } from 'react'\r\nimport { Link, useHistory } from 'react-router-dom'\r\n\r\ntype Props = {\r\n  portfolio: PortfolioInfo\r\n  refreshPortfolios: () => void\r\n  singleView?: boolean\r\n}\r\n\r\nconst PortfolioCard = ({ portfolio, refreshPortfolios, singleView = false }: Props) => {\r\n  const { state } = useContext(storeContext)\r\n  const { userId } = state\r\n\r\n  const routerObject = useHistory()\r\n  const { accessToken, revalidateAccessToken } = useAccessToken()\r\n\r\n  /* (portfolio_id: string, asset_id: string) */\r\n  async function useDeleteAssetPortfolioHolding(e: any) {\r\n    // Double check that the password reset works in the browser we're going to demo it in\r\n    // Briefly read that URLSearchParams may not have extensive support\r\n    const asset_id = e.target.getAttribute('title')\r\n    const portfolio_id = e.target.getAttribute('aria-valuenow')\r\n    routerObject.push('/')\r\n\r\n    const response = await fetch(`/api/v1/portfolios/${portfolio_id}/holdings`, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        Accept: 'application/json',\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${accessToken}`\r\n      },\r\n      body: JSON.stringify({ asset_id: asset_id })\r\n    })\r\n    const data = await response.json()\r\n    if (!response.ok) {\r\n      throw Error(`${data.msg}`)\r\n    }\r\n    routerObject.push('/')\r\n  }\r\n\r\n  const getColorOfValue = (value: number) => {\r\n    return value < 0 ? 'red' : 'green'\r\n  }\r\n\r\n  const numberChangeRenderer = (testVal: string, record: any) => {\r\n    const text = parseFloat(testVal).toFixed(2)\r\n    return {\r\n      props: {\r\n        style: { color: getColorOfValue(parseFloat(testVal)) }\r\n      },\r\n      children: <span>{text}</span>\r\n    }\r\n  }\r\n\r\n  const columns: any = [\r\n    {\r\n      title: 'Ticker Symbol',\r\n      key: 'asset_id',\r\n      dataIndex: 'asset_id',\r\n      render: (value: string) => (\r\n        <span>\r\n          <Tooltip placement=\"left\" title={`View ${value} details and graph`} arrowPointAtCenter>\r\n            <Link\r\n              to={`/asset/${value}`}\r\n              style={{\r\n                marginRight: '8px',\r\n                marginBottom: '12px'\r\n              }}\r\n            >\r\n              {value}\r\n            </Link>\r\n          </Tooltip>\r\n\r\n          <Tooltip placement=\"left\" title={`Filter holding history by ${value}`} arrowPointAtCenter>\r\n            <Button\r\n              type=\"primary\"\r\n              style={{\r\n                marginRight: '8px',\r\n                marginBottom: '12px',\r\n                float: 'right'\r\n              }}\r\n            >\r\n              <Link to={`/portfolio/${portfolio.id}/holdings/${value}`}>History</Link>\r\n            </Button>\r\n          </Tooltip>\r\n        </span>\r\n      )\r\n    },\r\n    {\r\n      title: 'Available Units',\r\n      dataIndex: 'available_units',\r\n      render: (value: number) => value.toFixed(2)\r\n    },\r\n    {\r\n      title: 'Purchase Price',\r\n      dataIndex: 'average_price',\r\n      render: (value: number) => value.toFixed(2)\r\n    },\r\n    {\r\n      title: (\r\n        <Tooltip\r\n          placement=\"topLeft\"\r\n          title={`Current price of assets based on their market value`}\r\n          arrowPointAtCenter\r\n        >\r\n          <span style={{ textDecoration: 'underline dotted' }}>Current Price</span>\r\n        </Tooltip>\r\n      ),\r\n      dataIndex: 'market_price',\r\n      render: (value: number) => value.toFixed(2)\r\n    },\r\n\r\n    ...(singleView\r\n      ? [\r\n          {\r\n            title: 'Purchase Value',\r\n            dataIndex: 'purchase_value',\r\n            render: (value: number) => value.toFixed(2)\r\n          }\r\n        ]\r\n      : []),\r\n\r\n    {\r\n      title: 'Current Value',\r\n      dataIndex: 'current_value',\r\n      render: (value: number) => value.toFixed(2)\r\n    },\r\n\r\n    {\r\n      title: 'Unrealised Profit/Loss',\r\n      dataIndex: 'unrealised_units',\r\n      render: numberChangeRenderer\r\n    },\r\n\r\n    ...(singleView\r\n      ? [\r\n          {\r\n            title: 'Realised Total',\r\n            dataIndex: 'realised_total',\r\n            render: (value: number) => value.toFixed(2)\r\n          },\r\n          { title: 'Last Updated', dataIndex: 'last_updated' }\r\n        ]\r\n      : []),\r\n\r\n    {\r\n      title: 'Latest Note',\r\n      dataIndex: 'latest_note'\r\n    } /* https://ant.design/components/table/ */\r\n  ]\r\n\r\n  if (!portfolio.competition_portfolio && !singleView) {\r\n    columns.push({\r\n      title: 'Action',\r\n      dataIndex: 'asset_id',\r\n      key: 'x',\r\n      render: (value: string) => (\r\n        <a title={value} aria-valuenow={portfolio.id} onClick={useDeleteAssetPortfolioHolding}>\r\n          Delete\r\n        </a>\r\n      )\r\n    })\r\n  }\r\n\r\n  const value = {\r\n    'Current Market': [false, portfolio.current_value_sum],\r\n    'Purchase Cost': [false, portfolio.purchase_value_sum],\r\n    'Unrealised (Market - Purchase)': [\r\n      true,\r\n      (portfolio.current_value_sum - portfolio.purchase_value_sum).toFixed(2)\r\n    ],\r\n    'Realised (Sold Value)': [true, portfolio.realised_sum]\r\n  }\r\n\r\n  let isPortfolioEmpty = true\r\n\r\n  for (const asset_holding of portfolio.portfolio_asset_holding) {\r\n    if (asset_holding.available_units > 0) {\r\n      isPortfolioEmpty = false\r\n      break\r\n    }\r\n  }\r\n\r\n  const onDeletePortfolio = async () => {\r\n    const url = `/api/v1/portfolios/${portfolio.id}`\r\n\r\n    const response = await fetch(url, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        Accept: 'application/json',\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${accessToken}`\r\n      }\r\n    })\r\n\r\n    const data = await response.json()\r\n\r\n    if (response.ok) {\r\n      message.success(data.msg)\r\n      refreshPortfolios()\r\n    } else {\r\n      message.error(data.msg)\r\n    }\r\n  }\r\n\r\n  const cardTitle = (\r\n    <div title={portfolio.creation_date}>\r\n      <PageHeader\r\n        style={{ padding: '0px' }}\r\n        title={\r\n          !singleView ? (\r\n            <Link\r\n              style={{ color: 'inherit', textDecoration: 'underline wavy' }}\r\n              to={urls.portfolio + '/' + portfolio.id}\r\n            >\r\n              {portfolio.name}\r\n            </Link>\r\n          ) : (\r\n            portfolio.name\r\n          )\r\n        }\r\n        subTitle={portfolio.description}\r\n        tags={[\r\n          portfolio.competition_portfolio ? (\r\n            <Tag color=\"red\">Competition</Tag>\r\n          ) : (\r\n            <Tag color=\"blue\">Regular</Tag>\r\n          ),\r\n          portfolio.public_portfolio ? (\r\n            <Tag color=\"red\">Public</Tag>\r\n          ) : (\r\n            <Tag color=\"blue\">Private</Tag>\r\n          ),\r\n          <Tag color=\"blue\">{portfolio.currency}</Tag>\r\n        ]}\r\n        extra={[\r\n          isPortfolioEmpty ? (\r\n            <Button onClick={onDeletePortfolio} style={{ float: 'right' }}>\r\n              Delete\r\n            </Button>\r\n          ) : null\r\n        ]}\r\n      />\r\n    </div>\r\n  )\r\n  return (\r\n    <Card\r\n      bodyStyle={{ paddingTop: '0px' }}\r\n      style={singleView ? { width: '90%', overflowX: 'auto', padding: '0px' } : { padding: '0px' }}\r\n      title={cardTitle}\r\n      actions={\r\n        !singleView\r\n          ? [\r\n              <Tooltip placement=\"topLeft\" title=\"Add New Event\" arrowPointAtCenter>\r\n                <Link to={urls.portfolio + `/${portfolio.id}/addremove`}>\r\n                  <PlusOutlined key=\"edit\" />\r\n                </Link>\r\n              </Tooltip>,\r\n\r\n              <Tooltip placement=\"topLeft\" title=\"Edit Portfolio Settings\" arrowPointAtCenter>\r\n                <Link to={urls.portfolio + `/${portfolio.id}/edit`}>\r\n                  <SettingOutlined key=\"setting\" />\r\n                </Link>\r\n              </Tooltip>,\r\n\r\n              <Tooltip placement=\"topLeft\" title=\"Portfolio Event History\" arrowPointAtCenter>\r\n                <Link to={urls.portfolio + `/${portfolio.id}/history`}>\r\n                  <EyeOutlined key=\"ellipsis\" />\r\n                </Link>\r\n              </Tooltip>\r\n            ]\r\n          : []\r\n      }\r\n    >\r\n      <Descriptions column={2} size=\"small\" bordered style={{ marginBottom: '1rem' }}>\r\n        {singleView ? (\r\n          <Descriptions.Item label=\"Owner\">{portfolio.investor.username}</Descriptions.Item>\r\n        ) : null}\r\n        {portfolio.competition_portfolio ? (\r\n          <Descriptions.Item label=\"Buying Power\">\r\n            {portfolio.buying_power.toFixed(2)}\r\n          </Descriptions.Item>\r\n        ) : null}\r\n        <Descriptions.Item label=\"Tax Residency\">{portfolio.tax_residency}</Descriptions.Item>\r\n      </Descriptions>\r\n\r\n      <Row>\r\n        {Object.entries(value).map(function (e) {\r\n          return (\r\n            <Statistic\r\n              title={e[0]}\r\n              value={(e[1] as [boolean, number])[1]}\r\n              precision={2}\r\n              valueStyle={{\r\n                color: (e[1] as [boolean, number])[0]\r\n                  ? getColorOfValue((e[1] as [boolean, number])[1])\r\n                  : 'initial'\r\n              }}\r\n            />\r\n          )\r\n        })}\r\n      </Row>\r\n\r\n      {portfolio.recommended ? <Divider>Recommended</Divider> : null}\r\n      {portfolio.recommended\r\n        ? portfolio.recommended.map(function (e) {\r\n            return (\r\n              <Link to={urls.asset + '/' + e[0]}>\r\n                <Tag color=\"red\">{e[1]}</Tag>\r\n              </Link>\r\n            )\r\n          })\r\n        : null}\r\n\r\n      <Divider>Holdings</Divider>\r\n\r\n      <Table\r\n        columns={columns}\r\n        dataSource={portfolio.portfolio_asset_holding.filter(\r\n          (portfolio_asset_holding) => portfolio_asset_holding.available_units > 0\r\n        )}\r\n        rowKey=\"id\"\r\n      />\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default PortfolioCard\r\n","import PortfolioCard from '@rocketmaven/components/PortfolioCard'\nimport { Subtitle } from '@rocketmaven/componentsStyled/Typography'\nimport { useFetchGetPublicPortfolio } from '@rocketmaven/hooks/http'\nimport { PortfolioInfo } from '@rocketmaven/pages/Portfolio/types'\nimport { isEmpty } from 'ramda'\nimport { Fragment, useState } from 'react'\nimport { useParams } from 'react-router-dom'\n\ntype Params = {\n  id: string\n}\n\ntype PortfolioFetchInfo = {\n  data: {\n    portfolio: PortfolioInfo\n  }\n  isLoading: boolean\n}\n\nconst PortfolioDetail = () => {\n  const { id } = useParams<Params>()\n  const [refreshFlag, setRefreshFlag] = useState(0)\n  const refreshPortfolios = () => setRefreshFlag(refreshFlag + 1)\n\n  const { data, isLoading }: PortfolioFetchInfo = useFetchGetPublicPortfolio(`${id}`)\n  const content = isEmpty(data) ? (\n    \"Portfolio is private or doesn't exist\"\n  ) : (\n    <PortfolioCard\n      portfolio={data.portfolio}\n      refreshPortfolios={refreshPortfolios}\n      singleView={true}\n    />\n  )\n\n  return isLoading ? null : (\n    <Fragment>\n      <Subtitle>Portfolio Detail</Subtitle>\n      {content}\n    </Fragment>\n  )\n}\n\nexport default PortfolioDetail\n","import { Fragment } from 'react'\r\nimport { Subtitle } from '@rocketmaven/componentsStyled/Typography'\r\nimport { useParams } from 'react-router-dom'\r\nimport { useGetPortfolioInfo } from '@rocketmaven/hooks/http'\r\nimport PortfolioEditForm from '@rocketmaven/pages/Portfolio/PortfolioEditForm'\r\nimport { PortfolioInfoEdit } from '@rocketmaven/pages/Portfolio/types'\r\n\r\ntype Params = {\r\n  id?: string\r\n}\r\n\r\ntype PortfolioFetchInfo = {\r\n  data: {\r\n    portfolio: PortfolioInfoEdit\r\n  }\r\n  isLoading: boolean\r\n}\r\n\r\nconst PortfolioEdit = () => {\r\n  const { id } = useParams<Params>()\r\n  const { data, isLoading }: PortfolioFetchInfo = useGetPortfolioInfo(`${id}`)\r\n\r\n  return isLoading ? null : (\r\n    <Fragment>\r\n      <Subtitle>Portfolio Edit</Subtitle>\r\n      <PortfolioEditForm portfolioInfo={data} portfolioId={id} />\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default PortfolioEdit\r\n","import { Subtitle } from '@rocketmaven/componentsStyled/Typography'\r\nimport { useGetPortfolioHistory } from '@rocketmaven/hooks/http'\r\nimport { PortfolioEvent } from '@rocketmaven/pages/Portfolio/types'\r\nimport { Button, Table, Tooltip } from 'antd'\r\nimport { isEmpty } from 'ramda'\r\nimport { Fragment } from 'react'\r\nimport { Link, useParams } from 'react-router-dom'\r\n\r\ntype Params = {\r\n  id: string\r\n}\r\n\r\nconst PortfolioHistory = () => {\r\n  const { id } = useParams<Params>()\r\n\r\n  const { isLoading, data } = useGetPortfolioHistory(id)\r\n  let historyTable = null\r\n  if (data && !isEmpty(data)) {\r\n    const histories: [PortfolioEvent] = data.results\r\n\r\n    const columns = [\r\n      {\r\n        title: 'Type',\r\n        dataIndex: 'add_action',\r\n        render: (value: string) => (value ? 'Add' : 'Remove')\r\n      },\r\n      {\r\n        title: 'Event ID',\r\n        dataIndex: 'id'\r\n      },\r\n      {\r\n        title: 'Ticker',\r\n        dataIndex: 'asset_id',\r\n        render: (value: string) => (\r\n          <span>\r\n            <Tooltip\r\n              placement=\"topLeft\"\r\n              title={`View ${value} details and graph`}\r\n              arrowPointAtCenter\r\n            >\r\n              <Link\r\n                to={`/asset/${value}`}\r\n                style={{\r\n                  marginRight: '8px',\r\n                  marginBottom: '12px'\r\n                }}\r\n              >\r\n                {value}\r\n              </Link>\r\n            </Tooltip>\r\n\r\n            <Tooltip\r\n              placement=\"topLeft\"\r\n              title={`Filter holding history by ${value}`}\r\n              arrowPointAtCenter\r\n            >\r\n              <Button\r\n                type=\"primary\"\r\n                style={{\r\n                  marginRight: '8px',\r\n                  marginBottom: '12px',\r\n                  float: 'right'\r\n                }}\r\n              >\r\n                <Link to={`/portfolio/${id}/holdings/${value}`}>Filter</Link>\r\n              </Button>\r\n            </Tooltip>\r\n          </span>\r\n        )\r\n      },\r\n      {\r\n        title: 'Date',\r\n        dataIndex: 'event_date'\r\n      },\r\n      {\r\n        title: 'Fees',\r\n        dataIndex: 'fees'\r\n      },\r\n      {\r\n        title: 'Units',\r\n        dataIndex: 'units'\r\n      },\r\n      {\r\n        title: 'Price Per Unit',\r\n        dataIndex: 'price_per_share',\r\n        render: (value: number) => value.toFixed(2)\r\n      },\r\n      {\r\n        title: 'Note',\r\n        dataIndex: 'note'\r\n      }\r\n    ]\r\n    historyTable = <Table columns={columns} dataSource={histories} rowKey=\"id\" />\r\n  }\r\n\r\n  return (\r\n    isLoading\r\n      ? null\r\n      :\r\n      <Fragment>\r\n        <Subtitle>Portfolio History</Subtitle>\r\n        {historyTable}\r\n      </Fragment>\r\n  )\r\n}\r\n\r\nexport default PortfolioHistory\r\n","import PortfolioCard from '@rocketmaven/components/PortfolioCard'\r\nimport { PortfolioInfo, PortfolioPagination } from '@rocketmaven/pages/Portfolio/types'\r\nimport { isEmpty } from 'ramda'\r\nimport { Fragment } from 'react'\r\n\r\ntype Props = {\r\n  portfolioPagination: PortfolioPagination\r\n  refreshPortfolios: () => void\r\n}\r\n\r\nconst PaginatedPortfolioDisplay = ({ portfolioPagination, refreshPortfolios }: Props) => {\r\n  if (!portfolioPagination || isEmpty(portfolioPagination)) {\r\n    return null\r\n  }\r\n\r\n  const portfolios: [PortfolioInfo] = portfolioPagination.results\r\n  return (\r\n    <Fragment>\r\n      {portfolios.map((portfolio, index) => (\r\n        <PortfolioCard refreshPortfolios={refreshPortfolios} portfolio={portfolio} />\r\n      ))}\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default PaginatedPortfolioDisplay\r\n","import { Subtitle } from '@rocketmaven/componentsStyled/Typography'\r\nimport { urls } from '@rocketmaven/data/urls'\r\nimport { useFetchGetWithUserId } from '@rocketmaven/hooks/http'\r\nimport PaginatedPortfolioDisplay from '@rocketmaven/pages/Portfolio/PortfolioList/PaginatedPortfolioDisplay'\r\nimport { PortfolioPagination } from '@rocketmaven/pages/Portfolio/types'\r\nimport { Button } from 'antd'\r\nimport { Fragment, useState } from 'react'\r\nimport { FaPlus } from 'react-icons/fa'\r\nimport { Link } from 'react-router-dom'\r\n\r\ntype PortfolioListFetchResults = {\r\n  data: PortfolioPagination\r\n  isLoading: boolean\r\n}\r\n\r\nconst PortfolioList = () => {\r\n  const [refreshFlag, setRefreshFlag] = useState(0)\r\n  const refreshPortfolios = () => setRefreshFlag(refreshFlag + 1)\r\n  const { data, isLoading }: PortfolioListFetchResults = useFetchGetWithUserId(\r\n    '/portfolios',\r\n    refreshFlag\r\n  )\r\n\r\n  return isLoading\r\n    ? null\r\n    :\r\n    <Fragment>\r\n      <Subtitle>\r\n        Portfolio List\r\n        <Button type=\"primary\" style={{ marginLeft: '20px' }}>\r\n          <Link to={urls.portfolio + '/create'}>\r\n            <FaPlus /> New Portfolio\r\n          </Link>\r\n        </Button>\r\n      </Subtitle>\r\n      <PaginatedPortfolioDisplay portfolioPagination={data} refreshPortfolios={refreshPortfolios} />\r\n    </Fragment>\r\n}\r\n\r\nexport default PortfolioList\r\n","import { Title } from '@rocketmaven/componentsStyled/Typography'\r\nimport { urls } from '@rocketmaven/data/urls'\r\nimport HoldingHistory from '@rocketmaven/pages/Portfolio/HoldingHistory'\r\nimport PortfolioAssetCreate from '@rocketmaven/pages/Portfolio/PortfolioAssetCreate'\r\nimport PortfolioCreate from '@rocketmaven/pages/Portfolio/PortfolioCreate'\r\nimport PortfolioDetail from '@rocketmaven/pages/Portfolio/PortfolioDetail'\r\nimport PortfolioEdit from '@rocketmaven/pages/Portfolio/PortfolioEdit'\r\nimport PortfolioHistory from '@rocketmaven/pages/Portfolio/PortfolioHistory'\r\nimport PortfolioList from '@rocketmaven/pages/Portfolio/PortfolioList'\r\nimport Page from '@rocketmaven/pages/_Page'\r\nimport { Route, Switch } from 'react-router-dom'\r\n\r\nconst Portfolio = () => {\r\n  return (\r\n    <Page>\r\n      <Title>Portfolio</Title>\r\n      <Switch>\r\n        <Route exact path={urls.portfolio} component={PortfolioList} />\r\n        <Route path={urls.portfolio + '/create'} component={PortfolioCreate} />\r\n        <Route path={urls.portfolio + '/:id/edit'} component={PortfolioEdit} />\r\n        <Route exact path={urls.portfolio + '/:id/history'} component={PortfolioHistory} />\r\n        <Route path={urls.portfolio + '/:id/addremove'} component={PortfolioAssetCreate} />\r\n        <Route path={urls.portfolio + '/:id/holdings/:hid'} component={HoldingHistory} />\r\n        <Route exact path={urls.portfolio + '/:id'} component={PortfolioDetail} />\r\n      </Switch>\r\n    </Page>\r\n  )\r\n}\r\n\r\nexport default Portfolio\r\n","import MainChart from '@rocketmaven/components/MainChart'\r\nimport { Button } from '@rocketmaven/componentsStyled/Button'\r\nimport { Card } from '@rocketmaven/componentsStyled/Card'\r\nimport { useFetchGetWithUserId } from '@rocketmaven/hooks/http'\r\nimport { useStore } from '@rocketmaven/hooks/store'\r\nimport { PortfolioPagination } from '@rocketmaven/pages/Portfolio/types'\r\nimport { DatePicker, Form, Radio, Select } from 'antd'\r\nimport moment from 'moment'\r\nimport { isEmpty } from 'ramda'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useLocation } from 'react-router-dom'\r\nconst { RangePicker } = DatePicker\r\nconst { Option } = Select\r\n\r\ntype PortfolioListFetchResults = {\r\n  data: PortfolioPagination\r\n  isLoading: boolean\r\n}\r\n\r\n// https://reactrouter.com/web/example/query-parameters\r\nfunction useQuery() {\r\n  return new URLSearchParams(useLocation().search)\r\n}\r\n\r\nconst ReportGenerate = () => {\r\n  const query = useQuery()\r\n\r\n  const { accessToken, refreshToken, dispatch } = useStore()\r\n\r\n  const [children, setChildren] = React.useState([])\r\n  const [defaultChildren, setDefaultChildren] = React.useState(false)\r\n  const [hideDate, setHideDate] = React.useState(false)\r\n\r\n  const [reportMode, setReportMode] = React.useState('')\r\n\r\n  const [chartOptions, setChartOptions] = React.useState({})\r\n\r\n  const onFinish = async (values: any) => {\r\n    setReportMode(values.report_type)\r\n    values.portfolios = defaultChildren\r\n    // values.portfolios =\r\n    const response = await fetch(`/api/v1/report`, {\r\n      method: 'POST',\r\n      headers: {\r\n        Accept: 'application/json',\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${accessToken}`\r\n      },\r\n      body: JSON.stringify(values)\r\n    })\r\n    const data = await response.json()\r\n\r\n    if (values.report_type == 'Diversification') {\r\n      // https://www.highcharts.com/demo/pie-drilldown\r\n      setChartOptions({\r\n        chart: {\r\n          type: 'pie'\r\n        },\r\n        title: {\r\n          text: 'Diversification'\r\n        },\r\n        subtitle: {\r\n          text: 'Portfolios by Industry Diversity'\r\n        },\r\n\r\n        accessibility: {\r\n          announceNewData: {\r\n            enabled: true\r\n          },\r\n          point: {\r\n            valueSuffix: '%'\r\n          }\r\n        },\r\n\r\n        plotOptions: {\r\n          series: {\r\n            dataLabels: {\r\n              enabled: true,\r\n              format: '{point.name}: {point.y:.1f}%',\r\n              distance: -30\r\n            },\r\n            showInLegend: true\r\n          }\r\n        },\r\n\r\n        tooltip: {\r\n          headerFormat: '<span style=\"font-size:11px\">{series.name}</span><br>',\r\n          pointFormat:\r\n            '<span style=\"color:{point.color}\">{point.name}</span>: <b>{point.y:.2f}%</b> of total<br/>'\r\n        },\r\n\r\n        series: data['series'],\r\n        drilldown: data['drilldown']\r\n      })\r\n    }\r\n\r\n    if (values.report_type == 'Realised') {\r\n      console.log(data['series'])\r\n      setChartOptions({\r\n        chart: {\r\n          type: 'line'\r\n        },\r\n        xAxis: {\r\n          type: 'datetime'\r\n        },\r\n        title: {\r\n          text: 'Realised'\r\n        },\r\n        subtitle: {\r\n          text: 'Realised Portfolio Values'\r\n        },\r\n        series: data['series']\r\n      })\r\n    }\r\n\r\n    if (values.report_type == 'Tax') {\r\n      console.log(data['series'])\r\n      setChartOptions({\r\n        chart: {\r\n          type: 'line'\r\n        },\r\n        xAxis: {\r\n          type: 'datetime'\r\n        },\r\n        title: {\r\n          text: 'Tax'\r\n        },\r\n        subtitle: {\r\n          text: 'Tax Values'\r\n        },\r\n        series: data['series']\r\n      })\r\n    }\r\n  }\r\n\r\n  let initDate: any = []\r\n\r\n  let optionsValue = 'Realised'\r\n\r\n  if (query.get('prefab') == 'all-time') {\r\n  }\r\n  if (query.get('prefab') == 'year') {\r\n    initDate = [moment().subtract(1, 'year'), moment()]\r\n  }\r\n  if (query.get('prefab') == 'monthly') {\r\n    initDate = [moment().subtract(1, 'month'), moment()]\r\n  }\r\n  if (query.get('prefab') == 'trades') {\r\n    optionsValue = 'Trade'\r\n  }\r\n  if (query.get('prefab') == 'diversification') {\r\n    optionsValue = 'Diversification'\r\n  }\r\n  useEffect(() => {\r\n    if (query.get('prefab') == 'diversification') {\r\n      setHideDate(true)\r\n    }\r\n  }, [])\r\n  if (query.get('prefab') == 'tax') {\r\n    optionsValue = 'Tax'\r\n  }\r\n\r\n  const options = [\r\n    { label: 'Realised', value: 'Realised' },\r\n    { label: 'Tax', value: 'Tax' },\r\n    // { label: 'Trade', value: 'Trade' },\r\n    { label: 'Diversification', value: 'Diversification' }\r\n  ]\r\n\r\n  function handleChange(value: any) {\r\n    console.log(`Selected: ${value}`)\r\n    setDefaultChildren(value)\r\n  }\r\n\r\n  const [size, setSize] = React.useState('default')\r\n\r\n  const handleSizeChange = (e: any) => {\r\n    setSize(e.target.value)\r\n  }\r\n\r\n  const [refreshFlag, setRefreshFlag] = useState(0)\r\n  const refreshPortfolios = () => setRefreshFlag(refreshFlag + 1)\r\n\r\n  const { data, isLoading }: PortfolioListFetchResults = useFetchGetWithUserId(\r\n    '/all_portfolios',\r\n    refreshFlag\r\n  )\r\n\r\n  const actAccordingly = (e: any) => {\r\n    if (e.target.value == 'Diversification') {\r\n      setHideDate(true)\r\n    } else {\r\n      setHideDate(false)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (data && !isEmpty(data)) {\r\n      const tmpChildren: any = []\r\n      const tmpChildren2: any = data.results.map(function (e) {\r\n        tmpChildren.push(e.id)\r\n        return (\r\n          <Option key={e.id} value={e.id}>\r\n            #{e.id} - {e.name}\r\n          </Option>\r\n        )\r\n      })\r\n      setDefaultChildren(tmpChildren)\r\n      setChildren(tmpChildren2)\r\n    }\r\n  }, [data])\r\n\r\n  return (\r\n    <div>\r\n      <Card title=\"Generate Report\">\r\n        <Form name=\"normal_report\" className=\"report-form\" onFinish={onFinish}>\r\n          <Form.Item label=\"Report Type\" name=\"report_type\" initialValue={optionsValue}>\r\n            <Radio.Group\r\n              options={options}\r\n              defaultValue={optionsValue}\r\n              value={optionsValue}\r\n              onChange={actAccordingly}\r\n              optionType=\"button\"\r\n              buttonStyle=\"solid\"\r\n            />\r\n          </Form.Item>\r\n\r\n          {defaultChildren ? (\r\n            <Form.Item\r\n              label=\"Portfolios\"\r\n              name=\"portfolios\"\r\n              initialValue={defaultChildren}\r\n              rules={[{ required: true }]}\r\n            >\r\n              <Select\r\n                mode=\"multiple\"\r\n                placeholder=\"Please select\"\r\n                onChange={handleChange}\r\n                style={{ width: '100%' }}\r\n              >\r\n                {children}\r\n              </Select>\r\n            </Form.Item>\r\n          ) : null}\r\n\r\n          {!hideDate ? (\r\n            <Form.Item label=\"Date Range\" name=\"date_range\" initialValue={initDate}>\r\n              <RangePicker />\r\n            </Form.Item>\r\n          ) : null}\r\n\r\n          <Form.Item>\r\n            <Button\r\n              type=\"primary\"\r\n              htmlType=\"submit\"\r\n              style={{\r\n                marginRight: '10px'\r\n              }}\r\n            >\r\n              Generate\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n      </Card>\r\n\r\n      {chartOptions && reportMode == 'Diversification' ? (\r\n        <Card>\r\n          <div style={{ height: '70vh', width: '100%' }}>\r\n            <MainChart customType=\"pie\" options={chartOptions} />\r\n          </div>\r\n        </Card>\r\n      ) : null}\r\n      {chartOptions && (reportMode == 'Realised' || reportMode == 'Tax') ? (\r\n        <Card>\r\n          <div style={{ height: '70vh', width: '100%' }}>\r\n            <MainChart options={chartOptions} />\r\n          </div>\r\n        </Card>\r\n      ) : null}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ReportGenerate\r\n","import { Button } from '@rocketmaven/componentsStyled/Button'\r\nimport { Card } from '@rocketmaven/componentsStyled/Card'\r\nimport React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst ReportLanding = () => {\r\n  return (\r\n    <>\r\n      <Card title=\"Quick Reports\">\r\n        <Button type=\"primary\">\r\n          <Link to=\"/report/builder?prefab=all-time\">All-Time Portfolio Comparison</Link>\r\n        </Button>\r\n        <br />\r\n        <Button type=\"primary\">\r\n          <Link to=\"/report/builder?prefab=year\">Year Portfolio Comparison</Link>\r\n        </Button>\r\n        <br />\r\n        <Button type=\"primary\">\r\n          <Link to=\"/report/builder?prefab=monthly\">Month Portfolio Comparison</Link>\r\n        </Button>\r\n        <br />\r\n        <Button type=\"primary\">\r\n          <Link to=\"/report/builder?prefab=diversification\">Diversification</Link>\r\n        </Button>\r\n        <br />\r\n        <Button type=\"primary\">\r\n          <Link to=\"/report/builder?prefab=tax\">Tax Report</Link>\r\n        </Button>\r\n      </Card>\r\n      <Card title=\"Custom Reports\">\r\n        <Button type=\"primary\">\r\n          <Link to=\"/report/builder\">Report Builder</Link>\r\n        </Button>\r\n      </Card>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ReportLanding\r\n","import { Title } from '@rocketmaven/componentsStyled/Typography'\r\nimport { urls } from '@rocketmaven/data/urls'\r\nimport ReportGenerate from '@rocketmaven/pages/Report/ReportGenerate'\r\nimport ReportLanding from '@rocketmaven/pages/Report/ReportLanding'\r\nimport Page from '@rocketmaven/pages/_Page'\r\nimport { Route, Switch } from 'react-router-dom'\r\n\r\nconst Report = () => {\r\n  return (\r\n    <Page>\r\n      <Title>Report</Title>\r\n      <Switch>\r\n        <Route exact path={urls.report} component={ReportLanding} />\r\n        <Route path={urls.report + '/builder'} component={ReportGenerate} />\r\n      </Switch>\r\n    </Page>\r\n  )\r\n}\r\n\r\nexport default Report\r\n","import DateOfBirthInput from '@rocketmaven/components/DateOfBirthInput'\nimport PasswordInput from '@rocketmaven/components/PasswordInput'\nimport { Card } from '@rocketmaven/componentsStyled/Card'\nimport { useAuth } from '@rocketmaven/hooks/http'\nimport { useSortedCountryList } from '@rocketmaven/hooks/store'\nimport Page from '@rocketmaven/pages/_Page'\nimport { Button, Form, Input, Select } from 'antd'\n\nconst layout = {\n  labelCol: {\n    span: 6\n  },\n  wrapperCol: {\n    span: 18\n  }\n}\nconst tailLayout = {\n  wrapperCol: {\n    offset: 6,\n    span: 18\n  }\n}\n\nconst SignUp = () => {\n  const submit = useAuth('REGISTER')\n  const countryList = useSortedCountryList()\n\n  const onFinish = async (values: any) => {\n    const requestBody = {\n      country_of_residency: values.countryOfResidency,\n      date_of_birth: values.date_of_birth,\n      email: values.email,\n      first_name: values.firstName,\n      gender: values.gender,\n      last_name: values.lastName,\n      password: values.password,\n      username: values.username,\n      visibility: true\n    }\n    submit(requestBody)\n  }\n\n  return (\n    <Page>\n      <Card>\n        <Form\n          {...layout}\n          name=\"basic\"\n          initialValues={{\n            remember: true\n          }}\n          onFinish={onFinish}\n        >\n          <Form.Item\n            label=\"Username\"\n            name=\"username\"\n            rules={[\n              {\n                required: true,\n                message: 'Please input your username!'\n              }\n            ]}\n          >\n            <Input />\n          </Form.Item>\n\n          <Form.Item\n            label=\"First Name\"\n            name=\"firstName\"\n            rules={[\n              {\n                required: false,\n                message: 'Please input your first name!'\n              }\n            ]}\n          >\n            <Input />\n          </Form.Item>\n\n          <Form.Item\n            label=\"Last Name\"\n            name=\"lastName\"\n            rules={[\n              {\n                required: false,\n                message: 'Please input your last name!'\n              }\n            ]}\n          >\n            <Input />\n          </Form.Item>\n\n          <Form.Item\n            name=\"email\"\n            label=\"Email\"\n            extra=\"Choose wisely, your email cannot be changed!\"\n            rules={[\n              {\n                type: 'email',\n                message: 'The input is not valid email!'\n              },\n              {\n                required: true,\n                message: 'Please input your email!'\n              }\n            ]}\n          >\n            <Input />\n          </Form.Item>\n\n          <Form.Item\n            label=\"Country of Residency\"\n            name=\"countryOfResidency\"\n            initialValue=\"AU\"\n            rules={[\n              {\n                required: true,\n                message: 'Please select a country'\n              }\n            ]}\n          >\n            <Select showSearch>\n              {countryList.map(([code, name], value) => {\n                return <Select.Option value={code}>{name}</Select.Option>\n              })}\n            </Select>\n          </Form.Item>\n          <Form.Item\n            label=\"Gender\"\n            name=\"gender\"\n            rules={[\n              {\n                required: false,\n                message: 'Please select a gender'\n              }\n            ]}\n          >\n            <Select>\n              <Select.Option value={'Female'}>Female</Select.Option>\n              <Select.Option value={'Male'}>Male</Select.Option>\n              <Select.Option value={'Other'}>Other</Select.Option>\n            </Select>\n          </Form.Item>\n\n          <DateOfBirthInput />\n\n          <PasswordInput />\n\n          <Form.Item\n            name=\"confirm\"\n            label=\"Confirm Password\"\n            dependencies={['password']}\n            hasFeedback\n            rules={[\n              {\n                required: true,\n                message: 'Please confirm your password!'\n              },\n              ({ getFieldValue }) => ({\n                validator(_, value) {\n                  if (!value || getFieldValue('password') === value) {\n                    return Promise.resolve()\n                  }\n\n                  return Promise.reject(\n                    new Error('The two passwords that you entered do not match!')\n                  )\n                }\n              })\n            ]}\n          >\n            <Input.Password />\n          </Form.Item>\n\n          <Form.Item {...tailLayout}>\n            <Button type=\"primary\" htmlType=\"submit\">\n              Register\n            </Button>\n          </Form.Item>\n        </Form>\n      </Card>\n    </Page>\n  )\n}\n\nexport default SignUp\n","import { Link } from 'react-router-dom'\n\nexport const assetColumns = [\n  {\n    title: 'Ticker',\n    dataIndex: 'ticker_symbol',\n    render: (value: string) => (\n      <Link\n        to={`/asset/${value}`}\n        style={{\n          marginRight: '8px',\n          marginBottom: '12px'\n        }}\n      >\n        {value}\n      </Link>\n    )\n  },\n  {\n    title: 'Name',\n    dataIndex: 'asset_additional',\n    render: (value: string) => {\n      console.log(JSON.parse(value))\n      const asset_additional = JSON.parse(value)\n      const focus = asset_additional.longName\n      if (focus) {\n        return <div>{focus}</div>\n      }\n      return null\n    }\n  },\n  {\n    title: 'Price',\n    dataIndex: 'current_price'\n  },\n  {\n    title: 'Change',\n    dataIndex: 'asset_additional',\n    render: (value: string) => {\n      const asset_additional = JSON.parse(value)\n      const focus = asset_additional.regularMarketChange\n      if (focus) {\n        return <div>{focus.fmt}</div>\n      }\n      return null\n    }\n  },\n  {\n    title: 'Market Cap',\n    dataIndex: 'asset_additional',\n    render: (value: string) => {\n      const asset_additional = JSON.parse(value)\n      const focus = asset_additional.marketCap\n      if (focus) {\n        return <div>{focus.fmt}</div>\n      }\n      return null\n    }\n  },\n  {\n    title: '52-Week High',\n    dataIndex: 'asset_additional',\n    render: (value: string) => {\n      const asset_additional = JSON.parse(value)\n      const focus = asset_additional.fiftyTwoWeekHigh\n      if (focus) {\n        return <div>{focus.fmt}</div>\n      }\n      return null\n    }\n  },\n  {\n    title: '52-Week Low',\n    dataIndex: 'asset_additional',\n    render: (value: string) => {\n      const asset_additional = JSON.parse(value)\n      const focus = asset_additional.fiftyTwoWeekLow\n      if (focus) {\n        return <div>{focus.fmt}</div>\n      }\n      return null\n    }\n  },\n]\n","import { Text } from '@rocketmaven/componentsStyled/Typography'\r\nimport { urls } from '@rocketmaven/data/urls'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst investorRenderer = (testVal: any, record: any) => {\r\n  let username = testVal.username\r\n  if (testVal.first_name) {\r\n    username = testVal.first_name\r\n    if (testVal.last_name) {\r\n      username += ' ' + testVal.last_name\r\n    }\r\n  }\r\n  return {\r\n    children: <span>{username}</span>\r\n  }\r\n}\r\n\r\nconst numberChangeRenderer = (testVal: string, record: any) => {\r\n  const text = parseFloat(testVal).toFixed(2)\r\n  return {\r\n    props: {\r\n      style: { color: parseFloat(testVal) < 0 ? 'red' : 'green' }\r\n    },\r\n    children: <span>{text}</span>\r\n  }\r\n}\r\n\r\nconst portfolioLinkRenderer = (testVal: string, record: any) => {\r\n  if (testVal) {\r\n    return <Link to={urls.portfolio + '/' + testVal}>View Portfolio</Link>\r\n  }\r\n  return <Text>Private Portfolio</Text>\r\n}\r\n\r\nexport const portfolioColumns = [\r\n  {\r\n    title: 'Investor',\r\n    dataIndex: 'Investor',\r\n    render: investorRenderer\r\n  },\r\n  { title: 'Buying Power', dataIndex: 'Buying Power' },\r\n  { title: 'Purchase Cost', dataIndex: 'Purchase Cost' },\r\n  { title: 'Current Market', dataIndex: 'Current Market' },\r\n  {\r\n    title: 'Unrealised (Market - Purchase)',\r\n    dataIndex: 'Unrealised',\r\n    render: numberChangeRenderer\r\n  },\r\n  {\r\n    title: 'Realised (Sold Value)',\r\n    dataIndex: 'Realised (Sold Value)',\r\n    render: numberChangeRenderer\r\n  },\r\n  {\r\n    title: 'Explore',\r\n    dataIndex: 'View Portfolio',\r\n    render: portfolioLinkRenderer\r\n  }\r\n]","import { Subtitle, Title } from '@rocketmaven/componentsStyled/Typography'\r\nimport { assetColumns } from '@rocketmaven/data/tableDefinitions/assets'\r\nimport { useFetchTopAdditions } from '@rocketmaven/hooks/http'\r\nimport { PortfolioInfo } from '@rocketmaven/pages/Portfolio/types'\r\nimport Page from '@rocketmaven/pages/_Page'\r\nimport { Table } from 'antd'\r\nimport React from 'react'\r\nimport { portfolioColumns } from './tableDefinitions'\r\n\r\ntype Asset = {\r\n  industry: string\r\n  price_last_updated: Date\r\n  asset_additional: string\r\n  current_price: number\r\n  currency: string\r\n  market_cap: number\r\n  ticker_symbol: string\r\n  name: string\r\n  country: string\r\n  data_source: string\r\n}\r\n\r\nconst TopAdditions = () => {\r\n  const { data, isLoading } = useFetchTopAdditions()\r\n\r\n  let content = null\r\n\r\n  if (!isLoading) {\r\n    const assets: [Asset] = [data.asset]\r\n\r\n    const datas: any = []\r\n    const portfolios: [PortfolioInfo] = [data.portfolio]\r\n    portfolios.forEach((portfolio, index) => {\r\n      datas.push({\r\n        Investor: portfolio.investor,\r\n        'Buying Power': portfolio.buying_power.toFixed(2),\r\n        'Current Market': portfolio.current_value_sum.toFixed(2),\r\n        'Purchase Cost': portfolio.purchase_value_sum.toFixed(2),\r\n        Unrealised: portfolio.current_value_sum - portfolio.purchase_value_sum,\r\n        'Realised (Sold Value)': portfolio.realised_sum,\r\n        'View Portfolio': portfolio.public_portfolio ? portfolio.id : 0\r\n      })\r\n    })\r\n\r\n    content = (\r\n      <React.Fragment>\r\n        <Subtitle>Top Asset</Subtitle>\r\n        <Table\r\n          columns={assetColumns}\r\n          dataSource={assets}\r\n          rowKey=\"id\"\r\n          pagination={false}\r\n          style={{ marginBottom: '4rem' }}\r\n        />\r\n        <Subtitle>Most Viewed Portfolio</Subtitle>\r\n        <Table columns={portfolioColumns} dataSource={datas} rowKey=\"id\" pagination={false} />\r\n      </React.Fragment>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Page>\r\n      <Title>Top Additions</Title>\r\n      {isLoading ? null : content}\r\n    </Page>\r\n  )\r\n}\r\n\r\nexport default TopAdditions\r\n","import { notification } from 'antd'\n\nexport const validatePriceInput = (\n  context: string,\n  price: number,\n  currentPrice: number,\n  assetId: string\n) => {\n  let openMessage = false\n  if (context === 'high') {\n    if (price < currentPrice) {\n      openMessage = true\n    }\n  }\n  if (context === 'low') {\n    if (price > currentPrice) {\n      openMessage = true\n    }\n  }\n  if (openMessage) {\n    notification.info({\n      message: `${assetId} ${context} alert!`,\n      description: `Value is currently ${currentPrice}.`\n    })\n    return true\n  }\n  return true\n}\n","import { useUpdateWatchListItem } from '@rocketmaven/hooks/http'\nimport { Button, Form, Input, InputNumber } from 'antd'\nimport { useHistory } from 'react-router-dom'\nimport { validatePriceInput } from './helper'\n\nconst NotifyContent = (\n  asset_id: string,\n  context: string,\n  price: number,\n  current_price: number,\n  refreshAfterNotificationSet: number,\n  setRefreshAfterNotificationSet: React.Dispatch<React.SetStateAction<number>>\n) => {\n  const updateWatchListItem = useUpdateWatchListItem()\n  const routerObject = useHistory()\n  const updatePrice = async (e: any) => {\n    if (validatePriceInput(e.context, e.price, e.current_price, e.asset_id)) {\n      updateWatchListItem(e.asset_id, e.context, e.price)\n      setRefreshAfterNotificationSet(refreshAfterNotificationSet + 1)\n    }\n  }\n  return (\n    <Form onFinish={updatePrice}>\n      <Form.Item name=\"context\" initialValue={context} noStyle>\n        <Input value={context} type=\"hidden\" />\n      </Form.Item>\n      <Form.Item name=\"asset_id\" initialValue={asset_id} noStyle>\n        <Input value={asset_id} type=\"hidden\" />\n      </Form.Item>\n      <Form.Item name=\"current_price\" initialValue={current_price} noStyle>\n        <Input value={current_price} type=\"hidden\" />\n      </Form.Item>\n      <Form.Item name=\"price\" initialValue={price}>\n        <InputNumber value={price} />\n      </Form.Item>\n      <Form.Item>\n        <Button type=\"primary\" htmlType=\"submit\">\n          Set Notification\n        </Button>\n      </Form.Item>\n    </Form>\n  )\n}\n\nexport default NotifyContent\n","import AssetSearchBox from '@rocketmaven/components/AssetSearchBox'\r\nimport { Card } from '@rocketmaven/componentsStyled/Card'\r\nimport { Title } from '@rocketmaven/componentsStyled/Typography'\r\nimport {\r\n  useAddWatchListItem,\r\n  useDeleteWatchListItem,\r\n  useGetWatchlist\r\n} from '@rocketmaven/hooks/http'\r\nimport Page from '@rocketmaven/pages/_Page'\r\nimport { Button, Form, Table } from 'antd'\r\nimport { isEmpty } from 'ramda'\r\nimport { useState } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { createWatchListColumns } from './tableDefinitions'\r\nimport { AssetInfo, WatchListItem, WatchListPagination } from './types'\r\n\r\nconst Watchlists = () => {\r\n  const [refreshAfterNotificationSet, setRefreshAfterNotificationSet] = useState(1)\r\n  const watchlist: WatchListPagination = useGetWatchlist(refreshAfterNotificationSet)\r\n  const routerObject = useHistory()\r\n  const deleteAssetId = useDeleteWatchListItem()\r\n  const addWatchListItem = useAddWatchListItem()\r\n  const deleteWatchListItem = async (e: any) => {\r\n    const asset_id = e.target.getAttribute('title')\r\n    await deleteAssetId(asset_id)\r\n    setRefreshAfterNotificationSet(refreshAfterNotificationSet + 1)\r\n  }\r\n\r\n  const onFinish = async (values: any) => {\r\n    await addWatchListItem(values.asset_id.value)\r\n    setRefreshAfterNotificationSet(refreshAfterNotificationSet + 1)\r\n  }\r\n\r\n  let watchlistable = null\r\n  if (watchlist && !isEmpty(watchlist)) {\r\n    const watchlistresults: [WatchListItem] = watchlist.results\r\n    let watchlistitems: AssetInfo[] = []\r\n\r\n    watchlistresults.forEach(function (e) {\r\n      e.asset.price_high = e.price_high\r\n      e.asset.price_low = e.price_low\r\n      e.asset.price_high_low = [e.price_high, e.price_low]\r\n      watchlistitems.push(e.asset)\r\n    })\r\n    const columns = createWatchListColumns(\r\n      deleteWatchListItem,\r\n      refreshAfterNotificationSet,\r\n      setRefreshAfterNotificationSet\r\n    )\r\n    watchlistable = <Table columns={columns} dataSource={watchlistitems} rowKey=\"id\" />\r\n  }\r\n\r\n  return !isEmpty(watchlistable) ? (\r\n    <Page key={'watchlist-table-' + refreshAfterNotificationSet}>\r\n      <Title>Watchlist</Title>\r\n\r\n      <Card title=\"Add to Watchlist\">\r\n        <Form onFinish={onFinish}>\r\n          <Form.Item\r\n            name=\"asset_id\"\r\n            label=\"Ticker (EXCHANGE:SYMBOL)\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: 'Please input a ticker!'\r\n              }\r\n            ]}\r\n          >\r\n            <AssetSearchBox showSearch style={{ width: '100%' }} />\r\n          </Form.Item>\r\n          <Form.Item>\r\n            <Button\r\n              type=\"primary\"\r\n              htmlType=\"submit\"\r\n              style={{\r\n                marginRight: '8px',\r\n                marginBottom: '12px'\r\n              }}\r\n            >\r\n              Add\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n      </Card>\r\n\r\n      {watchlistable}\r\n    </Page>\r\n  ) : null\r\n}\r\n\r\nexport default Watchlists\r\n","import { Button, Popover } from 'antd'\nimport { Link } from 'react-router-dom'\nimport NotifyContent from './NotifyContent'\n\nexport const createWatchListColumns = (\n  deleteWatchListItem: any,\n  refreshAfterNotificationSet: number,\n  setRefreshAfterNotificationSet: React.Dispatch<React.SetStateAction<number>>\n) => {\n  return [\n    {\n      title: 'Ticker',\n      dataIndex: 'ticker_symbol',\n      render: (value: string) => (\n        <Link\n          to={`/asset/${value}`}\n          style={{\n            marginRight: '8px',\n            marginBottom: '12px'\n          }}\n        >\n          {value}\n        </Link>\n      )\n    },\n    {\n      title: 'Name',\n      dataIndex: 'asset_additional',\n      render: (value: string) => {\n        console.log(JSON.parse(value))\n        const asset_additional = JSON.parse(value)\n        const focus = asset_additional.longName\n        if (focus) {\n          return <div>{focus}</div>\n        }\n        return null\n      }\n    },\n    {\n      title: 'Price',\n      dataIndex: 'current_price'\n    },\n    {\n      title: 'Change',\n      dataIndex: 'asset_additional',\n      render: (value: string) => {\n        const asset_additional = JSON.parse(value)\n        const focus = asset_additional.regularMarketChange\n        if (focus) {\n          return <div>{focus.fmt}</div>\n        }\n        return null\n      }\n    },\n    {\n      title: 'Market Cap',\n      dataIndex: 'asset_additional',\n      render: (value: string) => {\n        const asset_additional = JSON.parse(value)\n        const focus = asset_additional.marketCap\n        if (focus) {\n          return <div>{focus.fmt}</div>\n        }\n        return null\n      }\n    },\n    {\n      title: '52-Week High',\n      dataIndex: 'asset_additional',\n      render: (value: string) => {\n        const asset_additional = JSON.parse(value)\n        const focus = asset_additional.fiftyTwoWeekHigh\n        if (focus) {\n          return <div>{focus.fmt}</div>\n        }\n        return null\n      }\n    },\n    {\n      title: '52-Week Low',\n      dataIndex: 'asset_additional',\n      render: (value: string) => {\n        const asset_additional = JSON.parse(value)\n        const focus = asset_additional.fiftyTwoWeekLow\n        if (focus) {\n          return <div>{focus.fmt}</div>\n        }\n        return null\n      }\n    },\n    {\n      title: 'Notify Low / High',\n      dataIndex: 'price_high_low',\n      render: (value: [number, number], record: any) => {\n        return (\n          <>\n            Above High:{' '}\n            <Popover\n              content={NotifyContent(\n                record.ticker_symbol,\n                'high',\n                value[0],\n                record.current_price,\n                refreshAfterNotificationSet,\n                setRefreshAfterNotificationSet\n              )}\n              title=\"Set High\"\n              placement=\"bottom\"\n              trigger=\"hover\"\n            >\n              <Popover\n                content={NotifyContent(\n                  record.ticker_symbol,\n                  'high',\n                  value[0],\n                  record.current_price,\n                  refreshAfterNotificationSet,\n                  setRefreshAfterNotificationSet\n                )}\n                title=\"Set High\"\n                placement=\"bottom\"\n                trigger=\"click\"\n              >\n                <Button type=\"link\">{value[0] ? value[0] : 'Change me!'}</Button>\n              </Popover>\n            </Popover>\n            <br />\n            Below Low:{' '}\n            <Popover\n              content={NotifyContent(\n                record.ticker_symbol,\n                'low',\n                value[1],\n                record.current_price,\n                refreshAfterNotificationSet,\n                setRefreshAfterNotificationSet\n              )}\n              title=\"Set Low\"\n              placement=\"bottom\"\n              trigger=\"hover\"\n            >\n              <Popover\n                content={NotifyContent(\n                  record.ticker_symbol,\n                  'low',\n                  value[1],\n                  record.current_price,\n                  refreshAfterNotificationSet,\n                  setRefreshAfterNotificationSet\n                )}\n                title=\"Set Low\"\n                placement=\"bottom\"\n                trigger=\"click\"\n              >\n                <Button type=\"link\">{value[1] ? value[1] : 'Change me!'}</Button>\n              </Popover>\n            </Popover>\n          </>\n        )\n      }\n    },\n    {\n      title: 'Delete',\n      dataIndex: 'ticker_symbol',\n      key: 'x',\n      render: (value: string) => (\n        <a title={value} onClick={deleteWatchListItem}>\n          Delete\n        </a>\n      )\n    }\n  ]\n}\n","import { urls } from '@rocketmaven/data/urls'\r\nimport { useStore } from '@rocketmaven/hooks/store'\r\nimport Account from '@rocketmaven/pages/Account'\r\nimport AdvancedSearch from '@rocketmaven/pages/AdvancedSearch'\r\nimport Asset from '@rocketmaven/pages/Asset'\r\nimport Compare from '@rocketmaven/pages/Compare'\r\nimport Explore from '@rocketmaven/pages/Explore'\r\nimport Forgot from '@rocketmaven/pages/Forgot'\r\nimport Leaderboard from '@rocketmaven/pages/Leaderboard'\r\nimport LogIn from '@rocketmaven/pages/LogIn'\r\nimport PasswordReset from '@rocketmaven/pages/PasswordReset'\r\nimport Portfolio from '@rocketmaven/pages/Portfolio'\r\nimport Report from '@rocketmaven/pages/Report'\r\nimport SignUp from '@rocketmaven/pages/SignUp'\r\nimport TopAdditions from '@rocketmaven/pages/TopAdditions'\r\nimport Watchlists from '@rocketmaven/pages/Watchlists'\r\nimport { Redirect, Route, Switch } from 'react-router-dom'\r\n\r\n\r\nconst Routes = () => {\r\n  const { isLoggedIn } = useStore()\r\n  return (\r\n    <Switch>\r\n      {/* TODO(Jude): Distinguish between logged in and logged out routes and prevent\r\n      accessability */}\r\n      <Route\r\n        exact\r\n        path={urls.root}\r\n        render={() =>\r\n          isLoggedIn ? <Redirect to={urls.portfolio} /> : <Redirect to={urls.explore} />\r\n        }\r\n      ></Route>\r\n      <Route exact path={urls.explore} component={Explore} />\r\n      <Route exact path={urls.leaderboard} component={Leaderboard} />\r\n      <Route exact path={urls.compare} component={Compare} />\r\n      <Route exact path={urls.login} component={LogIn} />\r\n      <Route exact path={urls.forgot} component={Forgot} />\r\n      <Route exact path={urls.passwordReset} component={PasswordReset} />\r\n      <Route exact path={urls.signup} component={SignUp} />\r\n      <Route exact path={urls.advancedSearch} component={AdvancedSearch} />\r\n      <Route path={urls.login} component={LogIn} />\r\n      <Route path={urls.portfolio} component={Portfolio} />\r\n      <Route path={urls.asset} component={Asset} />\r\n      <Route path={urls.account} component={Account} />\r\n      <Route path={urls.watchlists} component={Watchlists} />\r\n      <Route path={urls.report} component={Report} />\r\n      <Route path={urls.topAdditions} component={TopAdditions} />\r\n    </Switch>\r\n  )\r\n}\r\n\r\nexport default Routes\r\n","import { urls } from '@rocketmaven/data/urls'\nimport { useStore } from '@rocketmaven/hooks/store'\nimport { LogoWrap, MenuItemWrap, SidebarWrap } from '@rocketmaven/pages/_Page/styled'\nimport React from 'react'\nimport {\n  FaBriefcase,\n  FaFileAlt,\n  FaNetworkWired,\n  FaSignInAlt,\n  FaStar,\n  FaUser,\n  FaUserPlus\n} from 'react-icons/fa'\nimport { Link, useLocation } from 'react-router-dom'\n\nconst size = {\n  width: 30,\n  height: 30\n}\n\ntype SideBarItem = {\n  name: string\n  to: string\n  icon: any\n  notification?: any\n}\n\nfunction sideBarItems(isLoggedIn: boolean) {\n  const itemsWhenNotLoggedIn: Array<SideBarItem> = [\n    { name: 'Explore', to: urls.explore, icon: <FaNetworkWired /> },\n    { name: 'Sign Up', to: urls.signup, icon: <FaUserPlus /> },\n    { name: 'Log In', to: urls.login, icon: <FaSignInAlt /> }\n  ]\n  const itemsWhenLoggedIn: Array<SideBarItem> = [\n    { name: 'Explore', to: urls.explore, icon: <FaNetworkWired /> },\n    { name: 'Portfolio', to: urls.portfolio, icon: <FaBriefcase /> },\n    { name: 'Account', to: urls.account, icon: <FaUser /> },\n    { name: 'Watchlist', to: urls.watchlists, icon: <FaStar /> },\n    { name: 'Report', to: urls.report, icon: <FaFileAlt /> }\n  ]\n  return isLoggedIn ? itemsWhenLoggedIn : itemsWhenNotLoggedIn\n}\n\nconst Logo = () => {\n  return (\n    <LogoWrap>\n      <a href=\"/\">\n        <img src=\"/logo.svg\" width=\"200px\" />\n      </a>\n    </LogoWrap>\n  )\n}\n\ntype Props = {\n  collapsed: boolean\n}\n\nconst SideBar = ({ collapsed }: Props) => {\n  const location = useLocation()\n  const { isLoggedIn } = useStore()\n\n  const items = sideBarItems(isLoggedIn)\n  const sideBar = items.map((item) => (\n    <React.Fragment>\n      <MenuItemWrap key={item.to} icon={item.icon}>\n        <Link to={item.to}>{item.name} </Link>\n      </MenuItemWrap>\n    </React.Fragment>\n  ))\n\n  return (\n    <SidebarWrap\n      defaultSelectedKeys={['/']}\n      selectedKeys={[location.pathname]}\n      style={{ border: '0' }}\n    >\n      <Logo />\n      {sideBar}\n    </SidebarWrap>\n  )\n}\n\nexport default SideBar\n","import { urls } from '@rocketmaven/data/urls'\nimport { Button, Input } from 'antd'\nimport { useState } from 'react'\nimport { FaSearch } from 'react-icons/fa'\nimport { useHistory } from 'react-router'\n\nconst NavbarSearchBox = (props: any) => {\n  const [search, setSearch] = useState<string>('')\n  const routerObject = useHistory()\n\n  const startSearch = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault()\n    // https://stackoverflow.com/questions/59464337/how-to-send-params-in-usehistory-of-react-router-dom\n    routerObject.push({\n      pathname: urls.advancedSearch,\n      search: `?q=${search}`,\n      state: {\n        // location state\n        update: true\n      }\n    })\n  }\n\n  return (\n    <form onSubmit={startSearch} style={{ display: 'inline' }}>\n      <Input\n        placeholder=\"Search Asset\"\n        {...props}\n        onChange={(search: React.ChangeEvent<HTMLInputElement>) => {\n          setSearch(search.target.value)\n        }}\n      />\n      <Button\n        style={{\n          marginLeft: '0.5rem',\n          marginRight: '0.5rem'\n        }}\n        htmlType=\"submit\"\n      >\n        <FaSearch />\n      </Button>\n    </form>\n  )\n}\n\nexport default NavbarSearchBox\n","import NavbarSearchBox from '@rocketmaven/components/NavbarSearchBox'\nimport { storeContext } from '@rocketmaven/data/app/store'\nimport { urls } from '@rocketmaven/data/urls'\nimport { useStore } from '@rocketmaven/hooks/store'\nimport { HeaderWrap } from '@rocketmaven/pages/_Page/styled'\nimport { Menu, message } from 'antd'\nimport { useContext } from 'react'\nimport { FaSignOutAlt } from 'react-icons/fa'\nimport { Link } from 'react-router-dom'\n\ntype Props = {\n  children: React.ReactNode\n}\n\nconst NavBar = ({ children }: Props) => {\n  const { state } = useContext(storeContext)\n  const { isLoggedIn } = state\n\n  // Basic logout functionality - get rid of when we have a proper logout button\n  const { dispatch } = useStore()\n\n  let logoutButton = null\n  if (isLoggedIn) {\n    logoutButton = (\n      <Menu.Item icon={<FaSignOutAlt />}>\n        <Link\n          onClick={() => {\n            dispatch({ type: 'LOGOUT' })\n            message.info('You have logged out!')\n          }}\n          to={urls.root}\n        >\n          Log Out\n        </Link>\n      </Menu.Item>\n    )\n  }\n\n  return (\n    <HeaderWrap>\n      {children}\n      <NavbarSearchBox style={{ width: '50%', marginLeft: '3rem' }} />\n\n      <Menu mode=\"horizontal\" defaultSelectedKeys={['2']} style={{ float: 'right' }}>\n        <Menu.Item key=\"1\"></Menu.Item>\n        {logoutButton}\n      </Menu>\n    </HeaderWrap>\n  )\n}\n\nexport default NavBar\n","import { MenuFoldOutlined, MenuUnfoldOutlined } from '@ant-design/icons'\nimport Routes from '@rocketmaven/App/Routes'\nimport SideBar from '@rocketmaven/App/SideBar'\nimport { AppWrap, ContentWrap } from '@rocketmaven/App/styled'\nimport NavBar from '@rocketmaven/components/NavBar'\nimport { Store } from '@rocketmaven/data/app/store'\nimport { SiderWrap } from '@rocketmaven/pages/_Page/styled'\nimport { Layout } from 'antd'\nimport 'antd/dist/antd.less'\nimport React, { useState } from 'react'\nimport { BrowserRouter } from 'react-router-dom'\nconst { Header, Content, Sider } = Layout\n\nconst App = () => {\n  const [collapsed, setCollapsed] = useState(false)\n\n  return (\n    <BrowserRouter>\n      <Store>\n        <AppWrap>\n          <SiderWrap trigger={null} collapsible collapsed={collapsed} theme=\"light\">\n            <SideBar collapsed={collapsed} />\n          </SiderWrap>\n\n          <ContentWrap data-collapsed={collapsed}>\n            <NavBar>\n              {React.createElement(collapsed ? MenuUnfoldOutlined : MenuFoldOutlined, {\n                className: 'trigger',\n                onClick: () => {\n                  setCollapsed(!collapsed)\n                }\n              })}\n            </NavBar>\n            <Routes />\n          </ContentWrap>\n        </AppWrap>\n      </Store>\n    </BrowserRouter>\n  )\n}\n\nexport default App\n","import App from '@rocketmaven/App'\nimport '@rocketmaven/index.less'\nimport React from 'react'\nimport ReactDOM from 'react-dom'\n// import reportWebVitals from '@rocketmaven/reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}